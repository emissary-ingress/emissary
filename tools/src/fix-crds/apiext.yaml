---
################################################################################
# Namespace                                                                    #
################################################################################
---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Names.Namespace }}
---
################################################################################
# ServiceAccount                                                               #
################################################################################
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Names.ServiceAccount }}
  namespace: {{ .Names.Namespace }}
  labels:
    {{- range $k, $v := .Labels }}
    {{ $k }}: {{ $v }}
    {{- end }}
{{- if eq .Target "apiserver-kat" }}
{serviceAccountExtra}
{{- end }}
---
################################################################################
# Cluster permissions                                                          #
################################################################################
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Names.ClusterRole }}
  labels:
    {{- range $k, $v := .Labels }}
    {{ $k }}: {{ $v }}
    {{- end }}
rules:
  - apiGroups: [ "apiextensions.k8s.io" ]
    resources: [ "customresourcedefinitions" ]
    verbs: [ "list", "watch" ]
  - apiGroups: [ "apiextensions.k8s.io" ]
    resources: [ "customresourcedefinitions" ]
    resourceNames:
      {{- range $crdName := .CRDNames }}
      - {{ $crdName }}
      {{- end }}
    verbs: [ "update" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: emissary-apiext
  labels:
    {{- range $k, $v := .Labels }}
    {{ $k }}: {{ $v }}
    {{- end }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ .Names.ClusterRole }}
subjects:
  - kind: ServiceAccount
    namespace: {{ .Names.Namespace }}
    name: {{ .Names.ServiceAccount }}
---
################################################################################
# Namespaced permissions                                                       #
################################################################################
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Names.Role }}
  namespace: {{ .Names.Namespace }}
  labels:
    {{- range $k, $v := .Labels }}
    {{ $k }}: {{ $v }}
    {{- end }}
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["emissary-ingress-webhook-ca"]
    verbs: ["get", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: emissary-apiext
  namespace: {{ .Names.Namespace }}
  labels:
    {{- range $k, $v := .Labels }}
    {{ $k }}: {{ $v }}
    {{- end }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .Names.Role }}
subjects:
- kind: ServiceAccount
  namespace: {{ .Names.Namespace }}
  name: {{ .Names.ServiceAccount }}
---
################################################################################
# Main                                                                         #
################################################################################
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Names.Service }}
  namespace: {{ .Names.Namespace }}
  labels:
    {{- range $k, $v := .Labels }}
    {{ $k }}: {{ $v }}
    {{- end }}
spec:
  type: ClusterIP
  ports:
    - name: https
      port: 443
      targetPort: https
  selector:
    {{- range $k, $v := .LabelSelectors }}
    {{ $k }}: {{ $v }}
    {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: emissary-apiext
  namespace: {{ .Names.Namespace }}
  labels:
    {{- range $k, $v := .Labels }}
    {{ $k }}: {{ $v }}
    {{- end }}
spec:
  selector:
    matchLabels:
      {{- range $k, $v := .LabelSelectors }}
      {{ $k }}: {{ $v }}
      {{- end }}
  replicas: 3
  template:
    metadata:
      labels:
        {{- range $k, $v := .Labels }}
        {{ $k }}: {{ $v }}
        {{- end }}
    spec:
      serviceAccountName: {{ .Names.ServiceAccount }}
      containers:
        - name: emissary-apiext
          image: {{ .Image }}
          imagePullPolicy: IfNotPresent
          command: [ "apiext", "{{ .Names.Service }}" ]
          ports:
            - name: http
              containerPort: 8080
            - name: https
              containerPort: 8443
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /probes/live
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 3
            failureThreshold: 3
