# @TEMPLATE@
#
# This file is roughly:
# cat <(curl https://getambassador.io/yaml/ambassador/ambassador-rbac.yaml) \
#     <(curl https://getambassador.io/yaml/ambassador/ambassador-service.yaml) \
#     <(curl https://getambassador.io/yaml/ambassador/pro/ambassador-pro.yaml)
# but:
#  - split in to sections, for readability
#  - modified to work with Kubernaut
#  - with TLS enabled
#  - with the ambassador-pro.yaml bit modified to be a sidecar of the
#    main ambassador deployment
#  - with the "telepresence-proxy" Service+Deployment added

######################################################################
# Create a CRDs used to configure ambassador-pro
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: filterpolicies.getambassador.io
spec:
  group: getambassador.io
  version: v1beta2
  versions:
  - name: v1beta2
    served: true
    storage: true
  scope: Namespaced
  names:
    plural: filterpolicies
    singular: filterpolicy
    kind: FilterPolicy
    shortNames:
    - fp
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: filters.getambassador.io
spec:
  group: getambassador.io
  version: v1beta2
  versions:
  - name: v1beta2
    served: true
    storage: true
  scope: Namespaced
  names:
    plural: filters
    singular: filter
    kind: Filter
    shortNames:
    - fil
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: ratelimits.getambassador.io
spec:
  group: getambassador.io
  version: v1beta2
  versions:
    - name: v1beta2
      served: true
      storage: true
  scope: Namespaced
  names:
    plural: ratelimits
    singular: ratelimit
    kind: RateLimit
    shortNames:
    - rl


######################################################################
# Create the 'ambassador', 'ambassador-admin', and 'ambassador-pro'
# Services, and the Deployment that backs them all.
---
apiVersion: v1
kind: Service
metadata:
  name: ambassador-pro-rlonly-pro
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v1
      kind: RateLimitService
      ambassador_id: ambassador-pro-rlonly
      name: ambassador-pro
      service: "127.0.0.1:8501"
spec:
  type: ClusterIP
  selector:
    service: ambassador-pro-rlonly
  ports:
  - name: grpc-auth
    port: 80
    targetPort: grpc-auth
  - name: grpc-ratelimit
    port: 81
    targetPort: grpc-ratelimit
  - name: http-debug
    port: 82
    targetPort: http-debug
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: ambassador-pro-rlonly-admin
  name: ambassador-pro-rlonly-admin
spec:
  type: NodePort
  ports:
  - name: ambassador-admin
    port: 8877
    targetPort: 8877
  selector:
    service: ambassador-pro-rlonly
---
apiVersion: v1
kind: Service
metadata:
  name: ambassador-pro-rlonly
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v0
      kind: Module
      ambassador_id: ambassador-pro-rlonly
      name: tls
      config:
        server:
          enabled: True
          redirect_cleartext_from: 80
          alpn_protocols: h2
spec:
  type: NodePort # XXX: Kubernaut
  externalTrafficPolicy: Local
  ports:
  - name: http
    port: 80
    targetPort: 80
  - name: https
    port: 443
    targetPort: 443
  selector:
    service: ambassador-pro-rlonly
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ambassador-pro-rlonly
spec:
  replicas: 3
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
        "consul.hashicorp.com/connect-inject": "false"
      labels:
        service: ambassador-pro-rlonly
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: cloud.google.com/gke-nodepool
                    operator: In
                    values: ["backends"]
      serviceAccountName: ambassador-pro
      containers:
      - name: ambassador
        image: quay.io/datawire/ambassador:{{env "AMBASSADOR_VERSION"}}
# XXX: Kubernaut
#        resources:
#          limits:
#            cpu: 1
#            memory: 400Mi
#          requests:
#            cpu: 200m
#            memory: 100Mi
        env:
        - name: AMBASSADOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AMBASSADOR_ID
          value: "ambassador-pro-rlonly"
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        - name: admin
          containerPort: 8877
        livenessProbe:
          httpGet:
            path: /ambassador/v0/check_alive
            port: 8877
          initialDelaySeconds: 30
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /ambassador/v0/check_ready
            port: 8877
          initialDelaySeconds: 30
          periodSeconds: 3
      - name: ambassador-pro
        image: {{env "AMB_SIDECAR_IMAGE"}}
        ports:
        - name: grpc-auth
          containerPort: 8500
        - name: grpc-ratelimit
          containerPort: 8501
        - name: http-debug
          containerPort: 8502
        env:
        - name: APP_LOG_LEVEL
          value: warn
        - name: LOG_LEVEL
          value: warn
        - name: REDIS_SOCKET_TYPE # For ratelimit
          value: tcp
        - name: REDIS_URL # For ratelimit
          value: ambassador-pro-redis:6379
        - name: AMBASSADOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AMBASSADOR_SINGLE_NAMESPACE
          value: "true"
        - name: AMBASSADOR_LICENSE_KEY # For everything
          value: {{env "AMBASSADOR_LICENSE_KEY"}}
      restartPolicy: Always
