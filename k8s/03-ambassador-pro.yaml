# @TEMPLATE@

######################################################################
# Configure Ambassador OSS to use Ambassador Pro.
---
apiVersion: getambassador.io/v1
kind: RateLimitService
metadata:
  name: ambassador-pro
spec:
  service: "127.0.0.1:8500"
---
apiVersion: getambassador.io/v1
kind: AuthService
metadata:
  name: authentication
spec:
  proto: grpc
  status_on_error:
    code: 504
  auth_service: "127.0.0.1:8500"
  allow_request_body: false # setting this to 'true' allows Plugin and External filters to access the body, but has performance overhead
---
apiVersion: getambassador.io/v1
kind: Mapping
metadata:
  name: ambassador-pro
spec:
  prefix: /.ambassador/
  rewrite: ""
  service: "127.0.0.1:8500"
---
# Dev Portal
apiVersion: getambassador.io/v1
kind: Mapping
metadata:
  name: ambassador-pro-devportal
spec:
  prefix: /documentation/
  rewrite: "/docs/"
  add_response_headers:
    x-test-proto: "%PROTOCOL%"
    x-test-ip: "%DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT%"
    x-test-static: This is apro mapping
  service: "127.0.0.1:8500"
---
apiVersion: getambassador.io/v1
kind: Mapping
metadata:
  name: ambassador-pro-devportal-api
spec:
  prefix: /openapi/
  rewrite: ""
  add_response_headers:
    x-test-proto: "%PROTOCOL%"
    x-test-ip: "%DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT%"
    x-test-static: This is apro api mapping
  service: "127.0.0.1:8500"
---
apiVersion: getambassador.io/v1beta2
kind: FilterPolicy
metadata:
  name: apro-internal-access-control
  namespace: default
spec:
  rules:
    - host: "*"
      path: "*/.ambassador-internal/*"
      filters:
        - name: apro-internal-access-control
---
apiVersion: getambassador.io/v1beta2
kind: Filter
metadata:
  name: ambassador-pro-internal-access-control
spec:
  Internal: {}
---
# This mapping needs to exist, but is never actually followed.
apiVersion: getambassador.io/v1
kind: Mapping
metadata:
  name: callback-mapping
spec:
  prefix: /callback
  service: NoTaReAlSeRvIcE

######################################################################
# Create the 'ambassador', 'ambassador-admin', and 'ambassador-pro'
# Services, and the Deployment that backs them all.
---
apiVersion: v1
kind: Service
metadata:
  name: ambassador-pro
spec:
  type: ClusterIP
  selector:
    service: ambassador-pro
  ports:
  - name: http
    port: 80
    targetPort: pro-http
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: ambassador-admin
  name: ambassador-admin
spec:
  type: NodePort
  ports:
  - name: ambassador-admin
    port: 8877
    targetPort: admin
  selector:
    service: ambassador-pro
---
apiVersion: v1
kind: Service
metadata:
  name: ambassador
spec:
  type: NodePort # XXX: Kubernaut
  externalTrafficPolicy: Local
  ports:
  - name: http
    port: 80
    targetPort: http
  - name: https
    port: 443
    targetPort: https
  selector:
    service: ambassador-pro
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ambassador-pro
spec:
  replicas: 1 # XXX: Kubernaut
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
        "consul.hashicorp.com/connect-inject": "false"
      labels:
        service: ambassador-pro
    spec:
      serviceAccountName: ambassador-pro
      terminationGracePeriodSeconds: 0
      containers:
      - name: ambassador
        image: {{env "AMBASSADOR_IMAGE"}}
# XXX: Kubernaut
#        resources:
#          limits:
#            cpu: 1
#            memory: 400Mi
#          requests:
#            cpu: 200m
#            memory: 100Mi
        env:
        - name: AMBASSADOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AMBASSADOR_SINGLE_NAMESPACE
          value: "true"
        - name: SCOUT_DISABLE
          value: "1"
        - name: AMBASSADOR_LICENSE_KEY
          ## Unlike all the rest of the YAML, this uses a v0 license
          ## key, to make sure that they continue to work for newer
          ## releases.  If that breaks, `make deploy` will time out,
          ## because this pod will never pass its readiness checks.
          ## The `tests/cluster/licensekeys/` e2e tests mostly do this,
          ## but they run directly on compiled binaries, not the Docker
          ## images supposedly containing those binaries.  We had an
          ## issue where the Envoy binary was too aggressively cached,
          ## and even though we compiled a new Envoy binary, the
          ## amb-core image contained the old cached binary.
          #value: {{env "AMBASSADOR_LICENSE_KEY_V0"}}
          value: {{env "AMBASSADOR_LICENSE_KEY"}}
        ports:
          - name: http
            containerPort: 8080
          - name: https
            containerPort: 8443
          - name: admin
            containerPort: 8877
        livenessProbe:
          httpGet:
            path: /ambassador/v0/check_alive
            port: 8877
          initialDelaySeconds: 30
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /ambassador/v0/check_ready
            port: 8877
          initialDelaySeconds: 30
          periodSeconds: 3
      - name: ambassador-pro
        image: {{env "AMB_SIDECAR_IMAGE"}}
        ports:
        - name: pro-http
          containerPort: 8500
        livenessProbe:
          httpGet:
            path: /_/sys/healthz
            port: 8500
          initialDelaySeconds: 30
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /_/sys/readyz
            port: 8500
          initialDelaySeconds: 30
          periodSeconds: 5
        env:
        - name: APP_LOG_LEVEL
          value: DEBUG
        - name: REDIS_SOCKET_TYPE
          value: tcp
        - name: REDIS_URL
          value: ambassador-pro-redis:6379
        - name: AMBASSADOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AMBASSADOR_SINGLE_NAMESPACE
          value: "true"
        - name: AMBASSADOR_LICENSE_KEY
          value: {{env "AMBASSADOR_LICENSE_KEY"}}
        # DevPortal settings
        - name: AMBASSADOR_URL
          value: "https://ambassador.default.svc.cluster.local"
        # Change this if you want different poll rate for getting OpenAPI docs:
        - name: POLL_EVERY_SECS
          value: "60"
        - name: AMBASSADOR_INTERNAL_URL
          value: "https://127.0.0.1:8443"
        - name: AMBASSADOR_ADMIN_URL
          value: "http://127.0.0.1:8877"
      restartPolicy: Always
