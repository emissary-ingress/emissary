# @TEMPLATE@

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: consul-connect-integration
rules:
- apiGroups: [""]
  resources:
  - secrets
  verbs: ["get", "list", "create", "delete", "patch"]

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: consul-connect-integration
{{ if env "DEV_USE_IMAGEPULLSECRET" | ne "" }}
imagePullSecrets:
- name: dev-image-pull-secret
{{ end }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: consul-connect-integration
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: consul-connect-integration
subjects:
- kind: ServiceAccount
  name: consul-connect-integration
  namespace: default

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consul-connect-integration
  labels:
    component: consul-connect-integration
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      component: consul-connect-integration
  template:
    metadata:
      labels:
        component: consul-connect-integration
    spec:
      serviceAccountName: consul-connect-integration
      terminationGracePeriodSeconds: 0
      containers:
      - name: consul-connect-integration
        image: {{env "CONSUL_CONNECT_INTEGRATION_IMAGE"}}
        imagePullPolicy: Always
        env:
          # Consul runs as a DaemonSet on each Node therefore we need to talk to the Host machine.
          # See: https://www.consul.io/docs/platform/k8s/run.html#architecture
          - name: _CONSUL_HOST
            value: consul
          - name: AMBASSADOR_LICENSE_KEY
            value: {{env "AMBASSADOR_LICENSE_KEY"}}
