# @TEMPLATE@
{{ $AmbassadorURL := "https://ambassador.ambassador.svc.cluster.local" }}

{{ $UAA_ClientID := "ambassador" }}
{{ $UAA_ClientSecret := "ambassador" }}

---
apiVersion: getambassador.io/v2
kind: Filter
metadata:
  name: uaa
spec:
  OAuth2:
    authorizationURL: http://uaa.default.svc.cluster.local/uaa
    clientURL: {{ $AmbassadorURL }}
    clientID: {{ $UAA_ClientID }}
    secret: {{ $UAA_ClientSecret }}
---
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  name: filter-oauth2-uaa-mapping
spec:
  prefix: /uaa/httpbin/
  rewrite: /
  service: httpbin.org:80
  host_rewrite: httpbin.org
  timeout_ms: 5000
---
apiVersion: getambassador.io/v2
kind: FilterPolicy
metadata:
  name: filter-oauth2-uaa-policy
spec:
  rules:
  - host: "*"
    path: /uaa/httpbin/**
    filters:
    - name: uaa
################################################################################
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: uaa-config
data:
  uaa.yml: |
    oauth:
      clients:
        {{ $UAA_ClientID }}:
          name: ambassador client
          override: true
          scope: openid
          authorities: uaa.none
          authorized-grant-types: authorization_code
          secret: {{ $UAA_ClientSecret }}
          redirect-uri: {{ $AmbassadorURL }}/.ambassador/oauth2/redirection-endpoint
    jwt:
      token:
        signing-key: |
          -----BEGIN RSA PRIVATE KEY-----
          MIIEpAIBAAKCAQEA7Z1HBM6QFqnIJ1UA3NWnYMuubt4XlfbP1/GopTWUmchKataM
          0Ja0RaIbwRh8Z7Ciad5oyGAd0HvZukxnM7Gu3lsU89Dl2LPFolfY1GmEszDil58O
          gKd+4bHAkUZNupvpowc82buAR6dBhuBxs8t2QCXmqtYDTezyb3dP8ZcWsQty9F+9
          aTRqVYeFHvKHEj12JAnGUChQ5prX8HDEdhyOJQ8Zs627dBijTzvvgorhbTGPT1Xn
          64G1ILQEAq7Y9pGsuMiqgj9hgGSVZUbYtWxMnjCxlXDGsmJH4OJDlqwl3jchTOCb
          jAlWRQS4nDnc97kbxhoZuin8KKLl4qQw9+2cswIDAQABAoIBAHW0AwoOiLGxSMSz
          Bspdy5vXSYEB4w0WRb7ipnewIvxKixKBVR++h2427yinyHhUtx9aXO1lL1+m+iOe
          1UB2M/lRhP+B61l9M9lHStFts55QCO6yi6yPS/rg4lMUUEywDvwDCdGRX+oeoAcA
          B1LY5qrAG5NkkB550V4F7EPwY/0uik2wBxK5m/EJlzihWofOTbfgFgS+gYthA22k
          WJzBWM9/Qc31oD/1VMLhhGNh+8VVq+y8cPGdiLvm4ZO4HjxnILaYnpxdUy2YxjnO
          +MH7W71+h9Ej3Z3EO3Nxvy9+yPhoWiJkcljATnp/VSdU+o+/JErccpyNOpj/j6EZ
          sCazo4ECgYEA+5lW0PMe1P/fK/SMTvix1W8nR7QiauounoBFGcYDeVg16W76o5x/
          pJOuTG91QShIQ/2guludPOOm+rO+MJtOLf3DpJgu1HuFLZigtKgO1kWaj0nmI12E
          kiCUsj5ljmjT6bnAFGkT7iE05DwLR/SZj+0alN+6Q2FtABECzZhruLcCgYEA8cVQ
          rVqzLkulgea0SzSaOFCYs5AgmNFg4OCG9wMqcuqv66dObFUX4qhztviJ1fXKf6k0
          P/+QvKy3Agh14Nhh7MTp2voez82kU9gW6sNljh9ZqAnXO7uN5cL5hHc0Gp6CPCiG
          Lxd0yDJWtWlQAJkwjCW0Nw+uf5LlVTjj/xB+p+UCgYEAwYyErNlarqDoHfhSt625
          oGeR4CdDEtx0YJpsjhc2NPMXBizJw3Nw/jpdq49StH04mpVSQAqaO20l11bOyLWw
          vtCo4MXxwKQFH756Yn+mak/BRtmioTIf+gn2WeiGV7dszjCHAyySmG4TMkC+rOwN
          9hqAiGZT8+HO6G4tqdvHgqECgYB8c2w2//QyBYB5oI74E2i7SkmATNVqtISg3RK8
          PeXw53uM2z9UJm04ICwIaGFTQMVu92NM+jm/1UwTANXk2p11qlsSfCO2Jg3LlvUc
          /V3eTabyB7bCKaY+OiIEnPO2LBev7dA8l19m2fqmQUKMPE6wJYxht3HEe5IPT0yV
          dCEuPQKBgQCxinWEWb1aWZP1WZDUHKwf7c4RTYoWS4J6ONJDa2HquJBKd0Ap9eyL
          himZmQi5uATk8OhIugX9XfuYDNxN887XhTBFw5ZVkxjbsFUUbzVcucCnpwntfwWn
          QSbJdIbUBwL8BcrfNw4ebp1DgTI9F45Re+evky0A82aL0/BvBHu8og==
          -----END RSA PRIVATE KEY-----
    scim:
      users:
      - testuser@example.com|12345|scim.read,openid
---
apiVersion: v1
kind: Service
metadata:
  name: uaa
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
  selector:
    app: uaa
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uaa
spec:
  replicas: 1
  selector:
    matchLabels:
      app: uaa
  template:
    metadata:
      labels:
        app: uaa
    spec:
      volumes:
      - name: config-volume
        configMap:
          name: uaa-config
      - name: log-volume
        emptyDir: {}
      containers:
      - name: gradle
        image: {{env "MODEL_CLUSTER_UAA_IMAGE"}}
        env:
        - name: CLOUDFOUNDRY_CONFIG_PATH
          value: /etc/cloudfoundry
        volumeMounts:
        - name: config-volume
          mountPath: /etc/cloudfoundry
        - name: log-volume
          mountPath: /tmp
        ports:
        - name: http
          containerPort: 8080
        readinessProbe:
          httpGet:
            path: /uaa
            port: 8080
      - name: uaa
        image: alpine:3.8
        args: ["/bin/sh", "-c", "while ! test -f \"$1\"; do sleep 1; done; tail -n+1 -f \"$1\"", "--", "/tmp/cargo/conf/logs/uaa.log"]
        volumeMounts:
        - name: log-volume
          mountPath: /tmp
      - name: uaa-events
        image: alpine:3.8
        args: ["/bin/sh", "-c", "while ! test -f \"$1\"; do sleep 1; done; tail -n+1 -f \"$1\"", "--", "/tmp/cargo/conf/logs/uaa_events.log"]
        volumeMounts:
        - name: log-volume
          mountPath: /tmp
      - name: statsd
        image: alpine:3.8
        args: ["/bin/sh", "-c", "while ! test -f \"$1\"; do sleep 1; done; tail -n+1 -f \"$1\"", "--", "/tmp/cargo/conf/logs/statsd.log"]
        volumeMounts:
        - name: log-volume
          mountPath: /tmp
