# @TEMPLATE@

{{ $AmbassadorURL := "https://ambassador.ambassador.svc.cluster.local" }}

# 04-filter-oauth2-google.yaml
# These come directly from https://console.developers.google.com/apis/credentials/oauthclient/863968914497-8u7d8610nhvnpdf52s3krtsqahlss5mv.apps.googleusercontent.com?project=datawireio&folder&organizationId=1023803081209
{{ $Google_Client_ID := "863968914497-8u7d8610nhvnpdf52s3krtsqahlss5mv.apps.googleusercontent.com" }}
{{ $Google_Client_secret := "x1LhmCCGk_5AHs3iGlRiyvOV" }}
# Make sure that:
#  - "http://localhost:31001/.ambassador/oauth2/redirection-endpoint" is added in "Authorized redirect URIs"
#  - ./tests/cluster/go-test/filter-oauth2/testdata/idp_google.js listens on
#     "http://localhost:31001/.ambassador/oauth2/redirection-endpoint" and redirects it to
#     "{{$AmbassadorURL}}/.ambassador/oauth2/redirection-endpoint" (preserving the query string)
#  - A test user account is set up (and configured in ./tests/cluster/go-test/filter-oauth2/testdata/idp_google.js)

---
apiVersion: getambassador.io/v2
kind: Filter
metadata:
  name: google
spec:
  OAuth2:
    authorizationURL: "https://accounts.google.com/"
    clientURL: http://localhost:31001
    clientID: {{ $Google_Client_ID }}
    secret: {{ $Google_Client_secret }}
---
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  name: filter-oauth2-google-mapping
spec:
  prefix: /google/httpbin/
  rewrite: /
  service: httpbin.org:80
  host_rewrite: httpbin.org
  timeout_ms: 5000
---
apiVersion: getambassador.io/v2
kind: FilterPolicy
metadata:
  name: filter-oauth2-google-policy
spec:
  rules:
    - host: "*"
      path: /google/httpbin/**
      filters:
        - name: google
