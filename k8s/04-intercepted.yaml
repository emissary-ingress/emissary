# @TEMPLATE@
---
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  name: mapping-for-intercepted
spec:
  prefix: /intercepted/
  service: intercepted

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: telepresence-proxy
  namespace: default
  labels:
    product: aes
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: telepresence-proxy
  labels:
    product: aes
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ambassador
subjects:
- kind: ServiceAccount
  name: telepresence-proxy
  namespace: default

---
apiVersion: v1
kind: Service
metadata:
  name: intercepted
spec:
  type: ClusterIP
  selector:
    service: intercepted
  ports:
  - name: proxied
    protocol: TCP
    port: 80
    targetPort: 8080              # Traffic agent port
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: intercepted
  labels:
    service: intercepted
spec:
  replicas: 1
  selector:
    matchLabels:
      service: intercepted
  template:
    metadata:
      labels:
        service: intercepted
    spec:
      containers:                   # Application container
      - name: intercepted
        image: kennethreitz/httpbin
        ports:
        - containerPort: 80
      - name: traffic-agent         # Traffic Agent container
        image: {{env "AES_IMAGE"}}
        ports:
          - containerPort: 9900
        env:
        - name: AGENT_SERVICE
          value: intercepted
        - name: AGENT_PORT
          value: "80"
        - name: APP_LOG_LEVEL
          value: "debug"
        - name: AGENT_MANAGER_NAMESPACE
          value: ambassador
        - name: AMBASSADOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      serviceAccountName: telepresence-proxy
