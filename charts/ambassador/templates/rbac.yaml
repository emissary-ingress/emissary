{{- if .Values.rbac.create -}}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: {{ include "ambassador.rbacName" . }}
  labels:
    {{- if ne .Values.deploymentTool "getambassador.io" }}
    app.kubernetes.io/name: {{ include "ambassador.name" . }}
    app.kubernetes.io/part-of: {{ .Release.Name }}
    helm.sh/chart: {{ include "ambassador.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Values.deploymentTool }}
    app.kubernetes.io/managed-by: {{ .Values.deploymentTool }}
    {{- else }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- end }}
    {{- end }}
    product: aes
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      rbac.getambassador.io/role-group: {{ include "ambassador.rbacName" . }}
rules: []
---
# CRDs are cluster scoped resources, so they need to be in a cluster role,
# even if ambassador is running in single namespace mode
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: {{ include "ambassador.rbacName" . }}-crd
  labels:
    {{- if ne .Values.deploymentTool "getambassador.io" }}
    app.kubernetes.io/name: {{ include "ambassador.name" . }}
    app.kubernetes.io/part-of: {{ .Release.Name }}
    helm.sh/chart: {{ include "ambassador.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Values.deploymentTool }}
    app.kubernetes.io/managed-by: {{ .Values.deploymentTool }}
    {{- else }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- end }}
    {{- end }}
    product: aes
    rbac.getambassador.io/role-group: {{ include "ambassador.rbacName" . }}
rules:
  - apiGroups: [ "apiextensions.k8s.io" ]
    resources: [ "customresourcedefinitions" ]
    verbs: ["get", "list", "watch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
{{- if .Values.scope.singleNamespace }}
kind: Role
metadata:
  name: {{ include "ambassador.rbacName" . }}
  namespace: {{ include "ambassador.namespace" . }}
{{- else }}
kind: ClusterRole
metadata:
  name: {{ include "ambassador.rbacName" . }}-watch
{{- end }}
  labels:
    {{- if ne .Values.deploymentTool "getambassador.io" }}
    app.kubernetes.io/name: {{ include "ambassador.name" . }}
    app.kubernetes.io/part-of: {{ .Release.Name }}
    helm.sh/chart: {{ include "ambassador.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Values.deploymentTool }}
    app.kubernetes.io/managed-by: {{ .Values.deploymentTool }}
    {{- else }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- end }}
    {{- end }}
    product: aes
    rbac.getambassador.io/role-group: {{ include "ambassador.rbacName" . }}
rules:
  - apiGroups: [""]
    resources:
    - namespaces
    - services
    - secrets
    - endpoints
    verbs: ["get", "list", "watch"]

  - apiGroups: [ "getambassador.io" ]
    resources: [ "*" ]
    verbs: ["get", "list", "watch", "update", "patch", "create", "delete" ]

  - apiGroups: [ "getambassador.io" ]
    resources: [ "mappings/status" ]
    verbs: ["update"]

  - apiGroups: [ "networking.internal.knative.dev" ]
    resources: [ "clusteringresses", "ingresses" ]
    verbs: ["get", "list", "watch"]

  - apiGroups: [ "networking.x-k8s.io" ]
    resources: [ "*" ]
    verbs: ["get", "list", "watch"]

  - apiGroups: [ "networking.internal.knative.dev" ]
    resources: [ "ingresses/status", "clusteringresses/status" ]
    verbs: ["update"]

  - apiGroups: [ "extensions", "networking.k8s.io" ]
    resources: [ "ingresses", "ingressclasses" ]
    verbs: ["get", "list", "watch"]

  - apiGroups: [ "extensions", "networking.k8s.io" ]
    resources: [ "ingresses/status" ]
    verbs: ["update"]

  {{- if .Values.enableAES }}

  - apiGroups: [""]
    resources: [ "secrets" ]
    verbs: ["get", "list", "watch", "create", "update"]

  - apiGroups: [""]
    resources: [ "events" ]
    verbs: ["get", "list", "watch", "create", "patch"]

  - apiGroups: ["coordination.k8s.io"]
    resources: [ "leases" ]
    verbs: ["get", "create", "update"]

  - apiGroups: [""]
    resources: [ "endpoints" ]
    verbs: ["get", "list", "watch", "create", "update"]
  {{- end }}

  {{- if or .Values.rbac.podSecurityPolicies .Values.security.podSecurityPolicy }}

  - apiGroups: ['policy']
    resources: ['podsecuritypolicies']
    verbs: ['use']
    resourceNames:
    {{- if .Values.rbac.podSecurityPolicies }}
      {{- toYaml .Values.rbac.podSecurityPolicies | nindent 6 }}
    {{- end }}
    {{- if .Values.security.podSecurityPolicy }}
    - {{ include "ambassador.fullname" . }}
    {{- end }}
  {{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: {{ include "ambassador.rbacName" . }}
  labels:
    {{- if ne .Values.deploymentTool "getambassador.io" }}
    app.kubernetes.io/name: {{ include "ambassador.name" . }}
    app.kubernetes.io/part-of: {{ .Release.Name }}
    helm.sh/chart: {{ include "ambassador.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Values.deploymentTool }}
    app.kubernetes.io/managed-by: {{ .Values.deploymentTool }}
    {{- else }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- end }}
    {{- end }}
    product: aes
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "ambassador.rbacName" . }}
subjects:
  - name: {{ include "ambassador.serviceAccountName" . }}
    namespace: {{ include "ambassador.namespace" . }}
    kind: ServiceAccount
---
{{- if .Values.scope.singleNamespace }}
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: {{ include "ambassador.rbacName" . }}
  namespace: {{ include "ambassador.namespace" . }}
  labels:
    {{- if ne .Values.deploymentTool "getambassador.io" }}
    app.kubernetes.io/name: {{ include "ambassador.name" . }}
    app.kubernetes.io/part-of: {{ .Release.Name }}
    helm.sh/chart: {{ include "ambassador.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Values.deploymentTool }}
    app.kubernetes.io/managed-by: {{ .Values.deploymentTool }}
    {{- else }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- end }}
    {{- end }}
    product: aes
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "ambassador.rbacName" . }}
subjects:
  - name: {{ include "ambassador.serviceAccountName" . }}
    namespace: {{ include "ambassador.namespace" . }}
    kind: ServiceAccount
{{- end }}
{{- end -}}
