apiVersion: apps/v1
{{- if .Values.daemonSet }}
kind: DaemonSet
{{- else }}
kind: Deployment
{{- end }}
metadata:
  {{- if .Values.deploymentNameOverride }}
  name: {{ .Values.deploymentNameOverride }}
  {{- else }}
  name: {{ include "ambassador.fullname" . }}
  {{- end }}
  namespace: {{ include "ambassador.namespace" . }}
  labels:
    {{- if ne .Values.deploymentTool "getambassador.io" }}
    app.kubernetes.io/name: {{ include "ambassador.name" . }}
    app.kubernetes.io/part-of: {{ .Release.Name }}
    helm.sh/chart: {{ include "ambassador.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Values.deploymentTool }}
    app.kubernetes.io/managed-by: {{ .Values.deploymentTool }}
    {{- else }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- end }}
    {{- end }}
    product: aes
    {{- if .Values.deploymentLabels }}
    {{- toYaml .Values.deploymentLabels | nindent 4 }}
    {{- end }}
    {{- if .Values.deploymentAnnotations }}
  annotations:
      {{- toYaml .Values.deploymentAnnotations | nindent 4 }}
    {{- end }}
spec:
{{- if and (not .Values.autoscaling.enabled) (not .Values.daemonSet) }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- if .Values.service.selector }}
      {{ toYaml .Values.service.selector | nindent 6 }}
      {{- else }}
      app.kubernetes.io/name: {{ include "ambassador.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      {{- end }}
  {{- if .Values.daemonSet }}
  updateStrategy:
  {{- else }}
  strategy:
  {{- end }}
    {{- toYaml .Values.deploymentStrategy | nindent 4}}
  template:
    metadata:
      labels:
        {{- if .Values.service.selector }}
        {{ toYaml .Values.service.selector | nindent 8 }}
        {{- end }}
        {{- if ne .Values.deploymentTool "getambassador.io" }}
        app.kubernetes.io/name: {{ include "ambassador.name" . }}
        app.kubernetes.io/part-of: {{ .Release.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        product: aes
        {{- end }}
        {{- if .Values.deploymentTool }}
        app.kubernetes.io/managed-by: {{ .Values.deploymentTool }}
        {{- else }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        {{- end }}
      {{- if .Values.podLabels }}
        {{- toYaml .Values.podLabels | nindent 8 }}
      {{- end }}
      annotations:
        {{- if ne .Values.deploymentTool "getambassador.io" }}
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
        {{- end }}
      {{- if .Values.serviceMesh.istio.enable }}
        sidecar.istio.io/inject: 'false'
      {{- end }}
      {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
      {{- /* Check if .Values.securityContext is set for backwards compatibility */ -}}
      {{- if .Values.securityContext -}}
      {{- with .Values.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- else -}}
      {{- with .Values.security.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end -}}
      {{- if .Values.restartPolicy }}
      restartPolicy: {{ .Values.restartPolicy }}
      {{- end }}
      serviceAccountName: {{ include "ambassador.serviceAccountName" . }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      volumes:
        - name: ambassador-pod-info
          downwardAPI:
            items:
              - fieldRef:
                  fieldPath: metadata.labels
                path: labels
        {{- if .Values.prometheusExporter.enabled }}
        - name: stats-exporter-mapping-config
          configMap:
            name: {{ include "ambassador.fullname" . }}-exporter-config
            items:
            - key: exporterConfiguration
              path: mapping-config.yaml
        {{- end }}
        {{- if .Values.ambassadorConfig }}
        - name: ambassador-config
          configMap:
            name: {{ include "ambassador.fullname" . }}-file-config
            items:
            - key: ambassadorConfig
              path: ambassador-config.yaml
        {{- end }}
        {{- if and .Values.licenseKey.createSecret .Values.enableAES }}
        - name: {{ include "ambassador.fullname" . }}-edge-stack-secrets
          secret:
            {{- if .Values.licenseKey.secretName }}
            secretName: {{ .Values.licenseKey.secretName }}
            {{- else }}
            secretName: {{ include "ambassador.fullname" . }}-edge-stack
            {{- end }}
        {{- end }}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceMesh.istio.enable }}
        - name: istio-certs
          emptyDir:
            medium: Memory
        - name: istiod-ca-cert
          configMap:
            defaultMode: 420
            name: istio-ca-root-cert
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - name: istio-token
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
      {{- end }}
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        {{- if .Values.prometheusExporter.enabled }}
        - name: prometheus-exporter
          image: "{{ .Values.prometheusExporter.repository }}:{{ .Values.prometheusExporter.tag }}"
          imagePullPolicy: {{ .Values.prometheusExporter.pullPolicy }}
          ports:
            - name: metrics
              containerPort: 9102
            - name: listener
              containerPort: 8125
          args:
            - --statsd.listen-udp=:8125
            - --web.listen-address=:9102
            - --statsd.mapping-config=/statsd-exporter/mapping-config.yaml
          volumeMounts:
            - name: stats-exporter-mapping-config
              mountPath: /statsd-exporter/
              readOnly: true
          resources:
            {{- toYaml .Values.prometheusExporter.resources | nindent 12 }}
        {{- end }}
        - name: {{ if .Values.containerNameOverride }}{{ .Values.containerNameOverride }}{{ else }}{{ .Chart.Name }}{{ end }}
          {{- if .Values.image.fullImageOverride }}
          image: '{{ .Values.image.fullImageOverride }}'
          {{- else }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            {{- range .Values.service.ports }}
            - name: {{ .name }}
              containerPort: {{ int .targetPort }}
              {{- if .protocol }}
              protocol: {{ .protocol }}
              {{- end }}
              {{- if .hostPort }}
              hostPort: {{ .hostPort }}
              {{- end }}
            {{- end}}
            - name: admin
              containerPort: {{ .Values.adminService.port }}
          env:
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            {{- if and (or .Values.redis.create .Values.redisURL) (.Values.enableAES) }}
            - name: REDIS_URL
              {{- if .Values.redisURL }}
              value: {{ .Values.redisURL }}
              {{- else }}
              value: {{ include "ambassador.fullname" . }}-redis:6379
              {{- end }}
            {{- end }}
            {{- if and .Values.licenseKey.secretName .Values.enableAES}}
            - name: AMBASSADOR_AES_SECRET_NAME
              value: {{ .Values.licenseKey.secretName }}
            {{- end }}
            {{- if .Values.prometheusExporter.enabled }}
            - name: STATSD_ENABLED
              value: "true"
            - name: STATSD_HOST
              value: "localhost"
            {{- end }}
            {{- if .Values.scope.singleNamespace }}
            - name: AMBASSADOR_SINGLE_NAMESPACE
              value: "YES"
            {{- end }}
            - name: AMBASSADOR_NAMESPACE
              {{- if .Values.namespace }}
              value: {{ .Values.namespace.name | quote }}
              {{ else }}
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
              {{- end -}}
            {{- if .Values.redisEnv }}
            {{ toYaml .Values.redisEnv | nindent 12 }}
            {{- end }}
            {{- if .Values.env }}
            {{- range $key,$value := .Values.env }}
            - name: {{ $key | upper | quote}}
              value: {{ $value | quote}}
            {{- end }}
            {{- end }}
            {{- if .Values.envRaw }}
            {{- with .Values.envRaw }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- end }}
            {{- if .Values.serviceMesh.consulConnect.enable }}
            - name: CONSUL_HTTP_SSL_VERIFY
              value: {{ .Values.serviceMesh.consulConnect.consulServer.tls.validate | quote }}
            - name: CONSUL_HTTP_TOKEN
              value: {{ .Values.serviceMesh.consulConnect.consulServer.aclToken | quote }}
            {{- end }}
            {{- if .Values.serviceMesh.istio.enable }}
            - name: AMBASSADOR_ENVOY_BASE_ID
              value: "1"
            - name: AMBASSADOR_ISTIO_SECRET_DIR
              value: /etc/istio-certs
            {{- end }}
          {{- with .Values.security.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /ambassador/v0/check_alive
              port: admin
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            httpGet:
              path: /ambassador/v0/check_ready
              port: admin
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          volumeMounts:
            - name: ambassador-pod-info
              mountPath: /tmp/ambassador-pod-info
              readOnly: true
          {{- if .Values.ambassadorConfig }}
            - name: ambassador-config
              mountPath: /ambassador/ambassador-config/ambassador-config.yaml
              subPath: ambassador-config.yaml
          {{- end }}
          {{- if and .Values.licenseKey.createSecret .Values.enableAES }}
            - name: {{ include "ambassador.fullname" . }}-edge-stack-secrets
              mountPath: /.config/ambassador
              readOnly: true
          {{- end }}
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.serviceMesh.istio.enable }}
            - name: istio-certs
              mountPath: /etc/istio-certs/
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.sidecarContainers }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceMesh.istio.enable }}
        - name: istio-proxy
          # Use the same version as your Istio installation
          image: {{ .Values.serviceMesh.istio.image.repository }}:{{ .Values.serviceMesh.istio.image.tag }}
          args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --serviceCluster
          - istio-proxy-ambassador
          - --discoveryAddress
          - istio-pilot.istio-system.svc:15012
          - --connectTimeout
          - 10s
          - --statusPort
          - "15020"
          - --trust-domain=cluster.local
          - --controlPlaneBootstrap=false
          env:
          - name: OUTPUT_CERTS
            value: "/etc/istio-certs"
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: ISTIO_META_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: ISTIO_META_CONFIG_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          imagePullPolicy: IfNotPresent
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15020
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /etc/istio-certs/
            name: istio-certs
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          securityContext:
            runAsUser: 0
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      hostNetwork: {{ .Values.hostNetwork }}
