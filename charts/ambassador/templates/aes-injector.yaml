{{- if and .Values.enableAES .Values.servicePreview.enabled .Values.servicePreview.trafficAgent.injector.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ambassador.fullname" . }}-injector
  namespace: {{ include "ambassador.namespace" . }}
  labels:
    app.kubernetes.io/name: {{ include "ambassador.fullname" . }}-injector
    app.kubernetes.io/part-of: {{ .Release.Name }}
    helm.sh/chart: {{ include "ambassador.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Values.deploymentTool }}
    app.kubernetes.io/managed-by: {{ .Values.deploymentTool }}
    {{- else }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- end }}
    product: aes
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "ambassador.fullname" . }}-injector
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "ambassador.fullname" . }}-injector
        app.kubernetes.io/part-of: {{ .Release.Name }}
        helm.sh/chart: {{ include "ambassador.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- if .Values.deploymentTool }}
        app.kubernetes.io/managed-by: {{ .Values.deploymentTool }}
        {{- else }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        {{- end }}
        product: aes
    spec:
      containers:
      - name: webhook
        image: "{{ .Values.servicePreview.trafficAgent.image.repository | default .Values.image.repository }}:{{ .Values.servicePreview.trafficAgent.image.tag | default .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: [ "aes-injector" ]
        env:
        - name: AGENT_MANAGER_NAMESPACE
          value: "{{ include "ambassador.namespace" . }}"
        - name: TRAFFIC_AGENT_IMAGE
          value: "{{ .Values.servicePreview.trafficAgent.image.repository | default .Values.image.repository }}:{{ .Values.servicePreview.trafficAgent.image.tag | default .Values.image.tag }}"
        - name: TRAFFIC_AGENT_AGENT_LISTEN_PORT
          value: "{{ .Values.servicePreview.trafficAgent.port }}"
        {{- if .Values.servicePreview.trafficAgent.singleNamespace }}
        - name: TRAFFIC_AGENT_SERVICE_ACCOUNT_NAME
          value: "{{ .Values.servicePreview.trafficAgent.serviceAccountName }}"
        {{- end }}
        ports:
        - containerPort: 8443
          name: https
        livenessProbe:
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
        volumeMounts:
        - mountPath: /var/run/secrets/tls
          name: tls
          readOnly: true
      volumes:
      - name: tls
        secret:
          secretName: {{ include "ambassador.fullname" . }}-injector-tls
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "ambassador.fullname" . }}-injector
  namespace: {{ include "ambassador.namespace" . }}
  labels:
    app.kubernetes.io/name: {{ include "ambassador.fullname" . }}-injector
    app.kubernetes.io/part-of: {{ .Release.Name }}
    helm.sh/chart: {{ include "ambassador.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Values.deploymentTool }}
    app.kubernetes.io/managed-by: {{ .Values.deploymentTool }}
    {{- else }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- end }}
  annotations:
    a8r.io/owner: "Ambassador Labs"
    a8r.io/repository: github.com/datawire/ambassador
    a8r.io/description: "The Ambassador Edge Stack Service Preview Traffic Agent Sidecar injector."
    a8r.io/documentation: https://www.getambassador.io/docs/latest/
    a8r.io/chat: http://d6e.co/slack
    a8r.io/bugs: https://github.com/datawire/ambassador/issues
    a8r.io/support: https://www.getambassador.io/about-us/support/
    a8r.io/dependencies: "None"
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: {{ include "ambassador.fullname" . }}-injector
    app.kubernetes.io/instance: {{ .Release.Name }}
  ports:
  - name: {{ include "ambassador.fullname" . }}-injector
    port: 443
    targetPort: https
---
kind: Secret
apiVersion: v1
metadata:
  name: {{ include "ambassador.fullname" . }}-injector-tls
  namespace: {{ include "ambassador.namespace" . }}
  labels:
    app.kubernetes.io/name: {{ include "ambassador.fullname" . }}-injector-tls
    app.kubernetes.io/part-of: {{ .Release.Name }}
    helm.sh/chart: {{ include "ambassador.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Values.deploymentTool }}
    app.kubernetes.io/managed-by: {{ .Values.deploymentTool }}
    {{- else }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- end }}
    product: aes
type: Opaque
data:
  {{ $ca := genCA (printf "%s-injector.%s.svc" (include "ambassador.fullname" .) (include "ambassador.namespace" .)) 365 -}}
  crt.pem: {{ ternary (b64enc $ca.Cert) (b64enc (trim .Values.servicePreview.trafficAgent.injector.crtPEM)) (empty .Values.servicePreview.trafficAgent.injector.crtPEM) }}
  key.pem: {{ ternary (b64enc $ca.Key) (b64enc (trim .Values.servicePreview.trafficAgent.injector.keyPEM)) (empty .Values.servicePreview.trafficAgent.injector.keyPEM) }}
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: {{ include "ambassador.fullname" . }}-injector-webhook-config
  labels:
    app.kubernetes.io/name: {{ include "ambassador.fullname" . }}-injector-webhook-config
    app.kubernetes.io/part-of: {{ .Release.Name }}
    helm.sh/chart: {{ include "ambassador.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Values.deploymentTool }}
    app.kubernetes.io/managed-by: {{ .Values.deploymentTool }}
    {{- else }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- end }}
    product: aes
webhooks:
- name: {{ include "ambassador.fullname" . }}-injector.getambassador.io
  clientConfig:
    service:
      name: {{ include "ambassador.fullname" . }}-injector
      namespace: {{ include "ambassador.namespace" . }}
      path: "/traffic-agent"
    caBundle: {{ ternary (b64enc $ca.Cert) (b64enc (trim .Values.servicePreview.trafficAgent.injector.crtPEM)) (empty .Values.servicePreview.trafficAgent.injector.crtPEM) }}
  failurePolicy: Ignore
  rules:
  - operations: ["CREATE"]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods"]
{{- end }}