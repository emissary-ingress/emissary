---
name: setup-deps
description: Install Go and Python

inputs:
  install-golang:
    description: |
      Install Go
    required: false
    default: "true"
  install-python:
    description: |
      Install Python
    required: false
    default: "true"

runs:
  using: composite
  steps:
    - name: Install bsdtar (libarchive-tools)
      id: step-install-bsdtar
      shell: bash
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update -y
        sudo apt-get install -y libarchive-tools
    # note: the "standard" ubuntu image used by nektos/act
    #       doesn't include the `ip` or `rsync` binaries
    - name: Install Missing Utils (nektos/act)
      shell: bash
      if: ${{ env.ACT }}
      env:
        DEBIAN_FRONTEND: noninteractive
        JQ_FILTER: >-
          sort_by( .published_at | fromdateiso8601 )
          | reverse
          | first
          | .assets
          | map(
              select(
                .label
                | test("^GitHub CLI ([0-9.]+)+ " + $os + " " + $arch + "$"; "i")
            ).browser_download_url )
          | first
      run: |
        sudo apt-get install -y rsync iproute2 net-tools \
        && if ! command gh > /dev/null 2>&1; then
            ARCH="$(uname -m | sed 's#x86_64#amd64#g; s#aarch64#arm64#g')" \
            OS="$(uname -s | tr '[[:upper:]]' '[[:lower:]]' | sed 's#darwin#macOS#g')";
            curl -fsSL -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/cli/cli/releases \
            | jq -r --arg os "${OS}" --arg arch "${ARCH}" "${JQ_FILTER}" \
            | xargs curl -fsSL \
            | tar  --strip-components=1 -C / -xz ;
        fi
    - name: Install Helm
      shell: bash
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        if ! command -v helm > /dev/null 2>&1; then
            curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
            helm plugin install https://github.com/chartmuseum/helm-push
        fi
    - name: Install Go
      if: ${{ inputs.install-golang == 'true' }}
      uses: actions/setup-go@v5
      env:
        DEBIAN_FRONTEND: noninteractive
      with:
        go-version-file: go.mod
    - name: Install 'uv'
      shell: bash
      if: ${{ inputs.install-python == 'true' }}
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | bash
    - name: Install Python Requirements
      shell: bash
      if: ${{ inputs.install-python == 'true' }}
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        uv sync --dev
        # uv --no-config pip install -U awscli
