name: Build Docker Images (Reusable)

on:
  workflow_call:
    inputs:
      ref:
        description: 'Git ref to checkout'
        required: false
        type: string
        default: ${{ github.ref }}
    outputs:
      artifact-name-prefix:
        description: 'Prefix for artifact names'
        value: ${{ jobs.build-images.outputs.artifact-name-prefix }}

permissions:
  contents: read

jobs:
  build-images:
    name: Build and Save ${{ matrix.arch }} Images
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm64]
        include:
          - arch: amd64
            runner: ubuntu-24.04
          - arch: arm64
            runner: ubuntu-24.04-arm

    outputs:
      artifact-name-prefix: ${{ steps.set-outputs.outputs.artifact-name-prefix }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: 0

      - name: Install Deps
        uses: ./.github/actions/setup-deps

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: ~> v2
          install-only: true
          distribution: goreleaser

      - name: Generate GoReleaser Config
        run: |
          python make-gorel.py \
              --header gorel.prologue \
              --arch ${{ matrix.arch }} \
            > .goreleaser.yaml

      - name: GoReleaser Check(s)
        shell: bash
        run: |
          goreleaser check
          goreleaser healthcheck

      - name: GoReleaser Build
        run: |
          goreleaser release --clean --snapshot

      - name: Save Docker Image to Tarball and Upload
        run: |
          docker images

          docker save \
              ghcr.io/emissary-ingress/apiext:latest-${{ matrix.arch }} \
              ghcr.io/emissary-ingress/emissary:latest-${{ matrix.arch }} \
              ghcr.io/emissary-ingress/kat-client:latest-${{ matrix.arch }} \
              ghcr.io/emissary-ingress/kat-server:latest-${{ matrix.arch }} \
              ghcr.io/emissary-ingress/test-auth:latest-${{ matrix.arch }} \
              ghcr.io/emissary-ingress/test-shadow:latest-${{ matrix.arch }} \
              ghcr.io/emissary-ingress/test-stats:latest-${{ matrix.arch }} \
            -o images-${{ matrix.arch }}.tar

          echo "DOCKER_TARBALL_NAME=images-${{ matrix.arch }}.tar" >> $GITHUB_ENV

      - name: Set outputs
        id: set-outputs
        run: |
          echo "artifact-name-prefix=images-${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v4
        with:
          name: images-${{ github.sha }}-${{ matrix.arch }}
          path: ${{ env.DOCKER_TARBALL_NAME }}
          retention-days: 7
          if-no-files-found: error
