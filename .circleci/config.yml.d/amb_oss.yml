version: 2.1

jobs:
  "oss-generate":
    executor: oss-linux
    resource_class: large
    steps:
      - job-generate

  "oss-lint":
    executor: oss-linux
    steps:
      - job-lint

  "oss-images":
    parameters:
      "release":
        type: boolean
        default: false
      "push_nightly":
        type: boolean
        default: false
    executor: oss-linux
    resource_class: xlarge
    steps:
      - job-images:
          release: << parameters.release >>
          push_nightly: << parameters.push_nightly >>

  "oss-gotest":
    executor: oss-linux
    parameters:
      "fast-reconfigure":
        type: boolean
        default: false
      "legacy-mode":
        type: boolean
        default: false
    steps:
      - job-gotest:
          fast-reconfigure: << parameters.fast-reconfigure >>
          legacy-mode: << parameters.legacy-mode >>

  "oss-test":
    executor: oss-linux
    resource_class: xlarge
    parameters:
      "test":
        type: enum
        enum:
          - "test" # everything but pytest-envoy
          - "ingresstest"
          - "pytest"
        default: "test"
      "fast-reconfigure":
        type: boolean
        default: false
      "legacy-mode":
        type: boolean
        default: false
    steps:
      - job-test:
          test: << parameters.test >>
          fast-reconfigure: << parameters.fast-reconfigure >>
          legacy-mode: << parameters.legacy-mode >>

  "oss-envoy-test":
    executor: oss-linux
    resource_class: xlarge
    parameters:
      "test":
        type: enum
        enum:
          - "pytest-envoy"
          - "pytest-envoy-v3"
        default: "pytest-envoy"
      "fast-reconfigure":
        type: boolean
        default: false
      "legacy-mode":
        type: boolean
        default: false
    steps:
      - job-test:
          test: << parameters.test >>
          fast-reconfigure: << parameters.fast-reconfigure >>
          legacy-mode: << parameters.legacy-mode >>

  "oss-chart":
    executor: oss-linux
    steps:
      - job-chart

  "oss-chart-publish":
    environment:
      PUBLISH_GIT_RELEASE: "1"
    executor: oss-linux
    steps:
      - job-chart-publish

  "oss-manifest-publish":
    environment:
      BUMP_STABLE: "true"
    executor: oss-linux
    steps:
      - job-manifests-publish

  "oss-chart-changelog":
    executor: oss-linux
    steps:
      - run: echo 'step'
      - when:
          condition:
            and:
              - equal: [ "https://github.com/emissary-ingress/emissary", << pipeline.project.git_url >> ]
              - not:
                  equal: [ "master", << pipeline.git.branch >>  ]
          steps:
            - job-chart-changelog

  "oss-promote-dev-to-rc":
    executor: oss-linux
    steps:
      - job-promote-to-rc-latest:
          channel: oss

  "oss-promote-dev-to-passed":
    executor: oss-linux
    steps:
      - job-promote-passed-ci-build

  "oss-promote-to-ga":
    executor: oss-linux
    steps:
      - job-promote-to-ga:
          channel: oss

  "oss-yaml-publish-s3-ga":
    executor: oss-linux
    steps:
      - job-yaml-publish-s3:
          update-stable: true

  "oss-yaml-publish-s3-rc":
    executor: oss-linux
    steps:
      - job-yaml-publish-s3:
          update-stable: false


_anchors:
  # All of these filters assume that "Only build pull requests" is turned on at
  # https://app.circleci.com/settings/project/github/emissary-ingress/emissary/advanced

  "filter-rc-only": &filter-rc-only
    filters:
      tags:
        only: /^v[0-9]+\.[0-9]+\.[0-9]+-rc\.[0-9]+$/
      branches:
        ignore: /.*/

  "filter-ga-only": &filter-ga-only
    filters:
      tags:
        only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
      branches:
        ignore: /.*/

  # chart release will create a tag IFF there are changes to the chart version
  "filter-chart-release-only": &filter-chart-release-only
    filters:
      tags:
        only: /^chart\-v[0-9]+\.[0-9]+\.[0-9]+$/
      branches:
        ignore: /.*/
  "filter-master-release-branches-only": &filter-master-release-branches-only
    filters:
      branches:
        only:
          - master
          - /^rel\/v[0-9]+\.[0-9]+\.[0-9]+$/

workflows:
  "OSS: GA Release":
    jobs:
      - "oss-promote-to-ga":
          <<: *filter-ga-only
          name: "oss-release-promote-to-ga"


  "OSS: Release Candidate":
    jobs:
      - "oss-promote-dev-to-rc":
          <<: *filter-rc-only
          name: "oss-release-promote-dev-to-rc"


  "OSS: Dev":
    # Run this workflow on just 'master' and PRs.
    jobs:
      # build+push
      - "oss-images":
          name: "oss-dev-images"

      # test
      - "oss-generate":
          name: "oss-dev-generate"

      - "oss-lint":
          name: "oss-dev-lint"

      - "oss-chart":
          name: "oss-dev-chart"

      - "oss-gotest":
          name: "oss-dev-gotest<<# matrix.fast-reconfigure >>-fastreconfigure<</ matrix.fast-reconfigure >><<# matrix.legacy-mode >>-legacy<</ matrix.legacy-mode >>"

          matrix:
            alias: "oss-dev-gotest-matrix"
            parameters:
              fast-reconfigure:
                - true
                - false
              legacy-mode:
                - false
      - "oss-gotest":
          name: "oss-dev-gotest<<# matrix.fast-reconfigure >>-fastreconfigure<</ matrix.fast-reconfigure >><<# matrix.legacy-mode >>-legacy<</ matrix.legacy-mode >>"

          <<: *filter-master-release-branches-only
          matrix:
            alias: "oss-dev-gotest-legacy-matrix"
            parameters:
              fast-reconfigure:
                - false
              legacy-mode:
                - true
                # If you enable testing with legacy-mode true as well, you'll also need
                # to add some exclusions -- see the Release workflow for more.
      - "oss-chart-changelog":
          name: "oss-chart-changelog"

      - "oss-test":
          requires: ["oss-dev-images"]
          name: "oss-dev-<< matrix.test >><<# matrix.fast-reconfigure >>-fastreconfigure<</ matrix.fast-reconfigure >><<# matrix.legacy-mode >>-legacy<</ matrix.legacy-mode >>"

          matrix:
            alias: "oss-dev-pytest-matrix"
            parameters:
              test:
                - "pytest"
                # Running the ingresstests would require we install `kind` and
                # that the test suite supports HTTP to HTTPS redirects (AES
                # enables cleartext redirection by default, even for fallback
                # hosts, contrary to A/OSS)
                #- "ingresstest"
              fast-reconfigure:
                - true
                - false
              legacy-mode:
                # We don't run legacy mode tests in the "Dev" workflow but we do
                # in the Nightly and Release workflows.
                - false
      - "oss-test":
          requires: ["oss-dev-images"]
          name: "oss-dev-<< matrix.test >><<# matrix.fast-reconfigure >>-fastreconfigure<</ matrix.fast-reconfigure >><<# matrix.legacy-mode >>-legacy<</ matrix.legacy-mode >>"

          <<: *filter-master-release-branches-only
          matrix:
            alias: "oss-dev-pytest-legacy-matrix"
            parameters:
              test:
                - "pytest"
                # Running the ingresstests would require we install `kind` and
                # that the test suite supports HTTP to HTTPS redirects (AES
                # enables cleartext redirection by default, even for fallback
                # hosts, contrary to A/OSS)
                #- "ingresstest"
              fast-reconfigure:
                - false
              legacy-mode:
                - true
      - "oss-envoy-test":
          requires: ["oss-dev-images"]
          name: "oss-dev-<< matrix.test >><<# matrix.fast-reconfigure >>-fastreconfigure<</ matrix.fast-reconfigure >><<# matrix.legacy-mode >>-legacy<</ matrix.legacy-mode >>"

          matrix:
            alias: "oss-dev-envoy-test-matrix"
            parameters:
              test:
                - "pytest-envoy"
                - "pytest-envoy-v3"
              fast-reconfigure:
                - true
                - false
              legacy-mode:
                # We don't run legacy mode tests in the "Dev" workflow but we do
                # in the Nightly and Release workflows.
                - false
            exclude:
              # It's not meaningful to set fast reconfigure and legacy mode at the same time.
              # Annoyingly, we have to iterate all the 'test' values that we're using for
              # this to work.
              - test: pytest-envoy
                fast-reconfigure: true
                legacy-mode: true
              - test: pytest-envoy-v3
                fast-reconfigure: true
                legacy-mode: true
      - "oss-envoy-test":
          requires: ["oss-dev-images"]
          name: "oss-dev-<< matrix.test >><<# matrix.fast-reconfigure >>-fastreconfigure<</ matrix.fast-reconfigure >><<# matrix.legacy-mode >>-legacy<</ matrix.legacy-mode >>"
          <<: *filter-master-release-branches-only

          matrix:
            alias: "oss-dev-envoy-test-legacy-matrix"
            parameters:
              test:
                - "pytest-envoy"
                - "pytest-envoy-v3"
              fast-reconfigure:
                - false
              legacy-mode:
                - true
      - "oss-promote-dev-to-passed":

          requires:
            - oss-dev-pytest
            - oss-dev-pytest-envoy
            - oss-dev-pytest-envoy-fastreconfigure
            - oss-dev-pytest-envoy-legacy
            - oss-dev-pytest-envoy-v3
            - oss-dev-pytest-envoy-v3-fastreconfigure
            - oss-dev-pytest-envoy-v3-legacy
            - oss-dev-pytest-fastreconfigure
            - oss-dev-pytest-legacy
            - oss-dev-chart
            - oss-dev-gotest-legacy
            - oss-dev-gotest-fastreconfigure
            - oss-dev-gotest
            - oss-dev-generate
          name: "oss-dev-promote-to-passed"
          <<: *filter-master-release-branches-only

  "OSS: Chart Release":
    when: # Don't run this workflow in apro.git
      or:
      - equal: [ "https://github.com/emissary-ingress/emissary", << pipeline.project.git_url >> ]
      - equal: [ "https://github.com/emissary-ingress/emissary-private", << pipeline.project.git_url >> ]
    jobs:
      - "oss-chart-publish":
          <<: *filter-chart-release-only
          name: "oss-release-chart"

  "OSS: Manifests Release":
    when: # Don't run this workflow in apro.git
      or:
      - equal: [ "https://github.com/emissary-ingress/emissary", << pipeline.project.git_url >> ]
      - equal: [ "https://github.com/emissary-ingress/emissary-private", << pipeline.project.git_url >> ]
    jobs:
      - "oss-manifest-publish":
          <<: *filter-chart-release-only
          name: "oss-rc-manifests-publish"


  "OSS: Nightly":
    triggers:
      - schedule:
          # Time is in UTC: 2AM EDT on weekdays
          cron: "0 6 * * 1-5"
          filters:
            branches:
              only:
                - master
    jobs:
      # build+push
      - "oss-images":
          name: "oss-nightly-images"

      - "oss-gotest":
          name: "oss-nightly-gotest<<# matrix.fast-reconfigure >>-fastreconfigure<</ matrix.fast-reconfigure >><<# matrix.legacy-mode >>-legacy<</ matrix.legacy-mode >>"

          matrix:
            alias: "oss-nightly-gotest"
            parameters:
              fast-reconfigure:
                - true
                - false
              legacy-mode:
                - true
                - false
            exclude:
              # It's not meaningful to set fast reconfigure and legacy mode at the same time.
              # Annoyingly, we have to iterate all the 'test' values that we're using for
              # this to work.
              - fast-reconfigure: true
                legacy-mode: true
      - "oss-test":
          requires: ["oss-nightly-images"]
          name: "oss-nightly-<< matrix.test >><<# matrix.fast-reconfigure >>-fastreconfigure<</ matrix.fast-reconfigure >><<# matrix.legacy-mode >>-legacy<</ matrix.legacy-mode >>"

          matrix:
            alias: "oss-nightly-test"
            parameters:
              test:
                - "pytest"
                # Running the ingresstests would require we install `kind` and
                # that the test suite supports HTTP to HTTPS redirects (AES
                # enables cleartext redirection by default, even for fallback
                # hosts, contrary to A/OSS)
                #- "ingresstest"
              fast-reconfigure:
                - true
                - false
              legacy-mode:
                - true
                - false
            exclude:
              # It's not meaningful to set fast reconfigure and legacy mode at the same time.
              # Annoyingly, we have to iterate all the 'test' values that we're using for
              # this to work.
              - test: pytest
                fast-reconfigure: true
                legacy-mode: true
      - "oss-envoy-test":
          requires: ["oss-nightly-images"]
          name: "oss-nightly-<< matrix.test >><<# matrix.fast-reconfigure >>-fastreconfigure<</ matrix.fast-reconfigure >><<# matrix.legacy-mode >>-legacy<</ matrix.legacy-mode >>"

          matrix:
            alias: "oss-nightly-envoy-test"
            parameters:
              test:
                - "pytest-envoy"
                - "pytest-envoy-v3"
              fast-reconfigure:
                - true
                - false
              legacy-mode:
                - true
                - false
            exclude:
              # It's not meaningful to set fast reconfigure and legacy mode at the same time.
              # Annoyingly, we have to iterate all the 'test' values that we're using for
              # this to work.
              - test: pytest-envoy
                fast-reconfigure: true
                legacy-mode: true
              - test: pytest-envoy-v3
                fast-reconfigure: true
                legacy-mode: true

