version: 2.1

# Secure environement variables set from the Web UI:
#
# - AWS_ACCESS_KEY_ID (AWS S3)
# - AWS_SECRET_ACCESS_KEY (AWS S3)
#
# - DEV_REGISTRY (DockerHub)
# - DOCKER_BUILD_USERNAME (DockerHub)
# - DOCKER_BUILD_PASSWORD (DockerHub)
#
# - RELEASE_REGISTRY (DockerHub)
# - DOCKER_RELEASE_USERNAME (DockerHub)
# - DOCKER_RELEASE_PASSWORD (DockerHub)

_anchors:
  "oss-linux-job": &oss-linux-job
    machine:
      # If you bump this, be sure to bump "install-python.executor-key"
      # in the "oss-linux-setup" command below.
      image: "ubuntu-1604:201903-01"
    working_directory: ~/project/ambassador

commands:

  "oss-linux-setup":
    steps:
      - install-python:
          executor-key: "201903-01"
      - pip-install:
          packages: awscli packaging
      - install-go
      - install-kubectl
      - oss-checkout

  "oss-images-build-and-test":
    steps:
      - run:
          name: "Ensure CI configuration is up-to-date"
          command: |
            set -x
            test_targets=$(make -n noop --print-data-base 2>/dev/null | sed -n 's/^test: *//p' | xargs printf '%s\n' | LC_COLLATE=C sort -u | xargs echo)
            if [ "$test_targets" != "gotest ingresstest pytest" ]; then
              echo "Makefile 'test' target has changed to $test_targets, you need to update '.circleci/config.yml.d/oss.yml'" >&2
              exit 1
            fi

            (cd .circleci && ./generate --always-make)
            if test -n "$(git status --porcelain)"; then
              echo "The file '.circleci/config.yml' is out of date." >&2
              echo "Run '(cd .circleci && ./generate)' to update it." >&2
              exit 1
            fi
      - run:
          name: "Set up cluster and registry"
          command: |
            ./.ci/kubernaut-claim
            echo >>"$BASH_ENV" 'if test -e ~/kubernaut-claim.txt; then'
            echo >>"$BASH_ENV" '  export DEV_KUBECONFIG=~/.kube/$(cat ~/kubernaut-claim.txt).yaml'
            echo >>"$BASH_ENV" 'fi'

            if [[ -n "$DEV_REGISTRY" && -n "$DOCKER_BUILD_USERNAME" && -n "DOCKER_BUILD_PASSWORD" ]]; then
              docker login -u="${DOCKER_BUILD_USERNAME}" -p="${DOCKER_BUILD_PASSWORD}" "${DEV_REGISTRY%%/*}"
            else
              echo >>"$BASH_ENV" 'if test -e ~/kubernaut-claim.txt; then'
              echo >>"$BASH_ENV" '  KUBECONFIG=$DEV_KUBECONFIG go run ./cmd/k8sregistryctl up --storage=hostPath'
              echo >>"$BASH_ENV" '  export DEV_REGISTRY=127.0.0.1:31000'
              echo >>"$BASH_ENV" 'fi'
            fi
            echo >>"$BASH_ENV" unset BASH_ENV
      - run:
          name: "Build"
          command: |
            make push
      - run:
          name: "Go Tests"
          command: |
            make gotest
      # XXX The three KAT runs should really be split out into separate parallel jobs.
      # Circle makes that hard enough that we're not going to do it just yet, though.
      - run:
          name: "KAT (normal)"
          command: |
            export DEV_KUBE110=yes
            export DEV_KUBE_NO_PVC=yes
            export KAT_REQ_LIMIT=600
            make pytest-only
      - run:
          name: "Cycle cluster"
          command: |
            ./.ci/kubernaut-unclaim
            ./.ci/kubernaut-claim
      - run:
          name: "KAT (FAST_VALIDATION)"
          command: |
            export DEV_KUBE110=yes
            export DEV_KUBE_NO_PVC=yes
            export KAT_REQ_LIMIT=600
            export AMBASSADOR_FAST_VALIDATION=true
            make pytest-only
      - run:
          name: "Cycle cluster"
          command: |
            ./.ci/kubernaut-unclaim
            ./.ci/kubernaut-claim
      - run:
          name: "KAT (FAST_VALIDATION and FAST_RECONFIGURE)"
          command: |
            export DEV_KUBE110=yes
            export DEV_KUBE_NO_PVC=yes
            export KAT_REQ_LIMIT=600
            export AMBASSADOR_FAST_VALIDATION=true
            export AMBASSADOR_FAST_RECONFIGURE=true
            make pytest-only
      # We might want to run ingress-conformance tests in AES in the future
      # This would require we install `kind` on circleci and that the test suite
      # supports HTTP to HTTPS redirects (AES enables cleartext redirection by
      # default, even for fallback hosts, contrary to AOSS)
      # - run:
      #     name: "Ingress Conformance Tests"
      #     command: |
      #       export DEV_KUBE110=yes
      #       make ingresstest
      - run:
          command: "./.ci/kubernaut-unclaim"
          when: "always"
      - dirty-check
      #- oss-save-logs

jobs:
  "oss-dev-generate":
    <<: *oss-linux-job
    steps:
      - oss-linux-setup
      - run: make generate
      - dirty-check
      # Run it again to make sure that it is possible to run it twice
      # in a row.
      - run: make generate
      - dirty-check

  "oss-dev-images":
    <<: *oss-linux-job
    steps:
      - oss-linux-setup
      - skip-if-only-changes:
          to: docs/
      - oss-images-build-and-test

  "oss-release-images":
    <<: *oss-linux-job
    steps:
      - oss-linux-setup
      - oss-images-build-and-test
      - run:
          name: "Release"
          command: |
            docker login -u="${DOCKER_RELEASE_USERNAME}" -p="${DOCKER_RELEASE_PASSWORD}" "${RELEASE_REGISTRY%%/*}"
            DEV_KUBECONFIG="-skip-for-release-" make release/bits

  "oss-release-promote-to-rc-latest":
    <<: *oss-linux-job
    steps:
      - oss-linux-setup
      - when:
          condition:
            equal: [ "https://github.com/datawire/ambassador", << pipeline.project.git_url >> ]
          steps:
            - run:
                name: "Promote to -rc-latest"
                command: |
                  docker login -u="${DOCKER_RELEASE_USERNAME}" -p="${DOCKER_RELEASE_PASSWORD}" "${RELEASE_REGISTRY%%/*}"
                  DEV_KUBECONFIG="-skip-for-release-" make release/promote-oss/to-rc-latest

  "oss-release-promote-to-ga":
    <<: *oss-linux-job
    steps:
      - oss-linux-setup
      - run:
          name: "Promote to GA"
          command: |
            docker login -u="${DOCKER_RELEASE_USERNAME}" -p="${DOCKER_RELEASE_PASSWORD}" "${RELEASE_REGISTRY%%/*}"
            DEV_KUBECONFIG="-skip-for-release-" make release/promote-oss/to-ga

workflows:
  # All of these filters assume that "Only build pull requests" is turned on at
  # https://app.circleci.com/settings/project/github/datawire/apro/advanced
  "OSS: Dev":
    # Run this workflow on just 'master' and PRs.
    jobs:
      - "oss-dev-images"
      - "oss-dev-generate"
  "OSS: Release":
    when:
      or:
      - equal: [ "https://github.com/datawire/ambassador", << pipeline.project.git_url >> ]
      - equal: [ "https://github.com/datawire/ambassador-private", << pipeline.project.git_url >> ]
    # Run this workflow on tags, not branches or PRs.
    jobs:
      - "oss-release-images":
          # Run this on just prerelease tags
          filters:
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+-(rc|ea)\.[0-9]+$/
            branches:
              ignore: /.*/
      - "oss-release-promote-to-rc-latest":
          requires:
          - "oss-release-images"
          # Run this on just RC tags
          filters:
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+-rc\.[0-9]+$/
            branches:
              ignore: /.*/
      - "oss-release-promote-to-ga":
          # Run this on just GA tags
          filters:
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
            branches:
              ignore: /.*/
