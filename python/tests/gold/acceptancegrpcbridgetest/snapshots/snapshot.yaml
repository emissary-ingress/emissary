{
    "Consul": {},
    "Kubernetes": {
        "AuthService": null,
        "ConsulResolver": null,
        "Host": null,
        "KubernetesEndpointResolver": null,
        "KubernetesServiceResolver": null,
        "LogService": null,
        "Mapping": null,
        "Module": null,
        "RateLimitService": null,
        "TCPMapping": null,
        "TLSContext": null,
        "TracingService": null,
        "ingresses": null,
        "service": [
            {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "getambassador.io/config": "---\napiVersion: ambassador/v0\nkind: Module\nname: ambassador\nconfig:\n  enable_grpc_http11_bridge: True\nambassador_id: acceptancegrpcbridgetest\n\n---\napiVersion: ambassador/v0\nkind: Mapping\ngrpc: True\nprefix: /echo.EchoService/\nrewrite: /echo.EchoService/\nname: acceptancegrpcbridgetest-egrpc\nservice: acceptancegrpcbridgetest-egrpc\nambassador_id: acceptancegrpcbridgetest\n",
                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"getambassador.io/config\":\"---\\napiVersion: ambassador/v0\\nkind: Module\\nname: ambassador\\nconfig:\\n  enable_grpc_http11_bridge: True\\nambassador_id: acceptancegrpcbridgetest\\n\\n---\\napiVersion: ambassador/v0\\nkind: Mapping\\ngrpc: True\\nprefix: /echo.EchoService/\\nrewrite: /echo.EchoService/\\nname: acceptancegrpcbridgetest-egrpc\\nservice: acceptancegrpcbridgetest-egrpc\\nambassador_id: acceptancegrpcbridgetest\\n\"},\"labels\":{\"app.kubernetes.io/component\":\"ambassador-service\",\"kat-ambassador-id\":\"acceptancegrpcbridgetest\",\"scope\":\"AmbassadorTest\"},\"name\":\"acceptancegrpcbridgetest\",\"namespace\":\"default\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":8080},{\"name\":\"https\",\"port\":443,\"protocol\":\"TCP\",\"targetPort\":8443}],\"selector\":{\"service\":\"acceptancegrpcbridgetest\"},\"type\":\"NodePort\"}}\n"
                    },
                    "creationTimestamp": "2020-05-14T17:38:24Z",
                    "labels": {
                        "app.kubernetes.io/component": "ambassador-service",
                        "kat-ambassador-id": "acceptancegrpcbridgetest",
                        "scope": "AmbassadorTest"
                    },
                    "name": "acceptancegrpcbridgetest",
                    "namespace": "default",
                    "resourceVersion": "63774",
                    "selfLink": "/api/v1/namespaces/default/services/acceptancegrpcbridgetest",
                    "uid": "b5fec53b-9609-11ea-ae16-06e21b589211"
                },
                "spec": {
                    "clusterIP": "10.103.13.175",
                    "externalTrafficPolicy": "Cluster",
                    "ports": [
                        {
                            "name": "http",
                            "nodePort": 31408,
                            "port": 80,
                            "protocol": "TCP",
                            "targetPort": 8080
                        },
                        {
                            "name": "https",
                            "nodePort": 31565,
                            "port": 443,
                            "protocol": "TCP",
                            "targetPort": 8443
                        }
                    ],
                    "selector": {
                        "service": "acceptancegrpcbridgetest"
                    },
                    "sessionAffinity": "None",
                    "type": "NodePort"
                },
                "status": {
                    "loadBalancer": {}
                }
            },
            {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"kat-ambassador-id\":\"acceptancegrpcbridgetest\",\"scope\":\"AmbassadorTest\",\"service\":\"acceptancegrpcbridgetest-admin\"},\"name\":\"acceptancegrpcbridgetest-admin\",\"namespace\":\"default\"},\"spec\":{\"ports\":[{\"name\":\"acceptancegrpcbridgetest-admin\",\"port\":8877,\"targetPort\":8877}],\"selector\":{\"service\":\"acceptancegrpcbridgetest\"},\"type\":\"NodePort\"}}\n"
                    },
                    "creationTimestamp": "2020-05-14T17:38:24Z",
                    "labels": {
                        "kat-ambassador-id": "acceptancegrpcbridgetest",
                        "scope": "AmbassadorTest",
                        "service": "acceptancegrpcbridgetest-admin"
                    },
                    "name": "acceptancegrpcbridgetest-admin",
                    "namespace": "default",
                    "resourceVersion": "63778",
                    "selfLink": "/api/v1/namespaces/default/services/acceptancegrpcbridgetest-admin",
                    "uid": "b60a6a71-9609-11ea-ae16-06e21b589211"
                },
                "spec": {
                    "clusterIP": "10.109.95.203",
                    "externalTrafficPolicy": "Cluster",
                    "ports": [
                        {
                            "name": "acceptancegrpcbridgetest-admin",
                            "nodePort": 30336,
                            "port": 8877,
                            "protocol": "TCP",
                            "targetPort": 8877
                        }
                    ],
                    "selector": {
                        "service": "acceptancegrpcbridgetest"
                    },
                    "sessionAffinity": "None",
                    "type": "NodePort"
                },
                "status": {
                    "loadBalancer": {}
                }
            },
            {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"kat-ambassador-id\":\"acceptancegrpcbridgetest\",\"scope\":\"AmbassadorTest\"},\"name\":\"acceptancegrpcbridgetest-egrpc\",\"namespace\":\"default\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":8080},{\"name\":\"https\",\"port\":443,\"protocol\":\"TCP\",\"targetPort\":8443}],\"selector\":{\"backend\":\"acceptancegrpcbridgetest-egrpc\"}}}\n"
                    },
                    "creationTimestamp": "2020-05-14T17:38:24Z",
                    "labels": {
                        "kat-ambassador-id": "acceptancegrpcbridgetest",
                        "scope": "AmbassadorTest"
                    },
                    "name": "acceptancegrpcbridgetest-egrpc",
                    "namespace": "default",
                    "resourceVersion": "63785",
                    "selfLink": "/api/v1/namespaces/default/services/acceptancegrpcbridgetest-egrpc",
                    "uid": "b6205f03-9609-11ea-ae16-06e21b589211"
                },
                "spec": {
                    "clusterIP": "10.107.45.182",
                    "ports": [
                        {
                            "name": "http",
                            "port": 80,
                            "protocol": "TCP",
                            "targetPort": 8080
                        },
                        {
                            "name": "https",
                            "port": 443,
                            "protocol": "TCP",
                            "targetPort": 8443
                        }
                    ],
                    "selector": {
                        "backend": "acceptancegrpcbridgetest-egrpc"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                },
                "status": {
                    "loadBalancer": {}
                }
            }
        ]
    }
}