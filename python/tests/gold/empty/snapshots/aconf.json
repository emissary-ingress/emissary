{
    "_errors": {
        "-global-": [
            {
                "error": "Ambassador could not find core CRD definitions. Please visit https://www.getambassador.io/reference/core/crds/ for more information. You can continue using Ambassador via Kubernetes annotations, any configuration via CRDs will be ignored...",
                "hostname": "empty",
                "ok": false,
                "version": "1.2.0-4-g8f507fdcf-dirty"
            },
            {
                "error": "Ambassador could not find Resolver type CRD definitions. Please visit https://www.getambassador.io/reference/core/crds/ for more information. You can continue using Ambassador via Kubernetes annotations, any configuration via CRDs will be ignored...",
                "hostname": "empty",
                "ok": false,
                "version": "1.2.0-4-g8f507fdcf-dirty"
            },
            {
                "error": "Ambassador could not find the Host CRD definition. Please visit https://www.getambassador.io/reference/core/crds/ for more information. You can continue using Ambassador via Kubernetes annotations, any configuration via CRDs will be ignored...",
                "hostname": "empty",
                "ok": false,
                "version": "1.2.0-4-g8f507fdcf-dirty"
            },
            {
                "error": "Ambassador could not find the LogService CRD definition. Please visit https://www.getambassador.io/reference/core/crds/ for more information. You can continue using Ambassador via Kubernetes annotations, any configuration via CRDs will be ignored...",
                "hostname": "empty",
                "ok": false,
                "version": "1.2.0-4-g8f507fdcf-dirty"
            }
        ]
    },
    "_notices": {},
    "_sources": {
        "--diagnostics--": {
            "_referenced_by": {},
            "apiVersion": "getambassador.io/v0",
            "description": "The '--diagnostics--' source marks objects created by Ambassador to assist with diagnostic output.",
            "kind": "Diagnostics",
            "location": "--diagnostics--",
            "name": "Ambassador Diagnostics",
            "namespace": null,
            "rkey": "--diagnostics--",
            "serialization": null,
            "version": "getambassador.io/v0"
        },
        "--internal--": {
            "_referenced_by": {},
            "apiVersion": "getambassador.io/v0",
            "description": "The '--internal--' source marks objects created by Ambassador's internal logic.",
            "kind": "Internal",
            "location": "--internal--",
            "name": "Ambassador Internals",
            "namespace": null,
            "rkey": "--internal--",
            "serialization": null,
            "version": "getambassador.io/v0"
        },
        "k8s-empty-admin-empty-namespace": {
            "_referenced_by": {},
            "ambassador_id": "empty",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-empty-admin-empty-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "empty",
                "scope": "AmbassadorTest",
                "service": "empty-admin"
            },
            "name": "empty-admin",
            "namespace": "empty-namespace",
            "rkey": "k8s-empty-admin-empty-namespace",
            "serialization": "ambassador_id: empty\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: empty\n  scope: AmbassadorTest\n  service: empty-admin\nname: empty-admin\nnamespace: empty-namespace\n"
        },
        "k8s-empty-empty-namespace": {
            "_referenced_by": {},
            "ambassador_id": "empty",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-empty-empty-namespace",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "empty",
                "scope": "AmbassadorTest"
            },
            "name": "empty",
            "namespace": "empty-namespace",
            "rkey": "k8s-empty-empty-namespace",
            "serialization": "ambassador_id: empty\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: empty\n  scope: AmbassadorTest\nname: empty\nnamespace: empty-namespace\n"
        }
    },
    "service": {
        "k8s-empty-admin-empty-namespace": {
            "ambassador_id": "empty",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "metadata_labels": {
                "kat-ambassador-id": "empty",
                "scope": "AmbassadorTest",
                "service": "empty-admin"
            },
            "name": "empty-admin",
            "namespace": "empty-namespace"
        },
        "k8s-empty-empty-namespace": {
            "ambassador_id": "empty",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "empty",
                "scope": "AmbassadorTest"
            },
            "name": "empty",
            "namespace": "empty-namespace"
        }
    }
}