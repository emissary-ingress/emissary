{
    "ambassador": {
        "_active": true,
        "_errored": false,
        "_finalized": true,
        "_rkey": "ir.ambassador",
        "admin_port": 8001,
        "debug_mode": false,
        "default_label_domain": "ambassador",
        "default_labels": {},
        "diag_port": 8877,
        "diagnostics": {
            "enabled": true,
            "prefix": "/ambassador/v0/",
            "rewrite": "/ambassador/v0/",
            "service": "127.0.0.1:8877"
        },
        "enable_http10": false,
        "enable_ipv4": true,
        "enable_ipv6": false,
        "envoy_log_path": "/dev/fd/1",
        "envoy_log_type": "text",
        "kind": "IRAmbassador",
        "liveness_probe": {
            "enabled": true,
            "prefix": "/ambassador/v0/check_alive",
            "rewrite": "/ambassador/v0/check_alive",
            "service": "127.0.0.1:8877"
        },
        "location": "--internal--",
        "name": "ir.ambassador",
        "namespace": "plain-namespace",
        "proper_case": false,  
        "readiness_probe": {
            "enabled": true,
            "prefix": "/ambassador/v0/check_ready",
            "rewrite": "/ambassador/v0/check_ready",
            "service": "127.0.0.1:8877"
        },
        "server_name": "envoy",
        "service_port": 8080,
        "use_ambassador_namespace_for_service_resolution": false,
        "use_proxy_proto": false,
        "use_remote_address": true,
        "x_forwarded_proto_redirect": false,
        "xff_num_trusted_hops": 0
    },
    "clusters": {
        "cluster_127_0_0_1_8877_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "127.0.0.1",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 8877,
            "_referenced_by": [
                "--internal--"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_127_0_0_1_8877_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "--internal--",
            "name": "cluster_127_0_0_1_8877_plain_namespace",
            "namespace": "plain-namespace",
            "service": "127.0.0.1:8877",
            "targets": [
                {
                    "ip": "127.0.0.1",
                    "port": 8877,
                    "target_kind": "IPaddr"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://127.0.0.1:8877"
            ]
        },
        "cluster_echo_websocket_org_80_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "echo.websocket.org",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-websocketmapping-grpc-grpc.plain-namespace.1",
                "plain-websocketmapping-http-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_echo_websocket_org_80_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "host_rewrite": "echo.websocket.org",
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-websocketmapping-grpc-grpc.plain-namespace.1",
            "name": "cluster_echo_websocket_org_80_plain_namespace",
            "namespace": "plain-namespace",
            "service": "echo.websocket.org:80",
            "targets": [
                {
                    "ip": "echo.websocket.org",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://echo.websocket.org:80"
            ]
        },
        "cluster_http___httpbin_org_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "httpbin.org",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-addrespheadersmapping-grpc-grpc.plain-namespace.1",
                "plain-addrespheadersmapping-http-http.plain-namespace.1",
                "plain-removereqheadersmapping-grpc-grpc.plain-namespace.1",
                "plain-removereqheadersmapping-http-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___httpbin_org_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-addrespheadersmapping-grpc-grpc.plain-namespace.1",
            "name": "cluster_http___httpbin_org_plain_namespace",
            "namespace": "plain-namespace",
            "service": "httpbin.org",
            "targets": [
                {
                    "ip": "httpbin.org",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://httpbin.org:80"
            ]
        },
        "cluster_http___plain_addreqheadersmapping_grpc_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-addreqheadersmapping-grpc-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-addreqheadersmapping-grpc-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_addreqheadersmapping_grpc_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-addreqheadersmapping-grpc-grpc.plain-namespace.1",
            "name": "cluster_http___plain_addreqheadersmappin-0",
            "namespace": "plain-namespace",
            "service": "plain-addreqheadersmapping-grpc-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-addreqheadersmapping-grpc-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-addreqheadersmapping-grpc-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_addreqheadersmapping_http_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-addreqheadersmapping-http-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-addreqheadersmapping-http-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_addreqheadersmapping_http_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-addreqheadersmapping-http-http.plain-namespace.1",
            "name": "cluster_http___plain_addreqheadersmappin-1",
            "namespace": "plain-namespace",
            "service": "plain-addreqheadersmapping-http-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-addreqheadersmapping-http-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-addreqheadersmapping-http-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarydiffmapping_grpc_0_grpc_canary_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarydiffmapping-grpc-0-grpc-canary.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarydiffmapping-grpc-0-grpc-canary.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarydiffmapping_grpc_0_grpc_canary_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "host_rewrite": "canary.2.example.com",
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarydiffmapping-grpc-0-grpc-canary.plain-namespace.1",
            "name": "cluster_http___plain_canarydiffmapping_g-0",
            "namespace": "plain-namespace",
            "service": "plain-canarydiffmapping-grpc-0-grpc-canary.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarydiffmapping-grpc-0-grpc-canary.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarydiffmapping-grpc-0-grpc-canary.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarydiffmapping_grpc_0_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarydiffmapping-grpc-0-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarydiffmapping-grpc-0-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarydiffmapping_grpc_0_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "host_rewrite": "canary.1.example.com",
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarydiffmapping-grpc-0-grpc.plain-namespace.1",
            "name": "cluster_http___plain_canarydiffmapping_g-1",
            "namespace": "plain-namespace",
            "service": "plain-canarydiffmapping-grpc-0-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarydiffmapping-grpc-0-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarydiffmapping-grpc-0-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarydiffmapping_grpc_100_grpc_canary_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarydiffmapping-grpc-100-grpc-canary.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarydiffmapping-grpc-100-grpc-canary.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarydiffmapping_grpc_100_grpc_canary_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "host_rewrite": "canary.2.example.com",
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarydiffmapping-grpc-100-grpc-canary.plain-namespace.1",
            "name": "cluster_http___plain_canarydiffmapping_g-2",
            "namespace": "plain-namespace",
            "service": "plain-canarydiffmapping-grpc-100-grpc-canary.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarydiffmapping-grpc-100-grpc-canary.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarydiffmapping-grpc-100-grpc-canary.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarydiffmapping_grpc_100_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarydiffmapping-grpc-100-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarydiffmapping-grpc-100-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarydiffmapping_grpc_100_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "host_rewrite": "canary.1.example.com",
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarydiffmapping-grpc-100-grpc.plain-namespace.1",
            "name": "cluster_http___plain_canarydiffmapping_g-3",
            "namespace": "plain-namespace",
            "service": "plain-canarydiffmapping-grpc-100-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarydiffmapping-grpc-100-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarydiffmapping-grpc-100-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarydiffmapping_grpc_10_grpc_canary_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarydiffmapping-grpc-10-grpc-canary.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarydiffmapping-grpc-10-grpc-canary.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarydiffmapping_grpc_10_grpc_canary_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "host_rewrite": "canary.2.example.com",
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarydiffmapping-grpc-10-grpc-canary.plain-namespace.1",
            "name": "cluster_http___plain_canarydiffmapping_g-4",
            "namespace": "plain-namespace",
            "service": "plain-canarydiffmapping-grpc-10-grpc-canary.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarydiffmapping-grpc-10-grpc-canary.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarydiffmapping-grpc-10-grpc-canary.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarydiffmapping_grpc_10_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarydiffmapping-grpc-10-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarydiffmapping-grpc-10-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarydiffmapping_grpc_10_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "host_rewrite": "canary.1.example.com",
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarydiffmapping-grpc-10-grpc.plain-namespace.1",
            "name": "cluster_http___plain_canarydiffmapping_g-5",
            "namespace": "plain-namespace",
            "service": "plain-canarydiffmapping-grpc-10-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarydiffmapping-grpc-10-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarydiffmapping-grpc-10-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarydiffmapping_grpc_50_grpc_canary_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarydiffmapping-grpc-50-grpc-canary.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarydiffmapping-grpc-50-grpc-canary.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarydiffmapping_grpc_50_grpc_canary_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "host_rewrite": "canary.2.example.com",
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarydiffmapping-grpc-50-grpc-canary.plain-namespace.1",
            "name": "cluster_http___plain_canarydiffmapping_g-6",
            "namespace": "plain-namespace",
            "service": "plain-canarydiffmapping-grpc-50-grpc-canary.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarydiffmapping-grpc-50-grpc-canary.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarydiffmapping-grpc-50-grpc-canary.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarydiffmapping_grpc_50_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarydiffmapping-grpc-50-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarydiffmapping-grpc-50-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarydiffmapping_grpc_50_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "host_rewrite": "canary.1.example.com",
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarydiffmapping-grpc-50-grpc.plain-namespace.1",
            "name": "cluster_http___plain_canarydiffmapping_g-7",
            "namespace": "plain-namespace",
            "service": "plain-canarydiffmapping-grpc-50-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarydiffmapping-grpc-50-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarydiffmapping-grpc-50-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarydiffmapping_http_0_http_canary_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarydiffmapping-http-0-http-canary.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarydiffmapping-http-0-http-canary.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarydiffmapping_http_0_http_canary_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "host_rewrite": "canary.2.example.com",
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarydiffmapping-http-0-http-canary.plain-namespace.1",
            "name": "cluster_http___plain_canarydiffmapping_h-0",
            "namespace": "plain-namespace",
            "service": "plain-canarydiffmapping-http-0-http-canary.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarydiffmapping-http-0-http-canary.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarydiffmapping-http-0-http-canary.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarydiffmapping_http_0_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarydiffmapping-http-0-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarydiffmapping-http-0-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarydiffmapping_http_0_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "host_rewrite": "canary.1.example.com",
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarydiffmapping-http-0-http.plain-namespace.1",
            "name": "cluster_http___plain_canarydiffmapping_h-1",
            "namespace": "plain-namespace",
            "service": "plain-canarydiffmapping-http-0-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarydiffmapping-http-0-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarydiffmapping-http-0-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarydiffmapping_http_100_http_canary_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarydiffmapping-http-100-http-canary.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarydiffmapping-http-100-http-canary.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarydiffmapping_http_100_http_canary_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "host_rewrite": "canary.2.example.com",
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarydiffmapping-http-100-http-canary.plain-namespace.1",
            "name": "cluster_http___plain_canarydiffmapping_h-2",
            "namespace": "plain-namespace",
            "service": "plain-canarydiffmapping-http-100-http-canary.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarydiffmapping-http-100-http-canary.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarydiffmapping-http-100-http-canary.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarydiffmapping_http_100_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarydiffmapping-http-100-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarydiffmapping-http-100-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarydiffmapping_http_100_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "host_rewrite": "canary.1.example.com",
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarydiffmapping-http-100-http.plain-namespace.1",
            "name": "cluster_http___plain_canarydiffmapping_h-3",
            "namespace": "plain-namespace",
            "service": "plain-canarydiffmapping-http-100-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarydiffmapping-http-100-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarydiffmapping-http-100-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarydiffmapping_http_10_http_canary_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarydiffmapping-http-10-http-canary.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarydiffmapping-http-10-http-canary.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarydiffmapping_http_10_http_canary_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "host_rewrite": "canary.2.example.com",
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarydiffmapping-http-10-http-canary.plain-namespace.1",
            "name": "cluster_http___plain_canarydiffmapping_h-4",
            "namespace": "plain-namespace",
            "service": "plain-canarydiffmapping-http-10-http-canary.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarydiffmapping-http-10-http-canary.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarydiffmapping-http-10-http-canary.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarydiffmapping_http_10_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarydiffmapping-http-10-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarydiffmapping-http-10-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarydiffmapping_http_10_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "host_rewrite": "canary.1.example.com",
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarydiffmapping-http-10-http.plain-namespace.1",
            "name": "cluster_http___plain_canarydiffmapping_h-5",
            "namespace": "plain-namespace",
            "service": "plain-canarydiffmapping-http-10-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarydiffmapping-http-10-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarydiffmapping-http-10-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarydiffmapping_http_50_http_canary_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarydiffmapping-http-50-http-canary.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarydiffmapping-http-50-http-canary.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarydiffmapping_http_50_http_canary_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "host_rewrite": "canary.2.example.com",
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarydiffmapping-http-50-http-canary.plain-namespace.1",
            "name": "cluster_http___plain_canarydiffmapping_h-6",
            "namespace": "plain-namespace",
            "service": "plain-canarydiffmapping-http-50-http-canary.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarydiffmapping-http-50-http-canary.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarydiffmapping-http-50-http-canary.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarydiffmapping_http_50_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarydiffmapping-http-50-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarydiffmapping-http-50-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarydiffmapping_http_50_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "host_rewrite": "canary.1.example.com",
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarydiffmapping-http-50-http.plain-namespace.1",
            "name": "cluster_http___plain_canarydiffmapping_h-7",
            "namespace": "plain-namespace",
            "service": "plain-canarydiffmapping-http-50-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarydiffmapping-http-50-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarydiffmapping-http-50-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarymapping_grpc_0_grpc_canary_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarymapping-grpc-0-grpc-canary.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarymapping-grpc-0-grpc-canary.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarymapping_grpc_0_grpc_canary_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarymapping-grpc-0-grpc-canary.plain-namespace.1",
            "name": "cluster_http___plain_canarymapping_grpc_-0",
            "namespace": "plain-namespace",
            "service": "plain-canarymapping-grpc-0-grpc-canary.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarymapping-grpc-0-grpc-canary.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarymapping-grpc-0-grpc-canary.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarymapping_grpc_0_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarymapping-grpc-0-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarymapping-grpc-0-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarymapping_grpc_0_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarymapping-grpc-0-grpc.plain-namespace.1",
            "name": "cluster_http___plain_canarymapping_grpc_-1",
            "namespace": "plain-namespace",
            "service": "plain-canarymapping-grpc-0-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarymapping-grpc-0-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarymapping-grpc-0-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarymapping_grpc_100_grpc_canary_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarymapping-grpc-100-grpc-canary.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarymapping-grpc-100-grpc-canary.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarymapping_grpc_100_grpc_canary_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarymapping-grpc-100-grpc-canary.plain-namespace.1",
            "name": "cluster_http___plain_canarymapping_grpc_-2",
            "namespace": "plain-namespace",
            "service": "plain-canarymapping-grpc-100-grpc-canary.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarymapping-grpc-100-grpc-canary.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarymapping-grpc-100-grpc-canary.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarymapping_grpc_100_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarymapping-grpc-100-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarymapping-grpc-100-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarymapping_grpc_100_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarymapping-grpc-100-grpc.plain-namespace.1",
            "name": "cluster_http___plain_canarymapping_grpc_-3",
            "namespace": "plain-namespace",
            "service": "plain-canarymapping-grpc-100-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarymapping-grpc-100-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarymapping-grpc-100-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarymapping_grpc_10_grpc_canary_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarymapping-grpc-10-grpc-canary.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarymapping-grpc-10-grpc-canary.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarymapping_grpc_10_grpc_canary_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarymapping-grpc-10-grpc-canary.plain-namespace.1",
            "name": "cluster_http___plain_canarymapping_grpc_-4",
            "namespace": "plain-namespace",
            "service": "plain-canarymapping-grpc-10-grpc-canary.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarymapping-grpc-10-grpc-canary.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarymapping-grpc-10-grpc-canary.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarymapping_grpc_10_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarymapping-grpc-10-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarymapping-grpc-10-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarymapping_grpc_10_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarymapping-grpc-10-grpc.plain-namespace.1",
            "name": "cluster_http___plain_canarymapping_grpc_-5",
            "namespace": "plain-namespace",
            "service": "plain-canarymapping-grpc-10-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarymapping-grpc-10-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarymapping-grpc-10-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarymapping_grpc_50_grpc_canary_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarymapping-grpc-50-grpc-canary.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarymapping-grpc-50-grpc-canary.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarymapping_grpc_50_grpc_canary_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarymapping-grpc-50-grpc-canary.plain-namespace.1",
            "name": "cluster_http___plain_canarymapping_grpc_-6",
            "namespace": "plain-namespace",
            "service": "plain-canarymapping-grpc-50-grpc-canary.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarymapping-grpc-50-grpc-canary.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarymapping-grpc-50-grpc-canary.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarymapping_grpc_50_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarymapping-grpc-50-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarymapping-grpc-50-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarymapping_grpc_50_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarymapping-grpc-50-grpc.plain-namespace.1",
            "name": "cluster_http___plain_canarymapping_grpc_-7",
            "namespace": "plain-namespace",
            "service": "plain-canarymapping-grpc-50-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarymapping-grpc-50-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarymapping-grpc-50-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarymapping_http_0_http_canary_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarymapping-http-0-http-canary.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarymapping-http-0-http-canary.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarymapping_http_0_http_canary_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarymapping-http-0-http-canary.plain-namespace.1",
            "name": "cluster_http___plain_canarymapping_http_-0",
            "namespace": "plain-namespace",
            "service": "plain-canarymapping-http-0-http-canary.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarymapping-http-0-http-canary.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarymapping-http-0-http-canary.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarymapping_http_0_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarymapping-http-0-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarymapping-http-0-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarymapping_http_0_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarymapping-http-0-http.plain-namespace.1",
            "name": "cluster_http___plain_canarymapping_http_-1",
            "namespace": "plain-namespace",
            "service": "plain-canarymapping-http-0-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarymapping-http-0-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarymapping-http-0-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarymapping_http_100_http_canary_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarymapping-http-100-http-canary.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarymapping-http-100-http-canary.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarymapping_http_100_http_canary_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarymapping-http-100-http-canary.plain-namespace.1",
            "name": "cluster_http___plain_canarymapping_http_-2",
            "namespace": "plain-namespace",
            "service": "plain-canarymapping-http-100-http-canary.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarymapping-http-100-http-canary.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarymapping-http-100-http-canary.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarymapping_http_100_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarymapping-http-100-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarymapping-http-100-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarymapping_http_100_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarymapping-http-100-http.plain-namespace.1",
            "name": "cluster_http___plain_canarymapping_http_-3",
            "namespace": "plain-namespace",
            "service": "plain-canarymapping-http-100-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarymapping-http-100-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarymapping-http-100-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarymapping_http_10_http_canary_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarymapping-http-10-http-canary.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarymapping-http-10-http-canary.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarymapping_http_10_http_canary_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarymapping-http-10-http-canary.plain-namespace.1",
            "name": "cluster_http___plain_canarymapping_http_-4",
            "namespace": "plain-namespace",
            "service": "plain-canarymapping-http-10-http-canary.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarymapping-http-10-http-canary.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarymapping-http-10-http-canary.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarymapping_http_10_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarymapping-http-10-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarymapping-http-10-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarymapping_http_10_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarymapping-http-10-http.plain-namespace.1",
            "name": "cluster_http___plain_canarymapping_http_-5",
            "namespace": "plain-namespace",
            "service": "plain-canarymapping-http-10-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarymapping-http-10-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarymapping-http-10-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarymapping_http_50_http_canary_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarymapping-http-50-http-canary.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarymapping-http-50-http-canary.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarymapping_http_50_http_canary_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarymapping-http-50-http-canary.plain-namespace.1",
            "name": "cluster_http___plain_canarymapping_http_-6",
            "namespace": "plain-namespace",
            "service": "plain-canarymapping-http-50-http-canary.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarymapping-http-50-http-canary.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarymapping-http-50-http-canary.plain-namespace:80"
            ]
        },
        "cluster_http___plain_canarymapping_http_50_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-canarymapping-http-50-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-canarymapping-http-50-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_canarymapping_http_50_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-canarymapping-http-50-http.plain-namespace.1",
            "name": "cluster_http___plain_canarymapping_http_-7",
            "namespace": "plain-namespace",
            "service": "plain-canarymapping-http-50-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-canarymapping-http-50-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-canarymapping-http-50-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_headerroutingtest_grpc_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-headerroutingtest-grpc-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-headerroutingtest-grpc-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_headerroutingtest_grpc_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-headerroutingtest-grpc-grpc.plain-namespace.1",
            "name": "cluster_http___plain_headerroutingtest_g-0",
            "namespace": "plain-namespace",
            "service": "plain-headerroutingtest-grpc-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-headerroutingtest-grpc-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-headerroutingtest-grpc-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_headerroutingtest_grpc_grpc_target2_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-headerroutingtest-grpc-grpc-target2.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-headerroutingtest-grpc-grpc-target2.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_headerroutingtest_grpc_grpc_target2_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-headerroutingtest-grpc-grpc-target2.plain-namespace.1",
            "name": "cluster_http___plain_headerroutingtest_g-1",
            "namespace": "plain-namespace",
            "service": "plain-headerroutingtest-grpc-grpc-target2.plain-namespace",
            "targets": [
                {
                    "ip": "plain-headerroutingtest-grpc-grpc-target2.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-headerroutingtest-grpc-grpc-target2.plain-namespace:80"
            ]
        },
        "cluster_http___plain_headerroutingtest_http_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-headerroutingtest-http-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-headerroutingtest-http-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_headerroutingtest_http_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-headerroutingtest-http-http.plain-namespace.1",
            "name": "cluster_http___plain_headerroutingtest_h-0",
            "namespace": "plain-namespace",
            "service": "plain-headerroutingtest-http-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-headerroutingtest-http-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-headerroutingtest-http-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_headerroutingtest_http_http_target2_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-headerroutingtest-http-http-target2.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-headerroutingtest-http-http-target2.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_headerroutingtest_http_http_target2_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-headerroutingtest-http-http-target2.plain-namespace.1",
            "name": "cluster_http___plain_headerroutingtest_h-1",
            "namespace": "plain-namespace",
            "service": "plain-headerroutingtest-http-http-target2.plain-namespace",
            "targets": [
                {
                    "ip": "plain-headerroutingtest-http-http-target2.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-headerroutingtest-http-http-target2.plain-namespace:80"
            ]
        },
        "cluster_http___plain_hostheadermapping_grpc_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-hostheadermapping-grpc-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-hostheadermapping-grpc-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_hostheadermapping_grpc_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-hostheadermapping-grpc-grpc.plain-namespace.1",
            "name": "cluster_http___plain_hostheadermapping_g-0",
            "namespace": "plain-namespace",
            "service": "plain-hostheadermapping-grpc-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-hostheadermapping-grpc-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-hostheadermapping-grpc-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_hostheadermapping_http_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-hostheadermapping-http-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-hostheadermapping-http-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_hostheadermapping_http_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-hostheadermapping-http-http.plain-namespace.1",
            "name": "cluster_http___plain_hostheadermapping_h-0",
            "namespace": "plain-namespace",
            "service": "plain-hostheadermapping-http-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-hostheadermapping-http-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-hostheadermapping-http-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_invalidportmapping_grpc_grpc_plain_namespace_80_invalid_plain_namespace": {
            "_active": false,
            "_errored": false,
            "_hostname": "plain-invalidportmapping-grpc-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-invalidportmapping-grpc-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_invalidportmapping_grpc_grpc_plain_namespace_80_invalid_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": true,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-invalidportmapping-grpc-grpc.plain-namespace.1",
            "name": "cluster_http___plain_invalidportmapping_-0",
            "namespace": "plain-namespace",
            "service": "plain-invalidportmapping-grpc-grpc.plain-namespace:80.invalid",
            "type": "strict_dns",
            "urls": [
                "tcp://plain-invalidportmapping-grpc-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_invalidportmapping_http_http_plain_namespace_80_invalid_plain_namespace": {
            "_active": false,
            "_errored": false,
            "_hostname": "plain-invalidportmapping-http-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-invalidportmapping-http-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_invalidportmapping_http_http_plain_namespace_80_invalid_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": true,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-invalidportmapping-http-http.plain-namespace.1",
            "name": "cluster_http___plain_invalidportmapping_-1",
            "namespace": "plain-namespace",
            "service": "plain-invalidportmapping-http-http.plain-namespace:80.invalid",
            "type": "strict_dns",
            "urls": [
                "tcp://plain-invalidportmapping-http-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simpleingresswithannotations_grpc_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simpleingresswithannotations-grpc-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "simpleingresswithannotations-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simpleingresswithannotations_grpc_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "simpleingresswithannotations-grpc.plain-namespace.1",
            "name": "cluster_http___plain_simpleingresswithan-0",
            "namespace": "plain-namespace",
            "service": "plain-simpleingresswithannotations-grpc-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simpleingresswithannotations-grpc-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simpleingresswithannotations-grpc-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simpleingresswithannotations_http_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simpleingresswithannotations-http-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "simpleingresswithannotations-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simpleingresswithannotations_http_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "simpleingresswithannotations-http.plain-namespace.1",
            "name": "cluster_http___plain_simpleingresswithan-1",
            "namespace": "plain-namespace",
            "service": "plain-simpleingresswithannotations-http-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simpleingresswithannotations-http-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simpleingresswithannotations-http-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_grpc_addrequestheaders_aoo_tyu_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_grpc_addrequestheaders_aoo_tyu_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_grpc_-0",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_grpc_addrequestheaders_foo_bar_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_grpc_addrequestheaders_foo_bar_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_grpc_-1",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_grpc_addrequestheaders_moo_arf_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_grpc_addrequestheaders_moo_arf_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_grpc_-2",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_grpc_addrequestheaders_xoo_dwe_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_grpc_addrequestheaders_xoo_dwe_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_grpc_-3",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_grpc_addrequestheaders_zoo_bar_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_grpc_addrequestheaders_zoo_bar_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_grpc_-4",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_grpc_addresponseheaders_aoo_tyu_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_grpc_addresponseheaders_aoo_tyu_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_grpc_-5",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_grpc_addresponseheaders_foo_bar_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_grpc_addresponseheaders_foo_bar_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_grpc_-6",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_grpc_addresponseheaders_moo_arf_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_grpc_addresponseheaders_moo_arf_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_grpc_-7",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_grpc_addresponseheaders_xoo_dwe_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_grpc_addresponseheaders_xoo_dwe_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_grpc_-8",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_grpc_addresponseheaders_zoo_bar_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_grpc_addresponseheaders_zoo_bar_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_grpc_-9",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_grpc_all_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-grpc-all-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-grpc-all-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_grpc_all_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-grpc-all-grpc.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_grpc_-10",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-grpc-all-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-grpc-all-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-grpc-all-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_grpc_autohostrewrite_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-grpc-autohostrewrite-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-grpc-autohostrewrite-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_grpc_autohostrewrite_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-grpc-autohostrewrite-grpc.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_grpc_-11",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-grpc-autohostrewrite-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-grpc-autohostrewrite-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-grpc-autohostrewrite-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_grpc_casesensitive_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-grpc-casesensitive-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-grpc-casesensitive-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_grpc_casesensitive_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-grpc-casesensitive-grpc.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_grpc_-12",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-grpc-casesensitive-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-grpc-casesensitive-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-grpc-casesensitive-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_grpc_cors_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-grpc-cors-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-grpc-cors-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_grpc_cors_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-grpc-cors-grpc.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_grpc_-13",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-grpc-cors-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-grpc-cors-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-grpc-cors-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_grpc_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-grpc-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-grpc-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_grpc_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-grpc-grpc.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_grpc_-14",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-grpc-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-grpc-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-grpc-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_grpc_removeresponseheaders_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-grpc-removeresponseheaders-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-grpc-removeresponseheaders-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_grpc_removeresponseheaders_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-grpc-removeresponseheaders-grpc.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_grpc_-15",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-grpc-removeresponseheaders-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-grpc-removeresponseheaders-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-grpc-removeresponseheaders-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_grpc_rewrite_foo_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-grpc-rewrite-foo-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-grpc-rewrite-foo-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_grpc_rewrite_foo_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-grpc-rewrite-foo-grpc.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_grpc_-16",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-grpc-rewrite-foo-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-grpc-rewrite-foo-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-grpc-rewrite-foo-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_grpc_rewrite_slash_foo_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-grpc-rewrite-slash-foo-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-grpc-rewrite-slash-foo-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_grpc_rewrite_slash_foo_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-grpc-rewrite-slash-foo-grpc.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_grpc_-17",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-grpc-rewrite-slash-foo-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-grpc-rewrite-slash-foo-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-grpc-rewrite-slash-foo-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_grpc_usewebsocket_grpc_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-grpc-usewebsocket-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-grpc-usewebsocket-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_grpc_usewebsocket_grpc_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-grpc-usewebsocket-grpc.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_grpc_-18",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-grpc-usewebsocket-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-grpc-usewebsocket-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-grpc-usewebsocket-grpc.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_http_addrequestheaders_aoo_tyu_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-http-addrequestheaders-aoo-tyu-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-http-addrequestheaders-aoo-tyu-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_http_addrequestheaders_aoo_tyu_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-http-addrequestheaders-aoo-tyu-http.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_http_-0",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-http-addrequestheaders-aoo-tyu-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-http-addrequestheaders-aoo-tyu-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-http-addrequestheaders-aoo-tyu-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_http_addrequestheaders_foo_bar_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-http-addrequestheaders-foo-bar-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-http-addrequestheaders-foo-bar-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_http_addrequestheaders_foo_bar_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-http-addrequestheaders-foo-bar-http.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_http_-1",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-http-addrequestheaders-foo-bar-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-http-addrequestheaders-foo-bar-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-http-addrequestheaders-foo-bar-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_http_addrequestheaders_moo_arf_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-http-addrequestheaders-moo-arf-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-http-addrequestheaders-moo-arf-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_http_addrequestheaders_moo_arf_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-http-addrequestheaders-moo-arf-http.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_http_-2",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-http-addrequestheaders-moo-arf-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-http-addrequestheaders-moo-arf-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-http-addrequestheaders-moo-arf-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_http_addrequestheaders_xoo_dwe_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-http-addrequestheaders-xoo-dwe-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-http-addrequestheaders-xoo-dwe-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_http_addrequestheaders_xoo_dwe_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-http-addrequestheaders-xoo-dwe-http.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_http_-3",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-http-addrequestheaders-xoo-dwe-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-http-addrequestheaders-xoo-dwe-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-http-addrequestheaders-xoo-dwe-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_http_addrequestheaders_zoo_bar_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-http-addrequestheaders-zoo-bar-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-http-addrequestheaders-zoo-bar-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_http_addrequestheaders_zoo_bar_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-http-addrequestheaders-zoo-bar-http.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_http_-4",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-http-addrequestheaders-zoo-bar-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-http-addrequestheaders-zoo-bar-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-http-addrequestheaders-zoo-bar-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_http_addresponseheaders_aoo_tyu_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-http-addresponseheaders-aoo-tyu-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-http-addresponseheaders-aoo-tyu-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_http_addresponseheaders_aoo_tyu_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-http-addresponseheaders-aoo-tyu-http.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_http_-5",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-http-addresponseheaders-aoo-tyu-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-http-addresponseheaders-aoo-tyu-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-http-addresponseheaders-aoo-tyu-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_http_addresponseheaders_foo_bar_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-http-addresponseheaders-foo-bar-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-http-addresponseheaders-foo-bar-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_http_addresponseheaders_foo_bar_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-http-addresponseheaders-foo-bar-http.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_http_-6",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-http-addresponseheaders-foo-bar-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-http-addresponseheaders-foo-bar-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-http-addresponseheaders-foo-bar-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_http_addresponseheaders_moo_arf_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-http-addresponseheaders-moo-arf-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-http-addresponseheaders-moo-arf-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_http_addresponseheaders_moo_arf_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-http-addresponseheaders-moo-arf-http.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_http_-7",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-http-addresponseheaders-moo-arf-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-http-addresponseheaders-moo-arf-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-http-addresponseheaders-moo-arf-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_http_addresponseheaders_xoo_dwe_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-http-addresponseheaders-xoo-dwe-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-http-addresponseheaders-xoo-dwe-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_http_addresponseheaders_xoo_dwe_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-http-addresponseheaders-xoo-dwe-http.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_http_-8",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-http-addresponseheaders-xoo-dwe-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-http-addresponseheaders-xoo-dwe-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-http-addresponseheaders-xoo-dwe-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_http_addresponseheaders_zoo_bar_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-http-addresponseheaders-zoo-bar-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-http-addresponseheaders-zoo-bar-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_http_addresponseheaders_zoo_bar_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-http-addresponseheaders-zoo-bar-http.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_http_-9",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-http-addresponseheaders-zoo-bar-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-http-addresponseheaders-zoo-bar-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-http-addresponseheaders-zoo-bar-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_http_all_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-http-all-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-http-all-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_http_all_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-http-all-http.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_http_-10",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-http-all-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-http-all-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-http-all-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_http_autohostrewrite_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-http-autohostrewrite-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-http-autohostrewrite-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_http_autohostrewrite_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-http-autohostrewrite-http.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_http_-11",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-http-autohostrewrite-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-http-autohostrewrite-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-http-autohostrewrite-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_http_casesensitive_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-http-casesensitive-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-http-casesensitive-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_http_casesensitive_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-http-casesensitive-http.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_http_-12",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-http-casesensitive-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-http-casesensitive-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-http-casesensitive-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_http_cors_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-http-cors-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-http-cors-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_http_cors_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-http-cors-http.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_http_-13",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-http-cors-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-http-cors-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-http-cors-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_http_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-http-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-http-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_http_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-http-http.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_http_-14",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-http-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-http-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-http-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_http_removeresponseheaders_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-http-removeresponseheaders-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-http-removeresponseheaders-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_http_removeresponseheaders_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-http-removeresponseheaders-http.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_http_-15",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-http-removeresponseheaders-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-http-removeresponseheaders-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-http-removeresponseheaders-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_http_rewrite_foo_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-http-rewrite-foo-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-http-rewrite-foo-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_http_rewrite_foo_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-http-rewrite-foo-http.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_http_-16",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-http-rewrite-foo-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-http-rewrite-foo-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-http-rewrite-foo-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_http_rewrite_slash_foo_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-http-rewrite-slash-foo-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-http-rewrite-slash-foo-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_http_rewrite_slash_foo_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-http-rewrite-slash-foo-http.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_http_-17",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-http-rewrite-slash-foo-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-http-rewrite-slash-foo-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-http-rewrite-slash-foo-http.plain-namespace:80"
            ]
        },
        "cluster_http___plain_simplemapping_http_usewebsocket_http_plain_namespace_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemapping-http-usewebsocket-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "plain-simplemapping-http-usewebsocket-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_http___plain_simplemapping_http_usewebsocket_http_plain_namespace_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-simplemapping-http-usewebsocket-http.plain-namespace.1",
            "name": "cluster_http___plain_simplemapping_http_-18",
            "namespace": "plain-namespace",
            "service": "plain-simplemapping-http-usewebsocket-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-simplemapping-http-usewebsocket-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemapping-http-usewebsocket-http.plain-namespace:80"
            ]
        },
        "cluster_https___plain_tlsorigination_grpc_implicit_grpc_plain_namespace_otls_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-tlsorigination-grpc-implicit-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 443,
            "_referenced_by": [
                "plain-tlsorigination-grpc-implicit-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_https___plain_tlsorigination_grpc_implicit_grpc_plain_namespace_otls_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-tlsorigination-grpc-implicit-grpc.plain-namespace.1",
            "name": "cluster_https___plain_tlsorigination_grp-0",
            "namespace": "plain-namespace",
            "service": "plain-tlsorigination-grpc-implicit-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-tlsorigination-grpc-implicit-grpc.plain-namespace",
                    "port": 443,
                    "target_kind": "DNSname"
                }
            ],
            "tls_context": {
                "_active": true,
                "_ambassador_enabled": true,
                "_errored": false,
                "_referenced_by": [
                    "plain-tlsorigination-grpc-explicit-grpc.plain-namespace.1",
                    "plain-tlsorigination-http-explicit-http.plain-namespace.1"
                ],
                "_rkey": "ir.no-cert-upstream",
                "is_fallback": false,
                "kind": "null-TLS-context",
                "location": "ir.no-cert-upstream",
                "name": "no-cert-upstream",
                "namespace": "plain-namespace",
                "secret_info": {}
            },
            "type": "strict_dns",
            "urls": [
                "tcp://plain-tlsorigination-grpc-implicit-grpc.plain-namespace:443"
            ]
        },
        "cluster_https___plain_tlsorigination_http_implicit_http_plain_namespace_otls_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-tlsorigination-http-implicit-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 443,
            "_referenced_by": [
                "plain-tlsorigination-http-implicit-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_https___plain_tlsorigination_http_implicit_http_plain_namespace_otls_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-tlsorigination-http-implicit-http.plain-namespace.1",
            "name": "cluster_https___plain_tlsorigination_htt-0",
            "namespace": "plain-namespace",
            "service": "plain-tlsorigination-http-implicit-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-tlsorigination-http-implicit-http.plain-namespace",
                    "port": 443,
                    "target_kind": "DNSname"
                }
            ],
            "tls_context": {
                "_active": true,
                "_ambassador_enabled": true,
                "_errored": false,
                "_referenced_by": [
                    "plain-tlsorigination-grpc-explicit-grpc.plain-namespace.1",
                    "plain-tlsorigination-http-explicit-http.plain-namespace.1"
                ],
                "_rkey": "ir.no-cert-upstream",
                "is_fallback": false,
                "kind": "null-TLS-context",
                "location": "ir.no-cert-upstream",
                "name": "no-cert-upstream",
                "namespace": "plain-namespace",
                "secret_info": {}
            },
            "type": "strict_dns",
            "urls": [
                "tcp://plain-tlsorigination-http-implicit-http.plain-namespace:443"
            ]
        },
        "cluster_plain_hostheadermappingingress_grpc_grpc_plain_namespace_80_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-hostheadermappingingress-grpc-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "hostheadermappingingress-grpc-0-0.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_plain_hostheadermappingingress_grpc_grpc_plain_namespace_80_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "hostheadermappingingress-grpc-0-0.plain-namespace.1",
            "name": "cluster_plain_hostheadermappingingress_g-0",
            "namespace": "plain-namespace",
            "service": "plain-hostheadermappingingress-grpc-grpc.plain-namespace:80",
            "targets": [
                {
                    "ip": "plain-hostheadermappingingress-grpc-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-hostheadermappingingress-grpc-grpc.plain-namespace:80"
            ]
        },
        "cluster_plain_hostheadermappingingress_http_http_plain_namespace_80_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-hostheadermappingingress-http-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "hostheadermappingingress-http-0-0.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_plain_hostheadermappingingress_http_http_plain_namespace_80_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "hostheadermappingingress-http-0-0.plain-namespace.1",
            "name": "cluster_plain_hostheadermappingingress_h-0",
            "namespace": "plain-namespace",
            "service": "plain-hostheadermappingingress-http-http.plain-namespace:80",
            "targets": [
                {
                    "ip": "plain-hostheadermappingingress-http-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-hostheadermappingingress-http-http.plain-namespace:80"
            ]
        },
        "cluster_plain_simpleingresswithannotations_grpc_grpc_plain_namespace_80_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simpleingresswithannotations-grpc-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "simpleingresswithannotations-grpc-0-0.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_plain_simpleingresswithannotations_grpc_grpc_plain_namespace_80_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "simpleingresswithannotations-grpc-0-0.plain-namespace.1",
            "name": "cluster_plain_simpleingresswithannotatio-0",
            "namespace": "plain-namespace",
            "service": "plain-simpleingresswithannotations-grpc-grpc.plain-namespace:80",
            "targets": [
                {
                    "ip": "plain-simpleingresswithannotations-grpc-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simpleingresswithannotations-grpc-grpc.plain-namespace:80"
            ]
        },
        "cluster_plain_simpleingresswithannotations_http_http_plain_namespace_80_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simpleingresswithannotations-http-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "simpleingresswithannotations-http-0-0.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_plain_simpleingresswithannotations_http_http_plain_namespace_80_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "simpleingresswithannotations-http-0-0.plain-namespace.1",
            "name": "cluster_plain_simpleingresswithannotatio-1",
            "namespace": "plain-namespace",
            "service": "plain-simpleingresswithannotations-http-http.plain-namespace:80",
            "targets": [
                {
                    "ip": "plain-simpleingresswithannotations-http-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simpleingresswithannotations-http-http.plain-namespace:80"
            ]
        },
        "cluster_plain_simplemappingingress_grpc_grpc_plain_namespace_80_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemappingingress-grpc-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "simplemappingingress-grpc-0-0.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_plain_simplemappingingress_grpc_grpc_plain_namespace_80_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "simplemappingingress-grpc-0-0.plain-namespace.1",
            "name": "cluster_plain_simplemappingingress_grpc_-0",
            "namespace": "plain-namespace",
            "service": "plain-simplemappingingress-grpc-grpc.plain-namespace:80",
            "targets": [
                {
                    "ip": "plain-simplemappingingress-grpc-grpc.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemappingingress-grpc-grpc.plain-namespace:80"
            ]
        },
        "cluster_plain_simplemappingingress_http_http_plain_namespace_80_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-simplemappingingress-http-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 80,
            "_referenced_by": [
                "simplemappingingress-http-0-0.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_plain_simplemappingingress_http_http_plain_namespace_80_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "simplemappingingress-http-0-0.plain-namespace.1",
            "name": "cluster_plain_simplemappingingress_http_-0",
            "namespace": "plain-namespace",
            "service": "plain-simplemappingingress-http-http.plain-namespace:80",
            "targets": [
                {
                    "ip": "plain-simplemappingingress-http-http.plain-namespace",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://plain-simplemappingingress-http-http.plain-namespace:80"
            ]
        },
        "cluster_plain_tlsorigination_grpc_explicit_grpc_plain_namespace_otls_no_cert_upstream_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-tlsorigination-grpc-explicit-grpc.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 443,
            "_referenced_by": [
                "plain-tlsorigination-grpc-explicit-grpc.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_plain_tlsorigination_grpc_explicit_grpc_plain_namespace_otls_no_cert_upstream_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-tlsorigination-grpc-explicit-grpc.plain-namespace.1",
            "name": "cluster_plain_tlsorigination_grpc_explic-0",
            "namespace": "plain-namespace",
            "service": "plain-tlsorigination-grpc-explicit-grpc.plain-namespace",
            "targets": [
                {
                    "ip": "plain-tlsorigination-grpc-explicit-grpc.plain-namespace",
                    "port": 443,
                    "target_kind": "DNSname"
                }
            ],
            "tls_context": {
                "_active": true,
                "_ambassador_enabled": true,
                "_errored": false,
                "_referenced_by": [
                    "plain-tlsorigination-grpc-explicit-grpc.plain-namespace.1",
                    "plain-tlsorigination-http-explicit-http.plain-namespace.1"
                ],
                "_rkey": "ir.no-cert-upstream",
                "is_fallback": false,
                "kind": "null-TLS-context",
                "location": "ir.no-cert-upstream",
                "name": "no-cert-upstream",
                "namespace": "plain-namespace",
                "secret_info": {}
            },
            "type": "strict_dns",
            "urls": [
                "tcp://plain-tlsorigination-grpc-explicit-grpc.plain-namespace:443"
            ]
        },
        "cluster_plain_tlsorigination_http_explicit_http_plain_namespace_otls_no_cert_upstream_plain_namespace": {
            "_active": true,
            "_errored": false,
            "_hostname": "plain-tlsorigination-http-explicit-http.plain-namespace",
            "_is_sidecar": false,
            "_namespace": "plain-namespace",
            "_port": 443,
            "_referenced_by": [
                "plain-tlsorigination-http-explicit-http.plain-namespace.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_plain_tlsorigination_http_explicit_http_plain_namespace_otls_no_cert_upstream_plain_namespace",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "plain-tlsorigination-http-explicit-http.plain-namespace.1",
            "name": "cluster_plain_tlsorigination_http_explic-0",
            "namespace": "plain-namespace",
            "service": "plain-tlsorigination-http-explicit-http.plain-namespace",
            "targets": [
                {
                    "ip": "plain-tlsorigination-http-explicit-http.plain-namespace",
                    "port": 443,
                    "target_kind": "DNSname"
                }
            ],
            "tls_context": {
                "_active": true,
                "_ambassador_enabled": true,
                "_errored": false,
                "_referenced_by": [
                    "plain-tlsorigination-grpc-explicit-grpc.plain-namespace.1",
                    "plain-tlsorigination-http-explicit-http.plain-namespace.1"
                ],
                "_rkey": "ir.no-cert-upstream",
                "is_fallback": false,
                "kind": "null-TLS-context",
                "location": "ir.no-cert-upstream",
                "name": "no-cert-upstream",
                "namespace": "plain-namespace",
                "secret_info": {}
            },
            "type": "strict_dns",
            "urls": [
                "tcp://plain-tlsorigination-http-explicit-http.plain-namespace:443"
            ]
        }
    },
    "filters": [
        {
            "_active": true,
            "_errored": false,
            "_rkey": "ir.cors",
            "config": {},
            "kind": "ir.cors",
            "location": "--internal--",
            "name": "cors",
            "namespace": "plain-namespace"
        },
        {
            "_active": true,
            "_errored": false,
            "_rkey": "ir.router",
            "config": {},
            "kind": "ir.router",
            "location": "--internal--",
            "name": "router",
            "namespace": "plain-namespace",
            "type": "decoder"
        }
    ],
    "groups": [
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-http-addresponseheaders-zoo-bar-http.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-http-addresponseheaders-zoo-bar-http.plain-namespace.1",
            "add_response_headers": {
                "zoo": {
                    "append": true,
                    "value": "bar"
                }
            },
            "group_id": "49126e9740c2df8876c6a8ae04e6e5dfef9db870",
            "group_weight": [
                0,
                47,
                0,
                "/SimpleMapping-HTTP-AddResponseHeaders-zoo-bar/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-http-addresponseheaders-zoo-bar-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-http-addresponseheaders-zoo-bar-http.plain-namespace.1",
                    "add_request_headers": {},
                    "add_response_headers": {
                        "zoo": {
                            "append": true,
                            "value": "bar"
                        }
                    },
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-http-addresponseheaders-zoo-bar-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-http-addresponseheaders-zoo-bar-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_http_addresponseheaders_zoo_bar_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-http-addresponseheaders-zoo-bar-http.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_http_-9",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-http-addresponseheaders-zoo-bar-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-http-addresponseheaders-zoo-bar-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-http-addresponseheaders-zoo-bar-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "49126e9740c2df8876c6a8ae04e6e5dfef9db870",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-http-addresponseheaders-zoo-bar-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-HTTP-AddResponseHeaders-zoo-bar",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-HTTP-AddResponseHeaders-zoo-bar/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        47,
                        0,
                        "/SimpleMapping-HTTP-AddResponseHeaders-zoo-bar/",
                        "GET"
                    ],
                    "serialization": "add_response_headers:\n  zoo:\n    append: true\n    value: bar\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-AddResponseHeaders-zoo-bar\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-AddResponseHeaders-zoo-bar/\nservice: http://plain-simplemapping-http-addresponseheaders-zoo-bar-http.plain-namespace\n",
                    "service": "http://plain-simplemapping-http-addresponseheaders-zoo-bar-http.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-HTTP-AddResponseHeaders-zoo-bar",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-HTTP-AddResponseHeaders-zoo-bar/",
            "rewrite": "/",
            "serialization": "add_response_headers:\n  zoo:\n    append: true\n    value: bar\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-AddResponseHeaders-zoo-bar\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-AddResponseHeaders-zoo-bar/\nservice: http://plain-simplemapping-http-addresponseheaders-zoo-bar-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-http-addresponseheaders-xoo-dwe-http.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-http-addresponseheaders-xoo-dwe-http.plain-namespace.1",
            "add_response_headers": {
                "xoo": {
                    "append": false,
                    "value": "dwe"
                }
            },
            "group_id": "4aae2585cb03b25b4fe7a5caf91014a4469c698a",
            "group_weight": [
                0,
                47,
                0,
                "/SimpleMapping-HTTP-AddResponseHeaders-xoo-dwe/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-http-addresponseheaders-xoo-dwe-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-http-addresponseheaders-xoo-dwe-http.plain-namespace.1",
                    "add_request_headers": {},
                    "add_response_headers": {
                        "xoo": {
                            "append": false,
                            "value": "dwe"
                        }
                    },
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-http-addresponseheaders-xoo-dwe-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-http-addresponseheaders-xoo-dwe-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_http_addresponseheaders_xoo_dwe_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-http-addresponseheaders-xoo-dwe-http.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_http_-8",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-http-addresponseheaders-xoo-dwe-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-http-addresponseheaders-xoo-dwe-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-http-addresponseheaders-xoo-dwe-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "4aae2585cb03b25b4fe7a5caf91014a4469c698a",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-http-addresponseheaders-xoo-dwe-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-HTTP-AddResponseHeaders-xoo-dwe",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-HTTP-AddResponseHeaders-xoo-dwe/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        47,
                        0,
                        "/SimpleMapping-HTTP-AddResponseHeaders-xoo-dwe/",
                        "GET"
                    ],
                    "serialization": "add_response_headers:\n  xoo:\n    append: false\n    value: dwe\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-AddResponseHeaders-xoo-dwe\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-AddResponseHeaders-xoo-dwe/\nservice: http://plain-simplemapping-http-addresponseheaders-xoo-dwe-http.plain-namespace\n",
                    "service": "http://plain-simplemapping-http-addresponseheaders-xoo-dwe-http.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-HTTP-AddResponseHeaders-xoo-dwe",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-HTTP-AddResponseHeaders-xoo-dwe/",
            "rewrite": "/",
            "serialization": "add_response_headers:\n  xoo:\n    append: false\n    value: dwe\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-AddResponseHeaders-xoo-dwe\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-AddResponseHeaders-xoo-dwe/\nservice: http://plain-simplemapping-http-addresponseheaders-xoo-dwe-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-http-addresponseheaders-moo-arf-http.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-http-addresponseheaders-moo-arf-http.plain-namespace.1",
            "add_response_headers": {
                "moo": "arf"
            },
            "group_id": "b2eff4d89afaca913787879312ebebe063a5bbe4",
            "group_weight": [
                0,
                47,
                0,
                "/SimpleMapping-HTTP-AddResponseHeaders-moo-arf/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-http-addresponseheaders-moo-arf-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-http-addresponseheaders-moo-arf-http.plain-namespace.1",
                    "add_request_headers": {},
                    "add_response_headers": {
                        "moo": "arf"
                    },
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-http-addresponseheaders-moo-arf-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-http-addresponseheaders-moo-arf-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_http_addresponseheaders_moo_arf_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-http-addresponseheaders-moo-arf-http.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_http_-7",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-http-addresponseheaders-moo-arf-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-http-addresponseheaders-moo-arf-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-http-addresponseheaders-moo-arf-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "b2eff4d89afaca913787879312ebebe063a5bbe4",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-http-addresponseheaders-moo-arf-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-HTTP-AddResponseHeaders-moo-arf",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-HTTP-AddResponseHeaders-moo-arf/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        47,
                        0,
                        "/SimpleMapping-HTTP-AddResponseHeaders-moo-arf/",
                        "GET"
                    ],
                    "serialization": "add_response_headers:\n  moo: arf\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-AddResponseHeaders-moo-arf\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-AddResponseHeaders-moo-arf/\nservice: http://plain-simplemapping-http-addresponseheaders-moo-arf-http.plain-namespace\n",
                    "service": "http://plain-simplemapping-http-addresponseheaders-moo-arf-http.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-HTTP-AddResponseHeaders-moo-arf",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-HTTP-AddResponseHeaders-moo-arf/",
            "rewrite": "/",
            "serialization": "add_response_headers:\n  moo: arf\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-AddResponseHeaders-moo-arf\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-AddResponseHeaders-moo-arf/\nservice: http://plain-simplemapping-http-addresponseheaders-moo-arf-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-http-addresponseheaders-foo-bar-http.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-http-addresponseheaders-foo-bar-http.plain-namespace.1",
            "add_response_headers": {
                "foo": "bar"
            },
            "group_id": "119984eba681273308def88ca539a745b4889d2c",
            "group_weight": [
                0,
                47,
                0,
                "/SimpleMapping-HTTP-AddResponseHeaders-foo-bar/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-http-addresponseheaders-foo-bar-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-http-addresponseheaders-foo-bar-http.plain-namespace.1",
                    "add_request_headers": {},
                    "add_response_headers": {
                        "foo": "bar"
                    },
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-http-addresponseheaders-foo-bar-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-http-addresponseheaders-foo-bar-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_http_addresponseheaders_foo_bar_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-http-addresponseheaders-foo-bar-http.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_http_-6",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-http-addresponseheaders-foo-bar-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-http-addresponseheaders-foo-bar-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-http-addresponseheaders-foo-bar-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "119984eba681273308def88ca539a745b4889d2c",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-http-addresponseheaders-foo-bar-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-HTTP-AddResponseHeaders-foo-bar",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-HTTP-AddResponseHeaders-foo-bar/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        47,
                        0,
                        "/SimpleMapping-HTTP-AddResponseHeaders-foo-bar/",
                        "GET"
                    ],
                    "serialization": "add_response_headers:\n  foo: bar\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-AddResponseHeaders-foo-bar\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-AddResponseHeaders-foo-bar/\nservice: http://plain-simplemapping-http-addresponseheaders-foo-bar-http.plain-namespace\n",
                    "service": "http://plain-simplemapping-http-addresponseheaders-foo-bar-http.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-HTTP-AddResponseHeaders-foo-bar",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-HTTP-AddResponseHeaders-foo-bar/",
            "rewrite": "/",
            "serialization": "add_response_headers:\n  foo: bar\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-AddResponseHeaders-foo-bar\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-AddResponseHeaders-foo-bar/\nservice: http://plain-simplemapping-http-addresponseheaders-foo-bar-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-http-addresponseheaders-aoo-tyu-http.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-http-addresponseheaders-aoo-tyu-http.plain-namespace.1",
            "add_response_headers": {
                "aoo": {
                    "value": "tyu"
                }
            },
            "group_id": "4d316b8e9e28ff7bb44f05e5c55338d45d8ab313",
            "group_weight": [
                0,
                47,
                0,
                "/SimpleMapping-HTTP-AddResponseHeaders-aoo-tyu/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-http-addresponseheaders-aoo-tyu-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-http-addresponseheaders-aoo-tyu-http.plain-namespace.1",
                    "add_request_headers": {},
                    "add_response_headers": {
                        "aoo": {
                            "value": "tyu"
                        }
                    },
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-http-addresponseheaders-aoo-tyu-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-http-addresponseheaders-aoo-tyu-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_http_addresponseheaders_aoo_tyu_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-http-addresponseheaders-aoo-tyu-http.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_http_-5",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-http-addresponseheaders-aoo-tyu-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-http-addresponseheaders-aoo-tyu-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-http-addresponseheaders-aoo-tyu-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "4d316b8e9e28ff7bb44f05e5c55338d45d8ab313",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-http-addresponseheaders-aoo-tyu-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-HTTP-AddResponseHeaders-aoo-tyu",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-HTTP-AddResponseHeaders-aoo-tyu/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        47,
                        0,
                        "/SimpleMapping-HTTP-AddResponseHeaders-aoo-tyu/",
                        "GET"
                    ],
                    "serialization": "add_response_headers:\n  aoo:\n    value: tyu\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-AddResponseHeaders-aoo-tyu\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-AddResponseHeaders-aoo-tyu/\nservice: http://plain-simplemapping-http-addresponseheaders-aoo-tyu-http.plain-namespace\n",
                    "service": "http://plain-simplemapping-http-addresponseheaders-aoo-tyu-http.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-HTTP-AddResponseHeaders-aoo-tyu",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-HTTP-AddResponseHeaders-aoo-tyu/",
            "rewrite": "/",
            "serialization": "add_response_headers:\n  aoo:\n    value: tyu\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-AddResponseHeaders-aoo-tyu\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-AddResponseHeaders-aoo-tyu/\nservice: http://plain-simplemapping-http-addresponseheaders-aoo-tyu-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc.plain-namespace.1",
            "add_response_headers": {
                "zoo": {
                    "append": true,
                    "value": "bar"
                }
            },
            "group_id": "2ec15adbb9ea7de92174e47a4e9cf36c6c052271",
            "group_weight": [
                0,
                47,
                0,
                "/SimpleMapping-GRPC-AddResponseHeaders-zoo-bar/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "add_response_headers": {
                        "zoo": {
                            "append": true,
                            "value": "bar"
                        }
                    },
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_grpc_addresponseheaders_zoo_bar_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_grpc_-9",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "2ec15adbb9ea7de92174e47a4e9cf36c6c052271",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-GRPC-AddResponseHeaders-zoo-bar",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-GRPC-AddResponseHeaders-zoo-bar/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        47,
                        0,
                        "/SimpleMapping-GRPC-AddResponseHeaders-zoo-bar/",
                        "GET"
                    ],
                    "serialization": "add_response_headers:\n  zoo:\n    append: true\n    value: bar\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-AddResponseHeaders-zoo-bar\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-AddResponseHeaders-zoo-bar/\nservice: http://plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc.plain-namespace\n",
                    "service": "http://plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-GRPC-AddResponseHeaders-zoo-bar",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-GRPC-AddResponseHeaders-zoo-bar/",
            "rewrite": "/",
            "serialization": "add_response_headers:\n  zoo:\n    append: true\n    value: bar\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-AddResponseHeaders-zoo-bar\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-AddResponseHeaders-zoo-bar/\nservice: http://plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc.plain-namespace.1",
            "add_response_headers": {
                "xoo": {
                    "append": false,
                    "value": "dwe"
                }
            },
            "group_id": "199f64a3222e0e4114bb21d357502c1d249e63ca",
            "group_weight": [
                0,
                47,
                0,
                "/SimpleMapping-GRPC-AddResponseHeaders-xoo-dwe/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "add_response_headers": {
                        "xoo": {
                            "append": false,
                            "value": "dwe"
                        }
                    },
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_grpc_addresponseheaders_xoo_dwe_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_grpc_-8",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "199f64a3222e0e4114bb21d357502c1d249e63ca",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-GRPC-AddResponseHeaders-xoo-dwe",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-GRPC-AddResponseHeaders-xoo-dwe/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        47,
                        0,
                        "/SimpleMapping-GRPC-AddResponseHeaders-xoo-dwe/",
                        "GET"
                    ],
                    "serialization": "add_response_headers:\n  xoo:\n    append: false\n    value: dwe\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-AddResponseHeaders-xoo-dwe\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-AddResponseHeaders-xoo-dwe/\nservice: http://plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc.plain-namespace\n",
                    "service": "http://plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-GRPC-AddResponseHeaders-xoo-dwe",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-GRPC-AddResponseHeaders-xoo-dwe/",
            "rewrite": "/",
            "serialization": "add_response_headers:\n  xoo:\n    append: false\n    value: dwe\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-AddResponseHeaders-xoo-dwe\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-AddResponseHeaders-xoo-dwe/\nservice: http://plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc.plain-namespace.1",
            "add_response_headers": {
                "moo": "arf"
            },
            "group_id": "ca38bf3841ee7cfb451cb1f5c89de1ba618f0a3e",
            "group_weight": [
                0,
                47,
                0,
                "/SimpleMapping-GRPC-AddResponseHeaders-moo-arf/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "add_response_headers": {
                        "moo": "arf"
                    },
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_grpc_addresponseheaders_moo_arf_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_grpc_-7",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "ca38bf3841ee7cfb451cb1f5c89de1ba618f0a3e",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-GRPC-AddResponseHeaders-moo-arf",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-GRPC-AddResponseHeaders-moo-arf/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        47,
                        0,
                        "/SimpleMapping-GRPC-AddResponseHeaders-moo-arf/",
                        "GET"
                    ],
                    "serialization": "add_response_headers:\n  moo: arf\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-AddResponseHeaders-moo-arf\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-AddResponseHeaders-moo-arf/\nservice: http://plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc.plain-namespace\n",
                    "service": "http://plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-GRPC-AddResponseHeaders-moo-arf",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-GRPC-AddResponseHeaders-moo-arf/",
            "rewrite": "/",
            "serialization": "add_response_headers:\n  moo: arf\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-AddResponseHeaders-moo-arf\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-AddResponseHeaders-moo-arf/\nservice: http://plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc.plain-namespace.1",
            "add_response_headers": {
                "foo": "bar"
            },
            "group_id": "d0d3cdc3ff8a1de173380bbb312d5e2b544ba022",
            "group_weight": [
                0,
                47,
                0,
                "/SimpleMapping-GRPC-AddResponseHeaders-foo-bar/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "add_response_headers": {
                        "foo": "bar"
                    },
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_grpc_addresponseheaders_foo_bar_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_grpc_-6",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "d0d3cdc3ff8a1de173380bbb312d5e2b544ba022",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-GRPC-AddResponseHeaders-foo-bar",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-GRPC-AddResponseHeaders-foo-bar/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        47,
                        0,
                        "/SimpleMapping-GRPC-AddResponseHeaders-foo-bar/",
                        "GET"
                    ],
                    "serialization": "add_response_headers:\n  foo: bar\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-AddResponseHeaders-foo-bar\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-AddResponseHeaders-foo-bar/\nservice: http://plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc.plain-namespace\n",
                    "service": "http://plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-GRPC-AddResponseHeaders-foo-bar",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-GRPC-AddResponseHeaders-foo-bar/",
            "rewrite": "/",
            "serialization": "add_response_headers:\n  foo: bar\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-AddResponseHeaders-foo-bar\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-AddResponseHeaders-foo-bar/\nservice: http://plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc.plain-namespace.1",
            "add_response_headers": {
                "aoo": {
                    "value": "tyu"
                }
            },
            "group_id": "94b115a2d87697f9722a39318584c284adaf0611",
            "group_weight": [
                0,
                47,
                0,
                "/SimpleMapping-GRPC-AddResponseHeaders-aoo-tyu/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "add_response_headers": {
                        "aoo": {
                            "value": "tyu"
                        }
                    },
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_grpc_addresponseheaders_aoo_tyu_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_grpc_-5",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "94b115a2d87697f9722a39318584c284adaf0611",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-GRPC-AddResponseHeaders-aoo-tyu",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-GRPC-AddResponseHeaders-aoo-tyu/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        47,
                        0,
                        "/SimpleMapping-GRPC-AddResponseHeaders-aoo-tyu/",
                        "GET"
                    ],
                    "serialization": "add_response_headers:\n  aoo:\n    value: tyu\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-AddResponseHeaders-aoo-tyu\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-AddResponseHeaders-aoo-tyu/\nservice: http://plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc.plain-namespace\n",
                    "service": "http://plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-GRPC-AddResponseHeaders-aoo-tyu",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-GRPC-AddResponseHeaders-aoo-tyu/",
            "rewrite": "/",
            "serialization": "add_response_headers:\n  aoo:\n    value: tyu\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-AddResponseHeaders-aoo-tyu\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-AddResponseHeaders-aoo-tyu/\nservice: http://plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-http-addrequestheaders-zoo-bar-http.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-http-addrequestheaders-zoo-bar-http.plain-namespace.1",
            "add_request_headers": {
                "zoo": {
                    "append": true,
                    "value": "bar"
                }
            },
            "group_id": "1d03608b1f043160f7ee4cf2e393d5c5d318ba9e",
            "group_weight": [
                0,
                46,
                0,
                "/SimpleMapping-HTTP-AddRequestHeaders-zoo-bar/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-http-addrequestheaders-zoo-bar-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-http-addrequestheaders-zoo-bar-http.plain-namespace.1",
                    "add_request_headers": {
                        "zoo": {
                            "append": true,
                            "value": "bar"
                        }
                    },
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-http-addrequestheaders-zoo-bar-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-http-addrequestheaders-zoo-bar-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_http_addrequestheaders_zoo_bar_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-http-addrequestheaders-zoo-bar-http.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_http_-4",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-http-addrequestheaders-zoo-bar-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-http-addrequestheaders-zoo-bar-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-http-addrequestheaders-zoo-bar-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "1d03608b1f043160f7ee4cf2e393d5c5d318ba9e",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-http-addrequestheaders-zoo-bar-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-HTTP-AddRequestHeaders-zoo-bar",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-HTTP-AddRequestHeaders-zoo-bar/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        46,
                        0,
                        "/SimpleMapping-HTTP-AddRequestHeaders-zoo-bar/",
                        "GET"
                    ],
                    "serialization": "add_request_headers:\n  zoo:\n    append: true\n    value: bar\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-AddRequestHeaders-zoo-bar\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-AddRequestHeaders-zoo-bar/\nservice: http://plain-simplemapping-http-addrequestheaders-zoo-bar-http.plain-namespace\n",
                    "service": "http://plain-simplemapping-http-addrequestheaders-zoo-bar-http.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-HTTP-AddRequestHeaders-zoo-bar",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-HTTP-AddRequestHeaders-zoo-bar/",
            "rewrite": "/",
            "serialization": "add_request_headers:\n  zoo:\n    append: true\n    value: bar\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-AddRequestHeaders-zoo-bar\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-AddRequestHeaders-zoo-bar/\nservice: http://plain-simplemapping-http-addrequestheaders-zoo-bar-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-http-addrequestheaders-xoo-dwe-http.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-http-addrequestheaders-xoo-dwe-http.plain-namespace.1",
            "add_request_headers": {
                "xoo": {
                    "append": false,
                    "value": "dwe"
                }
            },
            "group_id": "8dd60d9aa5dee1f36c89156bc93118146bfdc3d7",
            "group_weight": [
                0,
                46,
                0,
                "/SimpleMapping-HTTP-AddRequestHeaders-xoo-dwe/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-http-addrequestheaders-xoo-dwe-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-http-addrequestheaders-xoo-dwe-http.plain-namespace.1",
                    "add_request_headers": {
                        "xoo": {
                            "append": false,
                            "value": "dwe"
                        }
                    },
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-http-addrequestheaders-xoo-dwe-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-http-addrequestheaders-xoo-dwe-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_http_addrequestheaders_xoo_dwe_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-http-addrequestheaders-xoo-dwe-http.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_http_-3",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-http-addrequestheaders-xoo-dwe-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-http-addrequestheaders-xoo-dwe-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-http-addrequestheaders-xoo-dwe-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "8dd60d9aa5dee1f36c89156bc93118146bfdc3d7",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-http-addrequestheaders-xoo-dwe-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-HTTP-AddRequestHeaders-xoo-dwe",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-HTTP-AddRequestHeaders-xoo-dwe/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        46,
                        0,
                        "/SimpleMapping-HTTP-AddRequestHeaders-xoo-dwe/",
                        "GET"
                    ],
                    "serialization": "add_request_headers:\n  xoo:\n    append: false\n    value: dwe\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-AddRequestHeaders-xoo-dwe\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-AddRequestHeaders-xoo-dwe/\nservice: http://plain-simplemapping-http-addrequestheaders-xoo-dwe-http.plain-namespace\n",
                    "service": "http://plain-simplemapping-http-addrequestheaders-xoo-dwe-http.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-HTTP-AddRequestHeaders-xoo-dwe",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-HTTP-AddRequestHeaders-xoo-dwe/",
            "rewrite": "/",
            "serialization": "add_request_headers:\n  xoo:\n    append: false\n    value: dwe\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-AddRequestHeaders-xoo-dwe\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-AddRequestHeaders-xoo-dwe/\nservice: http://plain-simplemapping-http-addrequestheaders-xoo-dwe-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-http-addrequestheaders-moo-arf-http.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-http-addrequestheaders-moo-arf-http.plain-namespace.1",
            "add_request_headers": {
                "moo": "arf"
            },
            "group_id": "0098ecc126cfece06377359ae9862b0240d4e8c7",
            "group_weight": [
                0,
                46,
                0,
                "/SimpleMapping-HTTP-AddRequestHeaders-moo-arf/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-http-addrequestheaders-moo-arf-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-http-addrequestheaders-moo-arf-http.plain-namespace.1",
                    "add_request_headers": {
                        "moo": "arf"
                    },
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-http-addrequestheaders-moo-arf-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-http-addrequestheaders-moo-arf-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_http_addrequestheaders_moo_arf_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-http-addrequestheaders-moo-arf-http.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_http_-2",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-http-addrequestheaders-moo-arf-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-http-addrequestheaders-moo-arf-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-http-addrequestheaders-moo-arf-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "0098ecc126cfece06377359ae9862b0240d4e8c7",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-http-addrequestheaders-moo-arf-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-HTTP-AddRequestHeaders-moo-arf",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-HTTP-AddRequestHeaders-moo-arf/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        46,
                        0,
                        "/SimpleMapping-HTTP-AddRequestHeaders-moo-arf/",
                        "GET"
                    ],
                    "serialization": "add_request_headers:\n  moo: arf\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-AddRequestHeaders-moo-arf\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-AddRequestHeaders-moo-arf/\nservice: http://plain-simplemapping-http-addrequestheaders-moo-arf-http.plain-namespace\n",
                    "service": "http://plain-simplemapping-http-addrequestheaders-moo-arf-http.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-HTTP-AddRequestHeaders-moo-arf",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-HTTP-AddRequestHeaders-moo-arf/",
            "rewrite": "/",
            "serialization": "add_request_headers:\n  moo: arf\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-AddRequestHeaders-moo-arf\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-AddRequestHeaders-moo-arf/\nservice: http://plain-simplemapping-http-addrequestheaders-moo-arf-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-http-addrequestheaders-foo-bar-http.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-http-addrequestheaders-foo-bar-http.plain-namespace.1",
            "add_request_headers": {
                "foo": "bar"
            },
            "group_id": "4979b35e4c7de2c696d579dd42eada70fe4c8be0",
            "group_weight": [
                0,
                46,
                0,
                "/SimpleMapping-HTTP-AddRequestHeaders-foo-bar/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-http-addrequestheaders-foo-bar-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-http-addrequestheaders-foo-bar-http.plain-namespace.1",
                    "add_request_headers": {
                        "foo": "bar"
                    },
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-http-addrequestheaders-foo-bar-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-http-addrequestheaders-foo-bar-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_http_addrequestheaders_foo_bar_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-http-addrequestheaders-foo-bar-http.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_http_-1",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-http-addrequestheaders-foo-bar-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-http-addrequestheaders-foo-bar-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-http-addrequestheaders-foo-bar-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "4979b35e4c7de2c696d579dd42eada70fe4c8be0",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-http-addrequestheaders-foo-bar-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-HTTP-AddRequestHeaders-foo-bar",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-HTTP-AddRequestHeaders-foo-bar/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        46,
                        0,
                        "/SimpleMapping-HTTP-AddRequestHeaders-foo-bar/",
                        "GET"
                    ],
                    "serialization": "add_request_headers:\n  foo: bar\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-AddRequestHeaders-foo-bar\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-AddRequestHeaders-foo-bar/\nservice: http://plain-simplemapping-http-addrequestheaders-foo-bar-http.plain-namespace\n",
                    "service": "http://plain-simplemapping-http-addrequestheaders-foo-bar-http.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-HTTP-AddRequestHeaders-foo-bar",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-HTTP-AddRequestHeaders-foo-bar/",
            "rewrite": "/",
            "serialization": "add_request_headers:\n  foo: bar\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-AddRequestHeaders-foo-bar\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-AddRequestHeaders-foo-bar/\nservice: http://plain-simplemapping-http-addrequestheaders-foo-bar-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-http-addrequestheaders-aoo-tyu-http.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-http-addrequestheaders-aoo-tyu-http.plain-namespace.1",
            "add_request_headers": {
                "aoo": {
                    "value": "tyu"
                }
            },
            "group_id": "c6023bc4e22f35ae098eb1320c393cbc4047f03b",
            "group_weight": [
                0,
                46,
                0,
                "/SimpleMapping-HTTP-AddRequestHeaders-aoo-tyu/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-http-addrequestheaders-aoo-tyu-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-http-addrequestheaders-aoo-tyu-http.plain-namespace.1",
                    "add_request_headers": {
                        "aoo": {
                            "value": "tyu"
                        }
                    },
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-http-addrequestheaders-aoo-tyu-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-http-addrequestheaders-aoo-tyu-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_http_addrequestheaders_aoo_tyu_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-http-addrequestheaders-aoo-tyu-http.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_http_-0",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-http-addrequestheaders-aoo-tyu-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-http-addrequestheaders-aoo-tyu-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-http-addrequestheaders-aoo-tyu-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "c6023bc4e22f35ae098eb1320c393cbc4047f03b",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-http-addrequestheaders-aoo-tyu-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-HTTP-AddRequestHeaders-aoo-tyu",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-HTTP-AddRequestHeaders-aoo-tyu/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        46,
                        0,
                        "/SimpleMapping-HTTP-AddRequestHeaders-aoo-tyu/",
                        "GET"
                    ],
                    "serialization": "add_request_headers:\n  aoo:\n    value: tyu\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-AddRequestHeaders-aoo-tyu\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-AddRequestHeaders-aoo-tyu/\nservice: http://plain-simplemapping-http-addrequestheaders-aoo-tyu-http.plain-namespace\n",
                    "service": "http://plain-simplemapping-http-addrequestheaders-aoo-tyu-http.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-HTTP-AddRequestHeaders-aoo-tyu",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-HTTP-AddRequestHeaders-aoo-tyu/",
            "rewrite": "/",
            "serialization": "add_request_headers:\n  aoo:\n    value: tyu\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-AddRequestHeaders-aoo-tyu\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-AddRequestHeaders-aoo-tyu/\nservice: http://plain-simplemapping-http-addrequestheaders-aoo-tyu-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc.plain-namespace.1",
            "add_request_headers": {
                "zoo": {
                    "append": true,
                    "value": "bar"
                }
            },
            "group_id": "c487e4e6b9b85c21389691855eebf0dfb1188a3f",
            "group_weight": [
                0,
                46,
                0,
                "/SimpleMapping-GRPC-AddRequestHeaders-zoo-bar/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc.plain-namespace.1",
                    "add_request_headers": {
                        "zoo": {
                            "append": true,
                            "value": "bar"
                        }
                    },
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_grpc_addrequestheaders_zoo_bar_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_grpc_-4",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "c487e4e6b9b85c21389691855eebf0dfb1188a3f",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-GRPC-AddRequestHeaders-zoo-bar",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-GRPC-AddRequestHeaders-zoo-bar/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        46,
                        0,
                        "/SimpleMapping-GRPC-AddRequestHeaders-zoo-bar/",
                        "GET"
                    ],
                    "serialization": "add_request_headers:\n  zoo:\n    append: true\n    value: bar\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-AddRequestHeaders-zoo-bar\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-AddRequestHeaders-zoo-bar/\nservice: http://plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc.plain-namespace\n",
                    "service": "http://plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-GRPC-AddRequestHeaders-zoo-bar",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-GRPC-AddRequestHeaders-zoo-bar/",
            "rewrite": "/",
            "serialization": "add_request_headers:\n  zoo:\n    append: true\n    value: bar\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-AddRequestHeaders-zoo-bar\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-AddRequestHeaders-zoo-bar/\nservice: http://plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc.plain-namespace.1",
            "add_request_headers": {
                "xoo": {
                    "append": false,
                    "value": "dwe"
                }
            },
            "group_id": "487bad87e928b589a8580a601a1fe26e61cd87fd",
            "group_weight": [
                0,
                46,
                0,
                "/SimpleMapping-GRPC-AddRequestHeaders-xoo-dwe/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc.plain-namespace.1",
                    "add_request_headers": {
                        "xoo": {
                            "append": false,
                            "value": "dwe"
                        }
                    },
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_grpc_addrequestheaders_xoo_dwe_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_grpc_-3",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "487bad87e928b589a8580a601a1fe26e61cd87fd",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-GRPC-AddRequestHeaders-xoo-dwe",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-GRPC-AddRequestHeaders-xoo-dwe/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        46,
                        0,
                        "/SimpleMapping-GRPC-AddRequestHeaders-xoo-dwe/",
                        "GET"
                    ],
                    "serialization": "add_request_headers:\n  xoo:\n    append: false\n    value: dwe\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-AddRequestHeaders-xoo-dwe\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-AddRequestHeaders-xoo-dwe/\nservice: http://plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc.plain-namespace\n",
                    "service": "http://plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-GRPC-AddRequestHeaders-xoo-dwe",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-GRPC-AddRequestHeaders-xoo-dwe/",
            "rewrite": "/",
            "serialization": "add_request_headers:\n  xoo:\n    append: false\n    value: dwe\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-AddRequestHeaders-xoo-dwe\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-AddRequestHeaders-xoo-dwe/\nservice: http://plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc.plain-namespace.1",
            "add_request_headers": {
                "moo": "arf"
            },
            "group_id": "c9042937a997268f1f046fa9797cd269c7f87415",
            "group_weight": [
                0,
                46,
                0,
                "/SimpleMapping-GRPC-AddRequestHeaders-moo-arf/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc.plain-namespace.1",
                    "add_request_headers": {
                        "moo": "arf"
                    },
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_grpc_addrequestheaders_moo_arf_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_grpc_-2",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "c9042937a997268f1f046fa9797cd269c7f87415",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-GRPC-AddRequestHeaders-moo-arf",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-GRPC-AddRequestHeaders-moo-arf/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        46,
                        0,
                        "/SimpleMapping-GRPC-AddRequestHeaders-moo-arf/",
                        "GET"
                    ],
                    "serialization": "add_request_headers:\n  moo: arf\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-AddRequestHeaders-moo-arf\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-AddRequestHeaders-moo-arf/\nservice: http://plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc.plain-namespace\n",
                    "service": "http://plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-GRPC-AddRequestHeaders-moo-arf",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-GRPC-AddRequestHeaders-moo-arf/",
            "rewrite": "/",
            "serialization": "add_request_headers:\n  moo: arf\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-AddRequestHeaders-moo-arf\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-AddRequestHeaders-moo-arf/\nservice: http://plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc.plain-namespace.1",
            "add_request_headers": {
                "foo": "bar"
            },
            "group_id": "ceb529cd12150bc8400d3413ae8799fc4dd91b4b",
            "group_weight": [
                0,
                46,
                0,
                "/SimpleMapping-GRPC-AddRequestHeaders-foo-bar/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc.plain-namespace.1",
                    "add_request_headers": {
                        "foo": "bar"
                    },
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_grpc_addrequestheaders_foo_bar_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_grpc_-1",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "ceb529cd12150bc8400d3413ae8799fc4dd91b4b",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-GRPC-AddRequestHeaders-foo-bar",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-GRPC-AddRequestHeaders-foo-bar/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        46,
                        0,
                        "/SimpleMapping-GRPC-AddRequestHeaders-foo-bar/",
                        "GET"
                    ],
                    "serialization": "add_request_headers:\n  foo: bar\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-AddRequestHeaders-foo-bar\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-AddRequestHeaders-foo-bar/\nservice: http://plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc.plain-namespace\n",
                    "service": "http://plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-GRPC-AddRequestHeaders-foo-bar",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-GRPC-AddRequestHeaders-foo-bar/",
            "rewrite": "/",
            "serialization": "add_request_headers:\n  foo: bar\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-AddRequestHeaders-foo-bar\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-AddRequestHeaders-foo-bar/\nservice: http://plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc.plain-namespace.1",
            "add_request_headers": {
                "aoo": {
                    "value": "tyu"
                }
            },
            "group_id": "20300692fe7aad221e63395ec638cfda9cc6ae7b",
            "group_weight": [
                0,
                46,
                0,
                "/SimpleMapping-GRPC-AddRequestHeaders-aoo-tyu/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc.plain-namespace.1",
                    "add_request_headers": {
                        "aoo": {
                            "value": "tyu"
                        }
                    },
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_grpc_addrequestheaders_aoo_tyu_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_grpc_-0",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "20300692fe7aad221e63395ec638cfda9cc6ae7b",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-GRPC-AddRequestHeaders-aoo-tyu",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-GRPC-AddRequestHeaders-aoo-tyu/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        46,
                        0,
                        "/SimpleMapping-GRPC-AddRequestHeaders-aoo-tyu/",
                        "GET"
                    ],
                    "serialization": "add_request_headers:\n  aoo:\n    value: tyu\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-AddRequestHeaders-aoo-tyu\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-AddRequestHeaders-aoo-tyu/\nservice: http://plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc.plain-namespace\n",
                    "service": "http://plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-GRPC-AddRequestHeaders-aoo-tyu",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-GRPC-AddRequestHeaders-aoo-tyu/",
            "rewrite": "/",
            "serialization": "add_request_headers:\n  aoo:\n    value: tyu\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-AddRequestHeaders-aoo-tyu\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-AddRequestHeaders-aoo-tyu/\nservice: http://plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-http-removeresponseheaders-http.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-http-removeresponseheaders-http.plain-namespace.1",
            "group_id": "c8dfbdb289f47a0998eaaa2f797fa3a3dd685cee",
            "group_weight": [
                0,
                42,
                0,
                "/SimpleMapping-HTTP-RemoveResponseHeaders/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-http-removeresponseheaders-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-http-removeresponseheaders-http.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-http-removeresponseheaders-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-http-removeresponseheaders-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_http_removeresponseheaders_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-http-removeresponseheaders-http.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_http_-15",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-http-removeresponseheaders-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-http-removeresponseheaders-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-http-removeresponseheaders-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "c8dfbdb289f47a0998eaaa2f797fa3a3dd685cee",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-http-removeresponseheaders-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-HTTP-RemoveResponseHeaders",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-HTTP-RemoveResponseHeaders/",
                    "remove_response_headers": "x-envoy-upstream-service-time",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        42,
                        0,
                        "/SimpleMapping-HTTP-RemoveResponseHeaders/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-RemoveResponseHeaders\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-RemoveResponseHeaders/\nremove_response_headers: x-envoy-upstream-service-time\nservice: http://plain-simplemapping-http-removeresponseheaders-http.plain-namespace\n",
                    "service": "http://plain-simplemapping-http-removeresponseheaders-http.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-HTTP-RemoveResponseHeaders",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-HTTP-RemoveResponseHeaders/",
            "remove_response_headers": "x-envoy-upstream-service-time",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-RemoveResponseHeaders\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-RemoveResponseHeaders/\nremove_response_headers: x-envoy-upstream-service-time\nservice: http://plain-simplemapping-http-removeresponseheaders-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-grpc-removeresponseheaders-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-grpc-removeresponseheaders-grpc.plain-namespace.1",
            "group_id": "26d605908ea8a0834fd11391e5f1bd0ffb344c29",
            "group_weight": [
                0,
                42,
                0,
                "/SimpleMapping-GRPC-RemoveResponseHeaders/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-grpc-removeresponseheaders-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-grpc-removeresponseheaders-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-grpc-removeresponseheaders-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-grpc-removeresponseheaders-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_grpc_removeresponseheaders_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-grpc-removeresponseheaders-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_grpc_-15",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-grpc-removeresponseheaders-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-grpc-removeresponseheaders-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-grpc-removeresponseheaders-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "26d605908ea8a0834fd11391e5f1bd0ffb344c29",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-grpc-removeresponseheaders-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-GRPC-RemoveResponseHeaders",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-GRPC-RemoveResponseHeaders/",
                    "remove_response_headers": "x-envoy-upstream-service-time",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        42,
                        0,
                        "/SimpleMapping-GRPC-RemoveResponseHeaders/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-RemoveResponseHeaders\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-RemoveResponseHeaders/\nremove_response_headers: x-envoy-upstream-service-time\nservice: http://plain-simplemapping-grpc-removeresponseheaders-grpc.plain-namespace\n",
                    "service": "http://plain-simplemapping-grpc-removeresponseheaders-grpc.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-GRPC-RemoveResponseHeaders",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-GRPC-RemoveResponseHeaders/",
            "remove_response_headers": "x-envoy-upstream-service-time",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-RemoveResponseHeaders\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-RemoveResponseHeaders/\nremove_response_headers: x-envoy-upstream-service-time\nservice: http://plain-simplemapping-grpc-removeresponseheaders-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "simpleingresswithannotations-http.plain-namespace.1"
            ],
            "_rkey": "simpleingresswithannotations-http.plain-namespace.1",
            "group_id": "e4c9f7dd5c71216d2eb35dadb1dad2ed398223e8",
            "group_weight": [
                0,
                42,
                0,
                "/SimpleIngressWithAnnotations-HTTP-nested/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "simpleingresswithannotations-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "simpleingresswithannotations-http.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simpleingresswithannotations-http-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "simpleingresswithannotations-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simpleingresswithannotations_http_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "simpleingresswithannotations-http.plain-namespace.1",
                        "name": "cluster_http___plain_simpleingresswithan-1",
                        "namespace": "plain-namespace",
                        "service": "plain-simpleingresswithannotations-http-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simpleingresswithannotations-http-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simpleingresswithannotations-http-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "e4c9f7dd5c71216d2eb35dadb1dad2ed398223e8",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "simpleingresswithannotations-http.plain-namespace.1",
                    "metadata_labels": {
                        "ambassador_crd": "simpleingresswithannotations-http-0-0.plain-namespace",
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleIngressWithAnnotations-HTTP-nested",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleIngressWithAnnotations-HTTP-nested/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        42,
                        0,
                        "/SimpleIngressWithAnnotations-HTTP-nested/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  ambassador_crd: simpleingresswithannotations-http-0-0.plain-namespace\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleIngressWithAnnotations-HTTP-nested\nprefix: /SimpleIngressWithAnnotations-HTTP-nested/\nservice: http://plain-simpleingresswithannotations-http-http.plain-namespace\n",
                    "service": "http://plain-simpleingresswithannotations-http-http.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "ambassador_crd": "simpleingresswithannotations-http-0-0.plain-namespace",
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleIngressWithAnnotations-HTTP-nested",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleIngressWithAnnotations-HTTP-nested/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  ambassador_crd: simpleingresswithannotations-http-0-0.plain-namespace\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleIngressWithAnnotations-HTTP-nested\nprefix: /SimpleIngressWithAnnotations-HTTP-nested/\nservice: http://plain-simpleingresswithannotations-http-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "simpleingresswithannotations-grpc.plain-namespace.1"
            ],
            "_rkey": "simpleingresswithannotations-grpc.plain-namespace.1",
            "group_id": "13720e7b8969add2713610b8099ef8059a6ae87a",
            "group_weight": [
                0,
                42,
                0,
                "/SimpleIngressWithAnnotations-GRPC-nested/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "simpleingresswithannotations-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "simpleingresswithannotations-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simpleingresswithannotations-grpc-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "simpleingresswithannotations-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simpleingresswithannotations_grpc_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "simpleingresswithannotations-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_simpleingresswithan-0",
                        "namespace": "plain-namespace",
                        "service": "plain-simpleingresswithannotations-grpc-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simpleingresswithannotations-grpc-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simpleingresswithannotations-grpc-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "13720e7b8969add2713610b8099ef8059a6ae87a",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "simpleingresswithannotations-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "ambassador_crd": "simpleingresswithannotations-grpc-0-0.plain-namespace",
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleIngressWithAnnotations-GRPC-nested",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleIngressWithAnnotations-GRPC-nested/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        42,
                        0,
                        "/SimpleIngressWithAnnotations-GRPC-nested/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  ambassador_crd: simpleingresswithannotations-grpc-0-0.plain-namespace\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleIngressWithAnnotations-GRPC-nested\nprefix: /SimpleIngressWithAnnotations-GRPC-nested/\nservice: http://plain-simpleingresswithannotations-grpc-grpc.plain-namespace\n",
                    "service": "http://plain-simpleingresswithannotations-grpc-grpc.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "ambassador_crd": "simpleingresswithannotations-grpc-0-0.plain-namespace",
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleIngressWithAnnotations-GRPC-nested",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleIngressWithAnnotations-GRPC-nested/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  ambassador_crd: simpleingresswithannotations-grpc-0-0.plain-namespace\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleIngressWithAnnotations-GRPC-nested\nprefix: /SimpleIngressWithAnnotations-GRPC-nested/\nservice: http://plain-simpleingresswithannotations-grpc-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-http-rewrite-slash-foo-http.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-http-rewrite-slash-foo-http.plain-namespace.1",
            "group_id": "abe6dbd46ef461050fd5eaac17836f38bf290d31",
            "group_weight": [
                0,
                38,
                0,
                "/SimpleMapping-HTTP-Rewrite-SLASH-foo/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-http-rewrite-slash-foo-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-http-rewrite-slash-foo-http.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-http-rewrite-slash-foo-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-http-rewrite-slash-foo-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_http_rewrite_slash_foo_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-http-rewrite-slash-foo-http.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_http_-17",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-http-rewrite-slash-foo-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-http-rewrite-slash-foo-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-http-rewrite-slash-foo-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "abe6dbd46ef461050fd5eaac17836f38bf290d31",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-http-rewrite-slash-foo-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-HTTP-Rewrite-SLASH-foo",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-HTTP-Rewrite-SLASH-foo/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/foo",
                    "route_weight": [
                        0,
                        38,
                        0,
                        "/SimpleMapping-HTTP-Rewrite-SLASH-foo/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-Rewrite-SLASH-foo\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-Rewrite-SLASH-foo/\nrewrite: /foo\nservice: http://plain-simplemapping-http-rewrite-slash-foo-http.plain-namespace\n",
                    "service": "http://plain-simplemapping-http-rewrite-slash-foo-http.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-HTTP-Rewrite-SLASH-foo",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-HTTP-Rewrite-SLASH-foo/",
            "rewrite": "/foo",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-Rewrite-SLASH-foo\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-Rewrite-SLASH-foo/\nrewrite: /foo\nservice: http://plain-simplemapping-http-rewrite-slash-foo-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-grpc-rewrite-slash-foo-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-grpc-rewrite-slash-foo-grpc.plain-namespace.1",
            "group_id": "ff99456b01c7391f21987d1758acd53e6cafe857",
            "group_weight": [
                0,
                38,
                0,
                "/SimpleMapping-GRPC-Rewrite-SLASH-foo/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-grpc-rewrite-slash-foo-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-grpc-rewrite-slash-foo-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-grpc-rewrite-slash-foo-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-grpc-rewrite-slash-foo-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_grpc_rewrite_slash_foo_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-grpc-rewrite-slash-foo-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_grpc_-17",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-grpc-rewrite-slash-foo-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-grpc-rewrite-slash-foo-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-grpc-rewrite-slash-foo-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "ff99456b01c7391f21987d1758acd53e6cafe857",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-grpc-rewrite-slash-foo-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-GRPC-Rewrite-SLASH-foo",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-GRPC-Rewrite-SLASH-foo/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/foo",
                    "route_weight": [
                        0,
                        38,
                        0,
                        "/SimpleMapping-GRPC-Rewrite-SLASH-foo/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-Rewrite-SLASH-foo\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-Rewrite-SLASH-foo/\nrewrite: /foo\nservice: http://plain-simplemapping-grpc-rewrite-slash-foo-grpc.plain-namespace\n",
                    "service": "http://plain-simplemapping-grpc-rewrite-slash-foo-grpc.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-GRPC-Rewrite-SLASH-foo",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-GRPC-Rewrite-SLASH-foo/",
            "rewrite": "/foo",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-Rewrite-SLASH-foo\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-Rewrite-SLASH-foo/\nrewrite: /foo\nservice: http://plain-simplemapping-grpc-rewrite-slash-foo-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-http-autohostrewrite-http.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-http-autohostrewrite-http.plain-namespace.1",
            "auto_host_rewrite": true,
            "group_id": "d2f92ac6600e0d794afc9a71774689a20494d502",
            "group_weight": [
                0,
                36,
                0,
                "/SimpleMapping-HTTP-AutoHostRewrite/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-http-autohostrewrite-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-http-autohostrewrite-http.plain-namespace.1",
                    "add_request_headers": {},
                    "auto_host_rewrite": true,
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-http-autohostrewrite-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-http-autohostrewrite-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_http_autohostrewrite_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-http-autohostrewrite-http.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_http_-11",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-http-autohostrewrite-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-http-autohostrewrite-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-http-autohostrewrite-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "d2f92ac6600e0d794afc9a71774689a20494d502",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-http-autohostrewrite-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-HTTP-AutoHostRewrite",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-HTTP-AutoHostRewrite/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        36,
                        0,
                        "/SimpleMapping-HTTP-AutoHostRewrite/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nauto_host_rewrite: true\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-AutoHostRewrite\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-AutoHostRewrite/\nservice: http://plain-simplemapping-http-autohostrewrite-http.plain-namespace\n",
                    "service": "http://plain-simplemapping-http-autohostrewrite-http.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-HTTP-AutoHostRewrite",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-HTTP-AutoHostRewrite/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nauto_host_rewrite: true\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-AutoHostRewrite\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-AutoHostRewrite/\nservice: http://plain-simplemapping-http-autohostrewrite-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-grpc-autohostrewrite-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-grpc-autohostrewrite-grpc.plain-namespace.1",
            "auto_host_rewrite": true,
            "group_id": "4d095cff288cd3b680c2a1a5bac5bdad7bb6bb9c",
            "group_weight": [
                0,
                36,
                0,
                "/SimpleMapping-GRPC-AutoHostRewrite/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-grpc-autohostrewrite-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-grpc-autohostrewrite-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "auto_host_rewrite": true,
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-grpc-autohostrewrite-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-grpc-autohostrewrite-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_grpc_autohostrewrite_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-grpc-autohostrewrite-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_grpc_-11",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-grpc-autohostrewrite-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-grpc-autohostrewrite-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-grpc-autohostrewrite-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "4d095cff288cd3b680c2a1a5bac5bdad7bb6bb9c",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-grpc-autohostrewrite-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-GRPC-AutoHostRewrite",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-GRPC-AutoHostRewrite/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        36,
                        0,
                        "/SimpleMapping-GRPC-AutoHostRewrite/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nauto_host_rewrite: true\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-AutoHostRewrite\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-AutoHostRewrite/\nservice: http://plain-simplemapping-grpc-autohostrewrite-grpc.plain-namespace\n",
                    "service": "http://plain-simplemapping-grpc-autohostrewrite-grpc.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-GRPC-AutoHostRewrite",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-GRPC-AutoHostRewrite/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nauto_host_rewrite: true\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-AutoHostRewrite\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-AutoHostRewrite/\nservice: http://plain-simplemapping-grpc-autohostrewrite-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "simpleingresswithannotations-http-0-0.plain-namespace.1"
            ],
            "_rkey": "simpleingresswithannotations-http-0-0.plain-namespace.1",
            "group_id": "71782c5185ccc675b71f9e3d8439f4221609dd29",
            "group_weight": [
                0,
                35,
                0,
                "/SimpleIngressWithAnnotations-HTTP/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "simpleingresswithannotations-http-0-0.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "simpleingresswithannotations-http-0-0.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simpleingresswithannotations-http-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "simpleingresswithannotations-http-0-0.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_plain_simpleingresswithannotations_http_http_plain_namespace_80_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "simpleingresswithannotations-http-0-0.plain-namespace.1",
                        "name": "cluster_plain_simpleingresswithannotatio-1",
                        "namespace": "plain-namespace",
                        "service": "plain-simpleingresswithannotations-http-http.plain-namespace:80",
                        "targets": [
                            {
                                "ip": "plain-simpleingresswithannotations-http-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simpleingresswithannotations-http-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "71782c5185ccc675b71f9e3d8439f4221609dd29",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "simpleingresswithannotations-http-0-0.plain-namespace.1",
                    "metadata_labels": {
                        "ambassador_crd": "simpleingresswithannotations-http-0-0.plain-namespace",
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "simpleingresswithannotations-http-0-0",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleIngressWithAnnotations-HTTP/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        35,
                        0,
                        "/SimpleIngressWithAnnotations-HTTP/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\ngeneration: 1\nkind: Mapping\nmetadata_labels:\n  ambassador_crd: simpleingresswithannotations-http-0-0.plain-namespace\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: simpleingresswithannotations-http-0-0\nnamespace: plain-namespace\nprefix: /SimpleIngressWithAnnotations-HTTP/\nservice: plain-simpleingresswithannotations-http-http.plain-namespace:80\n",
                    "service": "plain-simpleingresswithannotations-http-http.plain-namespace:80",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "ambassador_crd": "simpleingresswithannotations-http-0-0.plain-namespace",
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: simpleingresswithannotations-http-0-0",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleIngressWithAnnotations-HTTP/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\ngeneration: 1\nkind: Mapping\nmetadata_labels:\n  ambassador_crd: simpleingresswithannotations-http-0-0.plain-namespace\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: simpleingresswithannotations-http-0-0\nnamespace: plain-namespace\nprefix: /SimpleIngressWithAnnotations-HTTP/\nservice: plain-simpleingresswithannotations-http-http.plain-namespace:80\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "simpleingresswithannotations-grpc-0-0.plain-namespace.1"
            ],
            "_rkey": "simpleingresswithannotations-grpc-0-0.plain-namespace.1",
            "group_id": "a0b97c69f0802ddc2a0738ca04a84c12028c6021",
            "group_weight": [
                0,
                35,
                0,
                "/SimpleIngressWithAnnotations-GRPC/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "simpleingresswithannotations-grpc-0-0.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "simpleingresswithannotations-grpc-0-0.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simpleingresswithannotations-grpc-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "simpleingresswithannotations-grpc-0-0.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_plain_simpleingresswithannotations_grpc_grpc_plain_namespace_80_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "simpleingresswithannotations-grpc-0-0.plain-namespace.1",
                        "name": "cluster_plain_simpleingresswithannotatio-0",
                        "namespace": "plain-namespace",
                        "service": "plain-simpleingresswithannotations-grpc-grpc.plain-namespace:80",
                        "targets": [
                            {
                                "ip": "plain-simpleingresswithannotations-grpc-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simpleingresswithannotations-grpc-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "a0b97c69f0802ddc2a0738ca04a84c12028c6021",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "simpleingresswithannotations-grpc-0-0.plain-namespace.1",
                    "metadata_labels": {
                        "ambassador_crd": "simpleingresswithannotations-grpc-0-0.plain-namespace",
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "simpleingresswithannotations-grpc-0-0",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleIngressWithAnnotations-GRPC/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        35,
                        0,
                        "/SimpleIngressWithAnnotations-GRPC/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\ngeneration: 1\nkind: Mapping\nmetadata_labels:\n  ambassador_crd: simpleingresswithannotations-grpc-0-0.plain-namespace\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: simpleingresswithannotations-grpc-0-0\nnamespace: plain-namespace\nprefix: /SimpleIngressWithAnnotations-GRPC/\nservice: plain-simpleingresswithannotations-grpc-grpc.plain-namespace:80\n",
                    "service": "plain-simpleingresswithannotations-grpc-grpc.plain-namespace:80",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "ambassador_crd": "simpleingresswithannotations-grpc-0-0.plain-namespace",
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: simpleingresswithannotations-grpc-0-0",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleIngressWithAnnotations-GRPC/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\ngeneration: 1\nkind: Mapping\nmetadata_labels:\n  ambassador_crd: simpleingresswithannotations-grpc-0-0.plain-namespace\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: simpleingresswithannotations-grpc-0-0\nnamespace: plain-namespace\nprefix: /SimpleIngressWithAnnotations-GRPC/\nservice: plain-simpleingresswithannotations-grpc-grpc.plain-namespace:80\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-http-casesensitive-http.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-http-casesensitive-http.plain-namespace.1",
            "case_sensitive": false,
            "group_id": "f00b2f3fe42e6ace4cd13123d2f98f08440bf93c",
            "group_weight": [
                0,
                34,
                0,
                "/SimpleMapping-HTTP-CaseSensitive/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-http-casesensitive-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-http-casesensitive-http.plain-namespace.1",
                    "add_request_headers": {},
                    "case_sensitive": false,
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-http-casesensitive-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-http-casesensitive-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_http_casesensitive_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-http-casesensitive-http.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_http_-12",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-http-casesensitive-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-http-casesensitive-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-http-casesensitive-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "f00b2f3fe42e6ace4cd13123d2f98f08440bf93c",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-http-casesensitive-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-HTTP-CaseSensitive",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-HTTP-CaseSensitive/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        34,
                        0,
                        "/SimpleMapping-HTTP-CaseSensitive/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\ncase_sensitive: false\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-CaseSensitive\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-CaseSensitive/\nservice: http://plain-simplemapping-http-casesensitive-http.plain-namespace\n",
                    "service": "http://plain-simplemapping-http-casesensitive-http.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-HTTP-CaseSensitive",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-HTTP-CaseSensitive/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\ncase_sensitive: false\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-CaseSensitive\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-CaseSensitive/\nservice: http://plain-simplemapping-http-casesensitive-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-grpc-casesensitive-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-grpc-casesensitive-grpc.plain-namespace.1",
            "case_sensitive": false,
            "group_id": "c3684f2f815f3d691ce00382d4e2022c2f28a419",
            "group_weight": [
                0,
                34,
                0,
                "/SimpleMapping-GRPC-CaseSensitive/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-grpc-casesensitive-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-grpc-casesensitive-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "case_sensitive": false,
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-grpc-casesensitive-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-grpc-casesensitive-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_grpc_casesensitive_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-grpc-casesensitive-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_grpc_-12",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-grpc-casesensitive-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-grpc-casesensitive-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-grpc-casesensitive-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "c3684f2f815f3d691ce00382d4e2022c2f28a419",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-grpc-casesensitive-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-GRPC-CaseSensitive",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-GRPC-CaseSensitive/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        34,
                        0,
                        "/SimpleMapping-GRPC-CaseSensitive/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\ncase_sensitive: false\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-CaseSensitive\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-CaseSensitive/\nservice: http://plain-simplemapping-grpc-casesensitive-grpc.plain-namespace\n",
                    "service": "http://plain-simplemapping-grpc-casesensitive-grpc.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-GRPC-CaseSensitive",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-GRPC-CaseSensitive/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\ncase_sensitive: false\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-CaseSensitive\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-CaseSensitive/\nservice: http://plain-simplemapping-grpc-casesensitive-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-http-usewebsocket-http.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-http-usewebsocket-http.plain-namespace.1",
            "group_id": "d9ad870bfa328cb4d050228bd28eacd5852c5d62",
            "group_weight": [
                0,
                33,
                0,
                "/SimpleMapping-HTTP-UseWebsocket/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-http-usewebsocket-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-http-usewebsocket-http.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-http-usewebsocket-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-http-usewebsocket-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_http_usewebsocket_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-http-usewebsocket-http.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_http_-18",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-http-usewebsocket-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-http-usewebsocket-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-http-usewebsocket-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "d9ad870bfa328cb4d050228bd28eacd5852c5d62",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-http-usewebsocket-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-HTTP-UseWebsocket",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-HTTP-UseWebsocket/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        33,
                        0,
                        "/SimpleMapping-HTTP-UseWebsocket/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-UseWebsocket\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-UseWebsocket/\nservice: http://plain-simplemapping-http-usewebsocket-http.plain-namespace\nuse_websocket: true\n",
                    "service": "http://plain-simplemapping-http-usewebsocket-http.plain-namespace",
                    "use_websocket": true,
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-HTTP-UseWebsocket",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-HTTP-UseWebsocket/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-UseWebsocket\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-UseWebsocket/\nservice: http://plain-simplemapping-http-usewebsocket-http.plain-namespace\nuse_websocket: true\n",
            "use_websocket": true
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-grpc-usewebsocket-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-grpc-usewebsocket-grpc.plain-namespace.1",
            "group_id": "513210530131791f3e75df96a3efd189a8100301",
            "group_weight": [
                0,
                33,
                0,
                "/SimpleMapping-GRPC-UseWebsocket/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-grpc-usewebsocket-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-grpc-usewebsocket-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-grpc-usewebsocket-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-grpc-usewebsocket-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_grpc_usewebsocket_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-grpc-usewebsocket-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_grpc_-18",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-grpc-usewebsocket-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-grpc-usewebsocket-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-grpc-usewebsocket-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "513210530131791f3e75df96a3efd189a8100301",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-grpc-usewebsocket-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-GRPC-UseWebsocket",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-GRPC-UseWebsocket/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        33,
                        0,
                        "/SimpleMapping-GRPC-UseWebsocket/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-UseWebsocket\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-UseWebsocket/\nservice: http://plain-simplemapping-grpc-usewebsocket-grpc.plain-namespace\nuse_websocket: true\n",
                    "service": "http://plain-simplemapping-grpc-usewebsocket-grpc.plain-namespace",
                    "use_websocket": true,
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-GRPC-UseWebsocket",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-GRPC-UseWebsocket/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-UseWebsocket\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-UseWebsocket/\nservice: http://plain-simplemapping-grpc-usewebsocket-grpc.plain-namespace\nuse_websocket: true\n",
            "use_websocket": true
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-http-rewrite-foo-http.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-http-rewrite-foo-http.plain-namespace.1",
            "group_id": "cda7ce1edcdfe733d14578a2723d0532103fb0d1",
            "group_weight": [
                0,
                32,
                0,
                "/SimpleMapping-HTTP-Rewrite-foo/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-http-rewrite-foo-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-http-rewrite-foo-http.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-http-rewrite-foo-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-http-rewrite-foo-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_http_rewrite_foo_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-http-rewrite-foo-http.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_http_-16",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-http-rewrite-foo-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-http-rewrite-foo-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-http-rewrite-foo-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "cda7ce1edcdfe733d14578a2723d0532103fb0d1",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-http-rewrite-foo-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-HTTP-Rewrite-foo",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-HTTP-Rewrite-foo/",
                    "resolver": "kubernetes-service",
                    "rewrite": "foo",
                    "route_weight": [
                        0,
                        32,
                        0,
                        "/SimpleMapping-HTTP-Rewrite-foo/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-Rewrite-foo\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-Rewrite-foo/\nrewrite: foo\nservice: http://plain-simplemapping-http-rewrite-foo-http.plain-namespace\n",
                    "service": "http://plain-simplemapping-http-rewrite-foo-http.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-HTTP-Rewrite-foo",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-HTTP-Rewrite-foo/",
            "rewrite": "foo",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-Rewrite-foo\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-Rewrite-foo/\nrewrite: foo\nservice: http://plain-simplemapping-http-rewrite-foo-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-grpc-rewrite-foo-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-grpc-rewrite-foo-grpc.plain-namespace.1",
            "group_id": "1bdf073bc47620e8823e6ad9dfe5d70fbcc95a0f",
            "group_weight": [
                0,
                32,
                0,
                "/SimpleMapping-GRPC-Rewrite-foo/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-grpc-rewrite-foo-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-grpc-rewrite-foo-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-grpc-rewrite-foo-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-grpc-rewrite-foo-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_grpc_rewrite_foo_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-grpc-rewrite-foo-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_grpc_-16",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-grpc-rewrite-foo-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-grpc-rewrite-foo-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-grpc-rewrite-foo-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "1bdf073bc47620e8823e6ad9dfe5d70fbcc95a0f",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-grpc-rewrite-foo-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-GRPC-Rewrite-foo",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-GRPC-Rewrite-foo/",
                    "resolver": "kubernetes-service",
                    "rewrite": "foo",
                    "route_weight": [
                        0,
                        32,
                        0,
                        "/SimpleMapping-GRPC-Rewrite-foo/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-Rewrite-foo\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-Rewrite-foo/\nrewrite: foo\nservice: http://plain-simplemapping-grpc-rewrite-foo-grpc.plain-namespace\n",
                    "service": "http://plain-simplemapping-grpc-rewrite-foo-grpc.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-GRPC-Rewrite-foo",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-GRPC-Rewrite-foo/",
            "rewrite": "foo",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-Rewrite-foo\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-Rewrite-foo/\nrewrite: foo\nservice: http://plain-simplemapping-grpc-rewrite-foo-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "hostheadermappingingress-http-0-0.plain-namespace.1"
            ],
            "_rkey": "hostheadermappingingress-http-0-0.plain-namespace.1",
            "group_id": "783f0943d0a29cbdcb0e225048845fb76533df37",
            "group_weight": [
                0,
                31,
                28,
                "/HostHeaderMappingIngress-HTTP/",
                "GET",
                ":authority-inspector.external"
            ],
            "headers": [
                {
                    "name": ":authority",
                    "regex": false,
                    "value": "inspector.external"
                }
            ],
            "kind": "IRHTTPMappingGroup",
            "location": "hostheadermappingingress-http-0-0.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "hostheadermappingingress-http-0-0.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-hostheadermappingingress-http-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "hostheadermappingingress-http-0-0.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_plain_hostheadermappingingress_http_http_plain_namespace_80_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "hostheadermappingingress-http-0-0.plain-namespace.1",
                        "name": "cluster_plain_hostheadermappingingress_h-0",
                        "namespace": "plain-namespace",
                        "service": "plain-hostheadermappingingress-http-http.plain-namespace:80",
                        "targets": [
                            {
                                "ip": "plain-hostheadermappingingress-http-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-hostheadermappingingress-http-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "783f0943d0a29cbdcb0e225048845fb76533df37",
                    "headers": [
                        {
                            "name": ":authority",
                            "regex": false,
                            "value": "inspector.external"
                        }
                    ],
                    "host": "inspector.external",
                    "kind": "Mapping",
                    "location": "hostheadermappingingress-http-0-0.plain-namespace.1",
                    "metadata_labels": {
                        "ambassador_crd": "hostheadermappingingress-http-0-0.plain-namespace",
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "hostheadermappingingress-http-0-0",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/HostHeaderMappingIngress-HTTP/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        31,
                        28,
                        "/HostHeaderMappingIngress-HTTP/",
                        "GET",
                        ":authority-inspector.external"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\ngeneration: 1\nhost: inspector.external\nkind: Mapping\nmetadata_labels:\n  ambassador_crd: hostheadermappingingress-http-0-0.plain-namespace\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: hostheadermappingingress-http-0-0\nnamespace: plain-namespace\nprefix: /HostHeaderMappingIngress-HTTP/\nservice: plain-hostheadermappingingress-http-http.plain-namespace:80\n",
                    "service": "plain-hostheadermappingingress-http-http.plain-namespace:80",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "ambassador_crd": "hostheadermappingingress-http-0-0.plain-namespace",
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: hostheadermappingingress-http-0-0",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/HostHeaderMappingIngress-HTTP/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\ngeneration: 1\nhost: inspector.external\nkind: Mapping\nmetadata_labels:\n  ambassador_crd: hostheadermappingingress-http-0-0.plain-namespace\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: hostheadermappingingress-http-0-0\nnamespace: plain-namespace\nprefix: /HostHeaderMappingIngress-HTTP/\nservice: plain-hostheadermappingingress-http-http.plain-namespace:80\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "hostheadermappingingress-grpc-0-0.plain-namespace.1"
            ],
            "_rkey": "hostheadermappingingress-grpc-0-0.plain-namespace.1",
            "group_id": "e0e1b27f04ab21e176b12c47ed54ee1385ff1b14",
            "group_weight": [
                0,
                31,
                28,
                "/HostHeaderMappingIngress-GRPC/",
                "GET",
                ":authority-inspector.external"
            ],
            "headers": [
                {
                    "name": ":authority",
                    "regex": false,
                    "value": "inspector.external"
                }
            ],
            "kind": "IRHTTPMappingGroup",
            "location": "hostheadermappingingress-grpc-0-0.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "hostheadermappingingress-grpc-0-0.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-hostheadermappingingress-grpc-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "hostheadermappingingress-grpc-0-0.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_plain_hostheadermappingingress_grpc_grpc_plain_namespace_80_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "hostheadermappingingress-grpc-0-0.plain-namespace.1",
                        "name": "cluster_plain_hostheadermappingingress_g-0",
                        "namespace": "plain-namespace",
                        "service": "plain-hostheadermappingingress-grpc-grpc.plain-namespace:80",
                        "targets": [
                            {
                                "ip": "plain-hostheadermappingingress-grpc-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-hostheadermappingingress-grpc-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "e0e1b27f04ab21e176b12c47ed54ee1385ff1b14",
                    "headers": [
                        {
                            "name": ":authority",
                            "regex": false,
                            "value": "inspector.external"
                        }
                    ],
                    "host": "inspector.external",
                    "kind": "Mapping",
                    "location": "hostheadermappingingress-grpc-0-0.plain-namespace.1",
                    "metadata_labels": {
                        "ambassador_crd": "hostheadermappingingress-grpc-0-0.plain-namespace",
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "hostheadermappingingress-grpc-0-0",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/HostHeaderMappingIngress-GRPC/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        31,
                        28,
                        "/HostHeaderMappingIngress-GRPC/",
                        "GET",
                        ":authority-inspector.external"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\ngeneration: 1\nhost: inspector.external\nkind: Mapping\nmetadata_labels:\n  ambassador_crd: hostheadermappingingress-grpc-0-0.plain-namespace\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: hostheadermappingingress-grpc-0-0\nnamespace: plain-namespace\nprefix: /HostHeaderMappingIngress-GRPC/\nservice: plain-hostheadermappingingress-grpc-grpc.plain-namespace:80\n",
                    "service": "plain-hostheadermappingingress-grpc-grpc.plain-namespace:80",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "ambassador_crd": "hostheadermappingingress-grpc-0-0.plain-namespace",
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: hostheadermappingingress-grpc-0-0",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/HostHeaderMappingIngress-GRPC/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\ngeneration: 1\nhost: inspector.external\nkind: Mapping\nmetadata_labels:\n  ambassador_crd: hostheadermappingingress-grpc-0-0.plain-namespace\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: hostheadermappingingress-grpc-0-0\nnamespace: plain-namespace\nprefix: /HostHeaderMappingIngress-GRPC/\nservice: plain-hostheadermappingingress-grpc-grpc.plain-namespace:80\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-tlsorigination-http-implicit-http.plain-namespace.1"
            ],
            "_rkey": "plain-tlsorigination-http-implicit-http.plain-namespace.1",
            "group_id": "c2d90dbca739f73557893dbd83407cbaaa327a60",
            "group_weight": [
                0,
                30,
                0,
                "/TLSOrigination-HTTP-IMPLICIT/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-tlsorigination-http-implicit-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-tlsorigination-http-implicit-http.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-tlsorigination-http-implicit-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 443,
                        "_referenced_by": [
                            "plain-tlsorigination-http-implicit-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_https___plain_tlsorigination_http_implicit_http_plain_namespace_otls_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-tlsorigination-http-implicit-http.plain-namespace.1",
                        "name": "cluster_https___plain_tlsorigination_htt-0",
                        "namespace": "plain-namespace",
                        "service": "plain-tlsorigination-http-implicit-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-tlsorigination-http-implicit-http.plain-namespace",
                                "port": 443,
                                "target_kind": "DNSname"
                            }
                        ],
                        "tls_context": {
                            "_active": true,
                            "_ambassador_enabled": true,
                            "_errored": false,
                            "_referenced_by": [
                                "plain-tlsorigination-grpc-explicit-grpc.plain-namespace.1",
                                "plain-tlsorigination-http-explicit-http.plain-namespace.1"
                            ],
                            "_rkey": "ir.no-cert-upstream",
                            "is_fallback": false,
                            "kind": "null-TLS-context",
                            "location": "ir.no-cert-upstream",
                            "name": "no-cert-upstream",
                            "namespace": "plain-namespace",
                            "secret_info": {}
                        },
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-tlsorigination-http-implicit-http.plain-namespace:443"
                        ]
                    },
                    "group_id": "c2d90dbca739f73557893dbd83407cbaaa327a60",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-tlsorigination-http-implicit-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "TLSOrigination-HTTP-IMPLICIT",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/TLSOrigination-HTTP-IMPLICIT/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        30,
                        0,
                        "/TLSOrigination-HTTP-IMPLICIT/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: TLSOrigination-HTTP-IMPLICIT\nnamespace: plain-namespace\nprefix: /TLSOrigination-HTTP-IMPLICIT/\nservice: https://plain-tlsorigination-http-implicit-http.plain-namespace\n",
                    "service": "https://plain-tlsorigination-http-implicit-http.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: TLSOrigination-HTTP-IMPLICIT",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/TLSOrigination-HTTP-IMPLICIT/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: TLSOrigination-HTTP-IMPLICIT\nnamespace: plain-namespace\nprefix: /TLSOrigination-HTTP-IMPLICIT/\nservice: https://plain-tlsorigination-http-implicit-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-tlsorigination-http-explicit-http.plain-namespace.1"
            ],
            "_rkey": "plain-tlsorigination-http-explicit-http.plain-namespace.1",
            "group_id": "8a4b42e0193d64a2b5f0a2d453fb0b70fe4667a5",
            "group_weight": [
                0,
                30,
                0,
                "/TLSOrigination-HTTP-EXPLICIT/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-tlsorigination-http-explicit-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-tlsorigination-http-explicit-http.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-tlsorigination-http-explicit-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 443,
                        "_referenced_by": [
                            "plain-tlsorigination-http-explicit-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_plain_tlsorigination_http_explicit_http_plain_namespace_otls_no_cert_upstream_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-tlsorigination-http-explicit-http.plain-namespace.1",
                        "name": "cluster_plain_tlsorigination_http_explic-0",
                        "namespace": "plain-namespace",
                        "service": "plain-tlsorigination-http-explicit-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-tlsorigination-http-explicit-http.plain-namespace",
                                "port": 443,
                                "target_kind": "DNSname"
                            }
                        ],
                        "tls_context": {
                            "_active": true,
                            "_ambassador_enabled": true,
                            "_errored": false,
                            "_referenced_by": [
                                "plain-tlsorigination-grpc-explicit-grpc.plain-namespace.1",
                                "plain-tlsorigination-http-explicit-http.plain-namespace.1"
                            ],
                            "_rkey": "ir.no-cert-upstream",
                            "is_fallback": false,
                            "kind": "null-TLS-context",
                            "location": "ir.no-cert-upstream",
                            "name": "no-cert-upstream",
                            "namespace": "plain-namespace",
                            "secret_info": {}
                        },
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-tlsorigination-http-explicit-http.plain-namespace:443"
                        ]
                    },
                    "group_id": "8a4b42e0193d64a2b5f0a2d453fb0b70fe4667a5",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-tlsorigination-http-explicit-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "TLSOrigination-HTTP-EXPLICIT",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/TLSOrigination-HTTP-EXPLICIT/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        30,
                        0,
                        "/TLSOrigination-HTTP-EXPLICIT/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: TLSOrigination-HTTP-EXPLICIT\nnamespace: plain-namespace\nprefix: /TLSOrigination-HTTP-EXPLICIT/\nservice: plain-tlsorigination-http-explicit-http.plain-namespace\ntls: true\n",
                    "service": "plain-tlsorigination-http-explicit-http.plain-namespace",
                    "tls": true,
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: TLSOrigination-HTTP-EXPLICIT",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/TLSOrigination-HTTP-EXPLICIT/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: TLSOrigination-HTTP-EXPLICIT\nnamespace: plain-namespace\nprefix: /TLSOrigination-HTTP-EXPLICIT/\nservice: plain-tlsorigination-http-explicit-http.plain-namespace\ntls: true\n",
            "tls": true
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-tlsorigination-grpc-implicit-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-tlsorigination-grpc-implicit-grpc.plain-namespace.1",
            "group_id": "ee9cfcb459ade70db150c32ce39ff12a59788890",
            "group_weight": [
                0,
                30,
                0,
                "/TLSOrigination-GRPC-IMPLICIT/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-tlsorigination-grpc-implicit-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-tlsorigination-grpc-implicit-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-tlsorigination-grpc-implicit-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 443,
                        "_referenced_by": [
                            "plain-tlsorigination-grpc-implicit-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_https___plain_tlsorigination_grpc_implicit_grpc_plain_namespace_otls_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-tlsorigination-grpc-implicit-grpc.plain-namespace.1",
                        "name": "cluster_https___plain_tlsorigination_grp-0",
                        "namespace": "plain-namespace",
                        "service": "plain-tlsorigination-grpc-implicit-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-tlsorigination-grpc-implicit-grpc.plain-namespace",
                                "port": 443,
                                "target_kind": "DNSname"
                            }
                        ],
                        "tls_context": {
                            "_active": true,
                            "_ambassador_enabled": true,
                            "_errored": false,
                            "_referenced_by": [
                                "plain-tlsorigination-grpc-explicit-grpc.plain-namespace.1",
                                "plain-tlsorigination-http-explicit-http.plain-namespace.1"
                            ],
                            "_rkey": "ir.no-cert-upstream",
                            "is_fallback": false,
                            "kind": "null-TLS-context",
                            "location": "ir.no-cert-upstream",
                            "name": "no-cert-upstream",
                            "namespace": "plain-namespace",
                            "secret_info": {}
                        },
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-tlsorigination-grpc-implicit-grpc.plain-namespace:443"
                        ]
                    },
                    "group_id": "ee9cfcb459ade70db150c32ce39ff12a59788890",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-tlsorigination-grpc-implicit-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "TLSOrigination-GRPC-IMPLICIT",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/TLSOrigination-GRPC-IMPLICIT/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        30,
                        0,
                        "/TLSOrigination-GRPC-IMPLICIT/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: TLSOrigination-GRPC-IMPLICIT\nnamespace: plain-namespace\nprefix: /TLSOrigination-GRPC-IMPLICIT/\nservice: https://plain-tlsorigination-grpc-implicit-grpc.plain-namespace\n",
                    "service": "https://plain-tlsorigination-grpc-implicit-grpc.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: TLSOrigination-GRPC-IMPLICIT",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/TLSOrigination-GRPC-IMPLICIT/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: TLSOrigination-GRPC-IMPLICIT\nnamespace: plain-namespace\nprefix: /TLSOrigination-GRPC-IMPLICIT/\nservice: https://plain-tlsorigination-grpc-implicit-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-tlsorigination-grpc-explicit-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-tlsorigination-grpc-explicit-grpc.plain-namespace.1",
            "group_id": "2d5713371e99aff43f6b26458948277f173a23d6",
            "group_weight": [
                0,
                30,
                0,
                "/TLSOrigination-GRPC-EXPLICIT/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-tlsorigination-grpc-explicit-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-tlsorigination-grpc-explicit-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-tlsorigination-grpc-explicit-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 443,
                        "_referenced_by": [
                            "plain-tlsorigination-grpc-explicit-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_plain_tlsorigination_grpc_explicit_grpc_plain_namespace_otls_no_cert_upstream_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-tlsorigination-grpc-explicit-grpc.plain-namespace.1",
                        "name": "cluster_plain_tlsorigination_grpc_explic-0",
                        "namespace": "plain-namespace",
                        "service": "plain-tlsorigination-grpc-explicit-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-tlsorigination-grpc-explicit-grpc.plain-namespace",
                                "port": 443,
                                "target_kind": "DNSname"
                            }
                        ],
                        "tls_context": {
                            "_active": true,
                            "_ambassador_enabled": true,
                            "_errored": false,
                            "_referenced_by": [
                                "plain-tlsorigination-grpc-explicit-grpc.plain-namespace.1",
                                "plain-tlsorigination-http-explicit-http.plain-namespace.1"
                            ],
                            "_rkey": "ir.no-cert-upstream",
                            "is_fallback": false,
                            "kind": "null-TLS-context",
                            "location": "ir.no-cert-upstream",
                            "name": "no-cert-upstream",
                            "namespace": "plain-namespace",
                            "secret_info": {}
                        },
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-tlsorigination-grpc-explicit-grpc.plain-namespace:443"
                        ]
                    },
                    "group_id": "2d5713371e99aff43f6b26458948277f173a23d6",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-tlsorigination-grpc-explicit-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "TLSOrigination-GRPC-EXPLICIT",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/TLSOrigination-GRPC-EXPLICIT/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        30,
                        0,
                        "/TLSOrigination-GRPC-EXPLICIT/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: TLSOrigination-GRPC-EXPLICIT\nnamespace: plain-namespace\nprefix: /TLSOrigination-GRPC-EXPLICIT/\nservice: plain-tlsorigination-grpc-explicit-grpc.plain-namespace\ntls: true\n",
                    "service": "plain-tlsorigination-grpc-explicit-grpc.plain-namespace",
                    "tls": true,
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: TLSOrigination-GRPC-EXPLICIT",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/TLSOrigination-GRPC-EXPLICIT/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: TLSOrigination-GRPC-EXPLICIT\nnamespace: plain-namespace\nprefix: /TLSOrigination-GRPC-EXPLICIT/\nservice: plain-tlsorigination-grpc-explicit-grpc.plain-namespace\ntls: true\n",
            "tls": true
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-removereqheadersmapping-http-http.plain-namespace.1"
            ],
            "_rkey": "plain-removereqheadersmapping-http-http.plain-namespace.1",
            "group_id": "cd5c7de237d0b20f1c2ec16b3ac99bbd0703b5e2",
            "group_weight": [
                0,
                30,
                0,
                "/RemoveReqHeadersMapping-HTTP/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-removereqheadersmapping-http-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-removereqheadersmapping-http-http.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "httpbin.org",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-addrespheadersmapping-grpc-grpc.plain-namespace.1",
                            "plain-addrespheadersmapping-http-http.plain-namespace.1",
                            "plain-removereqheadersmapping-grpc-grpc.plain-namespace.1",
                            "plain-removereqheadersmapping-http-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___httpbin_org_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-addrespheadersmapping-grpc-grpc.plain-namespace.1",
                        "name": "cluster_http___httpbin_org_plain_namespace",
                        "namespace": "plain-namespace",
                        "service": "httpbin.org",
                        "targets": [
                            {
                                "ip": "httpbin.org",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://httpbin.org:80"
                        ]
                    },
                    "group_id": "cd5c7de237d0b20f1c2ec16b3ac99bbd0703b5e2",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-removereqheadersmapping-http-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "RemoveReqHeadersMapping-HTTP",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/RemoveReqHeadersMapping-HTTP/",
                    "remove_request_headers": [
                        "zoo",
                        "aoo"
                    ],
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        30,
                        0,
                        "/RemoveReqHeadersMapping-HTTP/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: RemoveReqHeadersMapping-HTTP\nnamespace: plain-namespace\nprefix: /RemoveReqHeadersMapping-HTTP/\nremove_request_headers:\n- zoo\n- aoo\nservice: http://httpbin.org\n",
                    "service": "http://httpbin.org",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: RemoveReqHeadersMapping-HTTP",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/RemoveReqHeadersMapping-HTTP/",
            "remove_request_headers": [
                "zoo",
                "aoo"
            ],
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: RemoveReqHeadersMapping-HTTP\nnamespace: plain-namespace\nprefix: /RemoveReqHeadersMapping-HTTP/\nremove_request_headers:\n- zoo\n- aoo\nservice: http://httpbin.org\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-removereqheadersmapping-grpc-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-removereqheadersmapping-grpc-grpc.plain-namespace.1",
            "group_id": "36dc0ac1ec071f75f3c3955bdb583d42275e7b17",
            "group_weight": [
                0,
                30,
                0,
                "/RemoveReqHeadersMapping-GRPC/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-removereqheadersmapping-grpc-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-removereqheadersmapping-grpc-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "httpbin.org",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-addrespheadersmapping-grpc-grpc.plain-namespace.1",
                            "plain-addrespheadersmapping-http-http.plain-namespace.1",
                            "plain-removereqheadersmapping-grpc-grpc.plain-namespace.1",
                            "plain-removereqheadersmapping-http-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___httpbin_org_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-addrespheadersmapping-grpc-grpc.plain-namespace.1",
                        "name": "cluster_http___httpbin_org_plain_namespace",
                        "namespace": "plain-namespace",
                        "service": "httpbin.org",
                        "targets": [
                            {
                                "ip": "httpbin.org",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://httpbin.org:80"
                        ]
                    },
                    "group_id": "36dc0ac1ec071f75f3c3955bdb583d42275e7b17",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-removereqheadersmapping-grpc-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "RemoveReqHeadersMapping-GRPC",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/RemoveReqHeadersMapping-GRPC/",
                    "remove_request_headers": [
                        "zoo",
                        "aoo"
                    ],
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        30,
                        0,
                        "/RemoveReqHeadersMapping-GRPC/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: RemoveReqHeadersMapping-GRPC\nnamespace: plain-namespace\nprefix: /RemoveReqHeadersMapping-GRPC/\nremove_request_headers:\n- zoo\n- aoo\nservice: http://httpbin.org\n",
                    "service": "http://httpbin.org",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: RemoveReqHeadersMapping-GRPC",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/RemoveReqHeadersMapping-GRPC/",
            "remove_request_headers": [
                "zoo",
                "aoo"
            ],
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: RemoveReqHeadersMapping-GRPC\nnamespace: plain-namespace\nprefix: /RemoveReqHeadersMapping-GRPC/\nremove_request_headers:\n- zoo\n- aoo\nservice: http://httpbin.org\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-canarydiffmapping-http-100-http-canary.plain-namespace.1",
                "plain-canarydiffmapping-http-100-http.plain-namespace.1"
            ],
            "_rkey": "plain-canarydiffmapping-http-100-http-canary.plain-namespace.1",
            "group_id": "856673a71f2bedb89decb235ef32f56e3f54ca65",
            "group_weight": [
                0,
                28,
                0,
                "/CanaryDiffMapping-HTTP-100/",
                "GET"
            ],
            "headers": [],
            "host_rewrite": "canary.1.example.com",
            "kind": "IRHTTPMappingGroup",
            "location": "plain-canarydiffmapping-http-100-http-canary.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarydiffmapping-http-100-http.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarydiffmapping-http-100-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarydiffmapping-http-100-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarydiffmapping_http_100_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "host_rewrite": "canary.1.example.com",
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarydiffmapping-http-100-http.plain-namespace.1",
                        "name": "cluster_http___plain_canarydiffmapping_h-3",
                        "namespace": "plain-namespace",
                        "service": "plain-canarydiffmapping-http-100-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarydiffmapping-http-100-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarydiffmapping-http-100-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "856673a71f2bedb89decb235ef32f56e3f54ca65",
                    "headers": [],
                    "host_rewrite": "canary.1.example.com",
                    "kind": "Mapping",
                    "location": "plain-canarydiffmapping-http-100-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryDiffMapping-HTTP-100",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryDiffMapping-HTTP-100/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        28,
                        0,
                        "/CanaryDiffMapping-HTTP-100/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: canary.1.example.com\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryDiffMapping-HTTP-100\nnamespace: plain-namespace\nprefix: /CanaryDiffMapping-HTTP-100/\nservice: http://plain-canarydiffmapping-http-100-http.plain-namespace\n",
                    "service": "http://plain-canarydiffmapping-http-100-http.plain-namespace",
                    "weight": 100
                },
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarydiffmapping-http-100-http-canary.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarydiffmapping-http-100-http-canary.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarydiffmapping-http-100-http-canary.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarydiffmapping_http_100_http_canary_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "host_rewrite": "canary.2.example.com",
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarydiffmapping-http-100-http-canary.plain-namespace.1",
                        "name": "cluster_http___plain_canarydiffmapping_h-2",
                        "namespace": "plain-namespace",
                        "service": "plain-canarydiffmapping-http-100-http-canary.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarydiffmapping-http-100-http-canary.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarydiffmapping-http-100-http-canary.plain-namespace:80"
                        ]
                    },
                    "group_id": "856673a71f2bedb89decb235ef32f56e3f54ca65",
                    "headers": [],
                    "host_rewrite": "canary.2.example.com",
                    "kind": "Mapping",
                    "location": "plain-canarydiffmapping-http-100-http-canary.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryDiffMapping-HTTP-100-canary",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryDiffMapping-HTTP-100/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        28,
                        0,
                        "/CanaryDiffMapping-HTTP-100/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: canary.2.example.com\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryDiffMapping-HTTP-100-canary\nnamespace: plain-namespace\nprefix: /CanaryDiffMapping-HTTP-100/\nservice: http://plain-canarydiffmapping-http-100-http-canary.plain-namespace\nweight: 100\n",
                    "service": "http://plain-canarydiffmapping-http-100-http-canary.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: CanaryDiffMapping-HTTP-100-canary",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/CanaryDiffMapping-HTTP-100/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: canary.1.example.com\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryDiffMapping-HTTP-100\nnamespace: plain-namespace\nprefix: /CanaryDiffMapping-HTTP-100/\nservice: http://plain-canarydiffmapping-http-100-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-canarydiffmapping-grpc-100-grpc-canary.plain-namespace.1",
                "plain-canarydiffmapping-grpc-100-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-canarydiffmapping-grpc-100-grpc-canary.plain-namespace.1",
            "group_id": "f1f18d5e4e41278d965dbae3277e38081b3de69b",
            "group_weight": [
                0,
                28,
                0,
                "/CanaryDiffMapping-GRPC-100/",
                "GET"
            ],
            "headers": [],
            "host_rewrite": "canary.1.example.com",
            "kind": "IRHTTPMappingGroup",
            "location": "plain-canarydiffmapping-grpc-100-grpc-canary.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarydiffmapping-grpc-100-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarydiffmapping-grpc-100-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarydiffmapping-grpc-100-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarydiffmapping_grpc_100_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "host_rewrite": "canary.1.example.com",
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarydiffmapping-grpc-100-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_canarydiffmapping_g-3",
                        "namespace": "plain-namespace",
                        "service": "plain-canarydiffmapping-grpc-100-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarydiffmapping-grpc-100-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarydiffmapping-grpc-100-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "f1f18d5e4e41278d965dbae3277e38081b3de69b",
                    "headers": [],
                    "host_rewrite": "canary.1.example.com",
                    "kind": "Mapping",
                    "location": "plain-canarydiffmapping-grpc-100-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryDiffMapping-GRPC-100",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryDiffMapping-GRPC-100/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        28,
                        0,
                        "/CanaryDiffMapping-GRPC-100/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: canary.1.example.com\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryDiffMapping-GRPC-100\nnamespace: plain-namespace\nprefix: /CanaryDiffMapping-GRPC-100/\nservice: http://plain-canarydiffmapping-grpc-100-grpc.plain-namespace\n",
                    "service": "http://plain-canarydiffmapping-grpc-100-grpc.plain-namespace",
                    "weight": 100
                },
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarydiffmapping-grpc-100-grpc-canary.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarydiffmapping-grpc-100-grpc-canary.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarydiffmapping-grpc-100-grpc-canary.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarydiffmapping_grpc_100_grpc_canary_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "host_rewrite": "canary.2.example.com",
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarydiffmapping-grpc-100-grpc-canary.plain-namespace.1",
                        "name": "cluster_http___plain_canarydiffmapping_g-2",
                        "namespace": "plain-namespace",
                        "service": "plain-canarydiffmapping-grpc-100-grpc-canary.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarydiffmapping-grpc-100-grpc-canary.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarydiffmapping-grpc-100-grpc-canary.plain-namespace:80"
                        ]
                    },
                    "group_id": "f1f18d5e4e41278d965dbae3277e38081b3de69b",
                    "headers": [],
                    "host_rewrite": "canary.2.example.com",
                    "kind": "Mapping",
                    "location": "plain-canarydiffmapping-grpc-100-grpc-canary.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryDiffMapping-GRPC-100-canary",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryDiffMapping-GRPC-100/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        28,
                        0,
                        "/CanaryDiffMapping-GRPC-100/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: canary.2.example.com\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryDiffMapping-GRPC-100-canary\nnamespace: plain-namespace\nprefix: /CanaryDiffMapping-GRPC-100/\nservice: http://plain-canarydiffmapping-grpc-100-grpc-canary.plain-namespace\nweight: 100\n",
                    "service": "http://plain-canarydiffmapping-grpc-100-grpc-canary.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: CanaryDiffMapping-GRPC-100-canary",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/CanaryDiffMapping-GRPC-100/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: canary.1.example.com\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryDiffMapping-GRPC-100\nnamespace: plain-namespace\nprefix: /CanaryDiffMapping-GRPC-100/\nservice: http://plain-canarydiffmapping-grpc-100-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-addrespheadersmapping-http-http.plain-namespace.1"
            ],
            "_rkey": "plain-addrespheadersmapping-http-http.plain-namespace.1",
            "add_response_headers": {
                "foo": "Foo",
                "koo": {
                    "append": false,
                    "value": "KooK"
                },
                "test": {
                    "value": "boo"
                },
                "zoo": {
                    "append": true,
                    "value": "ZooZ"
                }
            },
            "group_id": "5ad5758cd8ecec30abc7114b58e83f5927901b48",
            "group_weight": [
                0,
                28,
                0,
                "/AddRespHeadersMapping-HTTP/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-addrespheadersmapping-http-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-addrespheadersmapping-http-http.plain-namespace.1",
                    "add_request_headers": {},
                    "add_response_headers": {
                        "foo": "Foo",
                        "koo": {
                            "append": false,
                            "value": "KooK"
                        },
                        "test": {
                            "value": "boo"
                        },
                        "zoo": {
                            "append": true,
                            "value": "ZooZ"
                        }
                    },
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "httpbin.org",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-addrespheadersmapping-grpc-grpc.plain-namespace.1",
                            "plain-addrespheadersmapping-http-http.plain-namespace.1",
                            "plain-removereqheadersmapping-grpc-grpc.plain-namespace.1",
                            "plain-removereqheadersmapping-http-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___httpbin_org_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-addrespheadersmapping-grpc-grpc.plain-namespace.1",
                        "name": "cluster_http___httpbin_org_plain_namespace",
                        "namespace": "plain-namespace",
                        "service": "httpbin.org",
                        "targets": [
                            {
                                "ip": "httpbin.org",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://httpbin.org:80"
                        ]
                    },
                    "group_id": "5ad5758cd8ecec30abc7114b58e83f5927901b48",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-addrespheadersmapping-http-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "AddRespHeadersMapping-HTTP",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/AddRespHeadersMapping-HTTP/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        28,
                        0,
                        "/AddRespHeadersMapping-HTTP/",
                        "GET"
                    ],
                    "serialization": "add_response_headers:\n  foo: Foo\n  koo:\n    append: false\n    value: KooK\n  test:\n    value: boo\n  zoo:\n    append: true\n    value: ZooZ\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: AddRespHeadersMapping-HTTP\nnamespace: plain-namespace\nprefix: /AddRespHeadersMapping-HTTP/\nservice: http://httpbin.org\n",
                    "service": "http://httpbin.org",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: AddRespHeadersMapping-HTTP",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/AddRespHeadersMapping-HTTP/",
            "rewrite": "/",
            "serialization": "add_response_headers:\n  foo: Foo\n  koo:\n    append: false\n    value: KooK\n  test:\n    value: boo\n  zoo:\n    append: true\n    value: ZooZ\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: AddRespHeadersMapping-HTTP\nnamespace: plain-namespace\nprefix: /AddRespHeadersMapping-HTTP/\nservice: http://httpbin.org\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-addrespheadersmapping-grpc-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-addrespheadersmapping-grpc-grpc.plain-namespace.1",
            "add_response_headers": {
                "foo": "Foo",
                "koo": {
                    "append": false,
                    "value": "KooK"
                },
                "test": {
                    "value": "boo"
                },
                "zoo": {
                    "append": true,
                    "value": "ZooZ"
                }
            },
            "group_id": "e099c005911a3bb1bed408cf114fc44d58e2a928",
            "group_weight": [
                0,
                28,
                0,
                "/AddRespHeadersMapping-GRPC/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-addrespheadersmapping-grpc-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-addrespheadersmapping-grpc-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "add_response_headers": {
                        "foo": "Foo",
                        "koo": {
                            "append": false,
                            "value": "KooK"
                        },
                        "test": {
                            "value": "boo"
                        },
                        "zoo": {
                            "append": true,
                            "value": "ZooZ"
                        }
                    },
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "httpbin.org",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-addrespheadersmapping-grpc-grpc.plain-namespace.1",
                            "plain-addrespheadersmapping-http-http.plain-namespace.1",
                            "plain-removereqheadersmapping-grpc-grpc.plain-namespace.1",
                            "plain-removereqheadersmapping-http-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___httpbin_org_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-addrespheadersmapping-grpc-grpc.plain-namespace.1",
                        "name": "cluster_http___httpbin_org_plain_namespace",
                        "namespace": "plain-namespace",
                        "service": "httpbin.org",
                        "targets": [
                            {
                                "ip": "httpbin.org",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://httpbin.org:80"
                        ]
                    },
                    "group_id": "e099c005911a3bb1bed408cf114fc44d58e2a928",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-addrespheadersmapping-grpc-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "AddRespHeadersMapping-GRPC",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/AddRespHeadersMapping-GRPC/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        28,
                        0,
                        "/AddRespHeadersMapping-GRPC/",
                        "GET"
                    ],
                    "serialization": "add_response_headers:\n  foo: Foo\n  koo:\n    append: false\n    value: KooK\n  test:\n    value: boo\n  zoo:\n    append: true\n    value: ZooZ\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: AddRespHeadersMapping-GRPC\nnamespace: plain-namespace\nprefix: /AddRespHeadersMapping-GRPC/\nservice: http://httpbin.org\n",
                    "service": "http://httpbin.org",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: AddRespHeadersMapping-GRPC",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/AddRespHeadersMapping-GRPC/",
            "rewrite": "/",
            "serialization": "add_response_headers:\n  foo: Foo\n  koo:\n    append: false\n    value: KooK\n  test:\n    value: boo\n  zoo:\n    append: true\n    value: ZooZ\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: AddRespHeadersMapping-GRPC\nnamespace: plain-namespace\nprefix: /AddRespHeadersMapping-GRPC/\nservice: http://httpbin.org\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "simplemappingingress-http-0-0.plain-namespace.1"
            ],
            "_rkey": "simplemappingingress-http-0-0.plain-namespace.1",
            "group_id": "13b7423aafb5036c301fcc0e5e2a27b468bb8d2f",
            "group_weight": [
                0,
                27,
                0,
                "/SimpleMappingIngress-HTTP/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "simplemappingingress-http-0-0.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "simplemappingingress-http-0-0.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemappingingress-http-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "simplemappingingress-http-0-0.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_plain_simplemappingingress_http_http_plain_namespace_80_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "simplemappingingress-http-0-0.plain-namespace.1",
                        "name": "cluster_plain_simplemappingingress_http_-0",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemappingingress-http-http.plain-namespace:80",
                        "targets": [
                            {
                                "ip": "plain-simplemappingingress-http-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemappingingress-http-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "13b7423aafb5036c301fcc0e5e2a27b468bb8d2f",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "simplemappingingress-http-0-0.plain-namespace.1",
                    "metadata_labels": {
                        "ambassador_crd": "simplemappingingress-http-0-0.plain-namespace",
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "simplemappingingress-http-0-0",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMappingIngress-HTTP/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        27,
                        0,
                        "/SimpleMappingIngress-HTTP/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\ngeneration: 1\nkind: Mapping\nmetadata_labels:\n  ambassador_crd: simplemappingingress-http-0-0.plain-namespace\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: simplemappingingress-http-0-0\nnamespace: plain-namespace\nprefix: /SimpleMappingIngress-HTTP/\nservice: plain-simplemappingingress-http-http.plain-namespace:80\n",
                    "service": "plain-simplemappingingress-http-http.plain-namespace:80",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "ambassador_crd": "simplemappingingress-http-0-0.plain-namespace",
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: simplemappingingress-http-0-0",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMappingIngress-HTTP/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\ngeneration: 1\nkind: Mapping\nmetadata_labels:\n  ambassador_crd: simplemappingingress-http-0-0.plain-namespace\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: simplemappingingress-http-0-0\nnamespace: plain-namespace\nprefix: /SimpleMappingIngress-HTTP/\nservice: plain-simplemappingingress-http-http.plain-namespace:80\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "simplemappingingress-grpc-0-0.plain-namespace.1"
            ],
            "_rkey": "simplemappingingress-grpc-0-0.plain-namespace.1",
            "group_id": "0cd81aff9a8f436c841f2b1b0d49d04cd87788e0",
            "group_weight": [
                0,
                27,
                0,
                "/SimpleMappingIngress-GRPC/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "simplemappingingress-grpc-0-0.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "simplemappingingress-grpc-0-0.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemappingingress-grpc-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "simplemappingingress-grpc-0-0.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_plain_simplemappingingress_grpc_grpc_plain_namespace_80_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "simplemappingingress-grpc-0-0.plain-namespace.1",
                        "name": "cluster_plain_simplemappingingress_grpc_-0",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemappingingress-grpc-grpc.plain-namespace:80",
                        "targets": [
                            {
                                "ip": "plain-simplemappingingress-grpc-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemappingingress-grpc-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "0cd81aff9a8f436c841f2b1b0d49d04cd87788e0",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "simplemappingingress-grpc-0-0.plain-namespace.1",
                    "metadata_labels": {
                        "ambassador_crd": "simplemappingingress-grpc-0-0.plain-namespace",
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "simplemappingingress-grpc-0-0",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMappingIngress-GRPC/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        27,
                        0,
                        "/SimpleMappingIngress-GRPC/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\ngeneration: 1\nkind: Mapping\nmetadata_labels:\n  ambassador_crd: simplemappingingress-grpc-0-0.plain-namespace\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: simplemappingingress-grpc-0-0\nnamespace: plain-namespace\nprefix: /SimpleMappingIngress-GRPC/\nservice: plain-simplemappingingress-grpc-grpc.plain-namespace:80\n",
                    "service": "plain-simplemappingingress-grpc-grpc.plain-namespace:80",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "ambassador_crd": "simplemappingingress-grpc-0-0.plain-namespace",
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: simplemappingingress-grpc-0-0",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMappingIngress-GRPC/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\ngeneration: 1\nkind: Mapping\nmetadata_labels:\n  ambassador_crd: simplemappingingress-grpc-0-0.plain-namespace\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: simplemappingingress-grpc-0-0\nnamespace: plain-namespace\nprefix: /SimpleMappingIngress-GRPC/\nservice: plain-simplemappingingress-grpc-grpc.plain-namespace:80\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-canarydiffmapping-http-50-http-canary.plain-namespace.1",
                "plain-canarydiffmapping-http-50-http.plain-namespace.1"
            ],
            "_rkey": "plain-canarydiffmapping-http-50-http-canary.plain-namespace.1",
            "group_id": "85d30692fa132340124410a707acb8b1e87872b6",
            "group_weight": [
                0,
                27,
                0,
                "/CanaryDiffMapping-HTTP-50/",
                "GET"
            ],
            "headers": [],
            "host_rewrite": "canary.1.example.com",
            "kind": "IRHTTPMappingGroup",
            "location": "plain-canarydiffmapping-http-50-http-canary.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarydiffmapping-http-50-http.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarydiffmapping-http-50-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarydiffmapping-http-50-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarydiffmapping_http_50_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "host_rewrite": "canary.1.example.com",
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarydiffmapping-http-50-http.plain-namespace.1",
                        "name": "cluster_http___plain_canarydiffmapping_h-7",
                        "namespace": "plain-namespace",
                        "service": "plain-canarydiffmapping-http-50-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarydiffmapping-http-50-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarydiffmapping-http-50-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "85d30692fa132340124410a707acb8b1e87872b6",
                    "headers": [],
                    "host_rewrite": "canary.1.example.com",
                    "kind": "Mapping",
                    "location": "plain-canarydiffmapping-http-50-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryDiffMapping-HTTP-50",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryDiffMapping-HTTP-50/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        27,
                        0,
                        "/CanaryDiffMapping-HTTP-50/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: canary.1.example.com\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryDiffMapping-HTTP-50\nnamespace: plain-namespace\nprefix: /CanaryDiffMapping-HTTP-50/\nservice: http://plain-canarydiffmapping-http-50-http.plain-namespace\n",
                    "service": "http://plain-canarydiffmapping-http-50-http.plain-namespace",
                    "weight": 100
                },
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarydiffmapping-http-50-http-canary.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarydiffmapping-http-50-http-canary.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarydiffmapping-http-50-http-canary.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarydiffmapping_http_50_http_canary_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "host_rewrite": "canary.2.example.com",
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarydiffmapping-http-50-http-canary.plain-namespace.1",
                        "name": "cluster_http___plain_canarydiffmapping_h-6",
                        "namespace": "plain-namespace",
                        "service": "plain-canarydiffmapping-http-50-http-canary.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarydiffmapping-http-50-http-canary.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarydiffmapping-http-50-http-canary.plain-namespace:80"
                        ]
                    },
                    "group_id": "85d30692fa132340124410a707acb8b1e87872b6",
                    "headers": [],
                    "host_rewrite": "canary.2.example.com",
                    "kind": "Mapping",
                    "location": "plain-canarydiffmapping-http-50-http-canary.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryDiffMapping-HTTP-50-canary",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryDiffMapping-HTTP-50/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        27,
                        0,
                        "/CanaryDiffMapping-HTTP-50/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: canary.2.example.com\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryDiffMapping-HTTP-50-canary\nnamespace: plain-namespace\nprefix: /CanaryDiffMapping-HTTP-50/\nservice: http://plain-canarydiffmapping-http-50-http-canary.plain-namespace\nweight: 50\n",
                    "service": "http://plain-canarydiffmapping-http-50-http-canary.plain-namespace",
                    "weight": 50
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: CanaryDiffMapping-HTTP-50-canary",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/CanaryDiffMapping-HTTP-50/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: canary.1.example.com\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryDiffMapping-HTTP-50\nnamespace: plain-namespace\nprefix: /CanaryDiffMapping-HTTP-50/\nservice: http://plain-canarydiffmapping-http-50-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-canarydiffmapping-http-10-http-canary.plain-namespace.1",
                "plain-canarydiffmapping-http-10-http.plain-namespace.1"
            ],
            "_rkey": "plain-canarydiffmapping-http-10-http-canary.plain-namespace.1",
            "group_id": "604928860e111f828bea1f1945219978fd2e51a5",
            "group_weight": [
                0,
                27,
                0,
                "/CanaryDiffMapping-HTTP-10/",
                "GET"
            ],
            "headers": [],
            "host_rewrite": "canary.1.example.com",
            "kind": "IRHTTPMappingGroup",
            "location": "plain-canarydiffmapping-http-10-http-canary.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarydiffmapping-http-10-http.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarydiffmapping-http-10-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarydiffmapping-http-10-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarydiffmapping_http_10_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "host_rewrite": "canary.1.example.com",
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarydiffmapping-http-10-http.plain-namespace.1",
                        "name": "cluster_http___plain_canarydiffmapping_h-5",
                        "namespace": "plain-namespace",
                        "service": "plain-canarydiffmapping-http-10-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarydiffmapping-http-10-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarydiffmapping-http-10-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "604928860e111f828bea1f1945219978fd2e51a5",
                    "headers": [],
                    "host_rewrite": "canary.1.example.com",
                    "kind": "Mapping",
                    "location": "plain-canarydiffmapping-http-10-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryDiffMapping-HTTP-10",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryDiffMapping-HTTP-10/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        27,
                        0,
                        "/CanaryDiffMapping-HTTP-10/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: canary.1.example.com\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryDiffMapping-HTTP-10\nnamespace: plain-namespace\nprefix: /CanaryDiffMapping-HTTP-10/\nservice: http://plain-canarydiffmapping-http-10-http.plain-namespace\n",
                    "service": "http://plain-canarydiffmapping-http-10-http.plain-namespace",
                    "weight": 100
                },
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarydiffmapping-http-10-http-canary.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarydiffmapping-http-10-http-canary.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarydiffmapping-http-10-http-canary.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarydiffmapping_http_10_http_canary_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "host_rewrite": "canary.2.example.com",
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarydiffmapping-http-10-http-canary.plain-namespace.1",
                        "name": "cluster_http___plain_canarydiffmapping_h-4",
                        "namespace": "plain-namespace",
                        "service": "plain-canarydiffmapping-http-10-http-canary.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarydiffmapping-http-10-http-canary.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarydiffmapping-http-10-http-canary.plain-namespace:80"
                        ]
                    },
                    "group_id": "604928860e111f828bea1f1945219978fd2e51a5",
                    "headers": [],
                    "host_rewrite": "canary.2.example.com",
                    "kind": "Mapping",
                    "location": "plain-canarydiffmapping-http-10-http-canary.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryDiffMapping-HTTP-10-canary",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryDiffMapping-HTTP-10/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        27,
                        0,
                        "/CanaryDiffMapping-HTTP-10/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: canary.2.example.com\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryDiffMapping-HTTP-10-canary\nnamespace: plain-namespace\nprefix: /CanaryDiffMapping-HTTP-10/\nservice: http://plain-canarydiffmapping-http-10-http-canary.plain-namespace\nweight: 10\n",
                    "service": "http://plain-canarydiffmapping-http-10-http-canary.plain-namespace",
                    "weight": 10
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: CanaryDiffMapping-HTTP-10-canary",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/CanaryDiffMapping-HTTP-10/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: canary.1.example.com\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryDiffMapping-HTTP-10\nnamespace: plain-namespace\nprefix: /CanaryDiffMapping-HTTP-10/\nservice: http://plain-canarydiffmapping-http-10-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-canarydiffmapping-grpc-50-grpc-canary.plain-namespace.1",
                "plain-canarydiffmapping-grpc-50-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-canarydiffmapping-grpc-50-grpc-canary.plain-namespace.1",
            "group_id": "eb3f26105dd93aeb3a2ab5d295140198c54e513a",
            "group_weight": [
                0,
                27,
                0,
                "/CanaryDiffMapping-GRPC-50/",
                "GET"
            ],
            "headers": [],
            "host_rewrite": "canary.1.example.com",
            "kind": "IRHTTPMappingGroup",
            "location": "plain-canarydiffmapping-grpc-50-grpc-canary.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarydiffmapping-grpc-50-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarydiffmapping-grpc-50-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarydiffmapping-grpc-50-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarydiffmapping_grpc_50_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "host_rewrite": "canary.1.example.com",
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarydiffmapping-grpc-50-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_canarydiffmapping_g-7",
                        "namespace": "plain-namespace",
                        "service": "plain-canarydiffmapping-grpc-50-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarydiffmapping-grpc-50-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarydiffmapping-grpc-50-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "eb3f26105dd93aeb3a2ab5d295140198c54e513a",
                    "headers": [],
                    "host_rewrite": "canary.1.example.com",
                    "kind": "Mapping",
                    "location": "plain-canarydiffmapping-grpc-50-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryDiffMapping-GRPC-50",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryDiffMapping-GRPC-50/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        27,
                        0,
                        "/CanaryDiffMapping-GRPC-50/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: canary.1.example.com\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryDiffMapping-GRPC-50\nnamespace: plain-namespace\nprefix: /CanaryDiffMapping-GRPC-50/\nservice: http://plain-canarydiffmapping-grpc-50-grpc.plain-namespace\n",
                    "service": "http://plain-canarydiffmapping-grpc-50-grpc.plain-namespace",
                    "weight": 100
                },
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarydiffmapping-grpc-50-grpc-canary.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarydiffmapping-grpc-50-grpc-canary.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarydiffmapping-grpc-50-grpc-canary.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarydiffmapping_grpc_50_grpc_canary_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "host_rewrite": "canary.2.example.com",
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarydiffmapping-grpc-50-grpc-canary.plain-namespace.1",
                        "name": "cluster_http___plain_canarydiffmapping_g-6",
                        "namespace": "plain-namespace",
                        "service": "plain-canarydiffmapping-grpc-50-grpc-canary.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarydiffmapping-grpc-50-grpc-canary.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarydiffmapping-grpc-50-grpc-canary.plain-namespace:80"
                        ]
                    },
                    "group_id": "eb3f26105dd93aeb3a2ab5d295140198c54e513a",
                    "headers": [],
                    "host_rewrite": "canary.2.example.com",
                    "kind": "Mapping",
                    "location": "plain-canarydiffmapping-grpc-50-grpc-canary.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryDiffMapping-GRPC-50-canary",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryDiffMapping-GRPC-50/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        27,
                        0,
                        "/CanaryDiffMapping-GRPC-50/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: canary.2.example.com\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryDiffMapping-GRPC-50-canary\nnamespace: plain-namespace\nprefix: /CanaryDiffMapping-GRPC-50/\nservice: http://plain-canarydiffmapping-grpc-50-grpc-canary.plain-namespace\nweight: 50\n",
                    "service": "http://plain-canarydiffmapping-grpc-50-grpc-canary.plain-namespace",
                    "weight": 50
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: CanaryDiffMapping-GRPC-50-canary",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/CanaryDiffMapping-GRPC-50/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: canary.1.example.com\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryDiffMapping-GRPC-50\nnamespace: plain-namespace\nprefix: /CanaryDiffMapping-GRPC-50/\nservice: http://plain-canarydiffmapping-grpc-50-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-canarydiffmapping-grpc-10-grpc-canary.plain-namespace.1",
                "plain-canarydiffmapping-grpc-10-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-canarydiffmapping-grpc-10-grpc-canary.plain-namespace.1",
            "group_id": "82db7319f7f2a5299df11394e1cee265b172af43",
            "group_weight": [
                0,
                27,
                0,
                "/CanaryDiffMapping-GRPC-10/",
                "GET"
            ],
            "headers": [],
            "host_rewrite": "canary.1.example.com",
            "kind": "IRHTTPMappingGroup",
            "location": "plain-canarydiffmapping-grpc-10-grpc-canary.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarydiffmapping-grpc-10-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarydiffmapping-grpc-10-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarydiffmapping-grpc-10-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarydiffmapping_grpc_10_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "host_rewrite": "canary.1.example.com",
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarydiffmapping-grpc-10-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_canarydiffmapping_g-5",
                        "namespace": "plain-namespace",
                        "service": "plain-canarydiffmapping-grpc-10-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarydiffmapping-grpc-10-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarydiffmapping-grpc-10-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "82db7319f7f2a5299df11394e1cee265b172af43",
                    "headers": [],
                    "host_rewrite": "canary.1.example.com",
                    "kind": "Mapping",
                    "location": "plain-canarydiffmapping-grpc-10-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryDiffMapping-GRPC-10",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryDiffMapping-GRPC-10/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        27,
                        0,
                        "/CanaryDiffMapping-GRPC-10/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: canary.1.example.com\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryDiffMapping-GRPC-10\nnamespace: plain-namespace\nprefix: /CanaryDiffMapping-GRPC-10/\nservice: http://plain-canarydiffmapping-grpc-10-grpc.plain-namespace\n",
                    "service": "http://plain-canarydiffmapping-grpc-10-grpc.plain-namespace",
                    "weight": 100
                },
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarydiffmapping-grpc-10-grpc-canary.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarydiffmapping-grpc-10-grpc-canary.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarydiffmapping-grpc-10-grpc-canary.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarydiffmapping_grpc_10_grpc_canary_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "host_rewrite": "canary.2.example.com",
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarydiffmapping-grpc-10-grpc-canary.plain-namespace.1",
                        "name": "cluster_http___plain_canarydiffmapping_g-4",
                        "namespace": "plain-namespace",
                        "service": "plain-canarydiffmapping-grpc-10-grpc-canary.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarydiffmapping-grpc-10-grpc-canary.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarydiffmapping-grpc-10-grpc-canary.plain-namespace:80"
                        ]
                    },
                    "group_id": "82db7319f7f2a5299df11394e1cee265b172af43",
                    "headers": [],
                    "host_rewrite": "canary.2.example.com",
                    "kind": "Mapping",
                    "location": "plain-canarydiffmapping-grpc-10-grpc-canary.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryDiffMapping-GRPC-10-canary",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryDiffMapping-GRPC-10/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        27,
                        0,
                        "/CanaryDiffMapping-GRPC-10/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: canary.2.example.com\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryDiffMapping-GRPC-10-canary\nnamespace: plain-namespace\nprefix: /CanaryDiffMapping-GRPC-10/\nservice: http://plain-canarydiffmapping-grpc-10-grpc-canary.plain-namespace\nweight: 10\n",
                    "service": "http://plain-canarydiffmapping-grpc-10-grpc-canary.plain-namespace",
                    "weight": 10
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: CanaryDiffMapping-GRPC-10-canary",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/CanaryDiffMapping-GRPC-10/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: canary.1.example.com\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryDiffMapping-GRPC-10\nnamespace: plain-namespace\nprefix: /CanaryDiffMapping-GRPC-10/\nservice: http://plain-canarydiffmapping-grpc-10-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-addreqheadersmapping-http-http.plain-namespace.1"
            ],
            "_rkey": "plain-addreqheadersmapping-http-http.plain-namespace.1",
            "add_request_headers": {
                "aoo": {
                    "append": true,
                    "value": "aoo"
                },
                "boo": {
                    "value": "boo"
                },
                "foo": "Foo",
                "zoo": {
                    "append": false,
                    "value": "Zoo"
                }
            },
            "group_id": "1cf9a291ecf6b1e2e9bd2ab118109e8860950344",
            "group_weight": [
                0,
                27,
                0,
                "/AddReqHeadersMapping-HTTP/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-addreqheadersmapping-http-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-addreqheadersmapping-http-http.plain-namespace.1",
                    "add_request_headers": {
                        "aoo": {
                            "append": true,
                            "value": "aoo"
                        },
                        "boo": {
                            "value": "boo"
                        },
                        "foo": "Foo",
                        "zoo": {
                            "append": false,
                            "value": "Zoo"
                        }
                    },
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-addreqheadersmapping-http-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-addreqheadersmapping-http-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_addreqheadersmapping_http_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-addreqheadersmapping-http-http.plain-namespace.1",
                        "name": "cluster_http___plain_addreqheadersmappin-1",
                        "namespace": "plain-namespace",
                        "service": "plain-addreqheadersmapping-http-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-addreqheadersmapping-http-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-addreqheadersmapping-http-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "1cf9a291ecf6b1e2e9bd2ab118109e8860950344",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-addreqheadersmapping-http-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "AddReqHeadersMapping-HTTP",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/AddReqHeadersMapping-HTTP/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        27,
                        0,
                        "/AddReqHeadersMapping-HTTP/",
                        "GET"
                    ],
                    "serialization": "add_request_headers:\n  aoo:\n    append: true\n    value: aoo\n  boo:\n    value: boo\n  foo: Foo\n  zoo:\n    append: false\n    value: Zoo\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: AddReqHeadersMapping-HTTP\nnamespace: plain-namespace\nprefix: /AddReqHeadersMapping-HTTP/\nservice: http://plain-addreqheadersmapping-http-http.plain-namespace\n",
                    "service": "http://plain-addreqheadersmapping-http-http.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: AddReqHeadersMapping-HTTP",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/AddReqHeadersMapping-HTTP/",
            "rewrite": "/",
            "serialization": "add_request_headers:\n  aoo:\n    append: true\n    value: aoo\n  boo:\n    value: boo\n  foo: Foo\n  zoo:\n    append: false\n    value: Zoo\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: AddReqHeadersMapping-HTTP\nnamespace: plain-namespace\nprefix: /AddReqHeadersMapping-HTTP/\nservice: http://plain-addreqheadersmapping-http-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-addreqheadersmapping-grpc-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-addreqheadersmapping-grpc-grpc.plain-namespace.1",
            "add_request_headers": {
                "aoo": {
                    "append": true,
                    "value": "aoo"
                },
                "boo": {
                    "value": "boo"
                },
                "foo": "Foo",
                "zoo": {
                    "append": false,
                    "value": "Zoo"
                }
            },
            "group_id": "80c004bc8f2ade322c574ee8ff1003bcdb0ae030",
            "group_weight": [
                0,
                27,
                0,
                "/AddReqHeadersMapping-GRPC/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-addreqheadersmapping-grpc-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-addreqheadersmapping-grpc-grpc.plain-namespace.1",
                    "add_request_headers": {
                        "aoo": {
                            "append": true,
                            "value": "aoo"
                        },
                        "boo": {
                            "value": "boo"
                        },
                        "foo": "Foo",
                        "zoo": {
                            "append": false,
                            "value": "Zoo"
                        }
                    },
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-addreqheadersmapping-grpc-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-addreqheadersmapping-grpc-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_addreqheadersmapping_grpc_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-addreqheadersmapping-grpc-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_addreqheadersmappin-0",
                        "namespace": "plain-namespace",
                        "service": "plain-addreqheadersmapping-grpc-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-addreqheadersmapping-grpc-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-addreqheadersmapping-grpc-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "80c004bc8f2ade322c574ee8ff1003bcdb0ae030",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-addreqheadersmapping-grpc-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "AddReqHeadersMapping-GRPC",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/AddReqHeadersMapping-GRPC/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        27,
                        0,
                        "/AddReqHeadersMapping-GRPC/",
                        "GET"
                    ],
                    "serialization": "add_request_headers:\n  aoo:\n    append: true\n    value: aoo\n  boo:\n    value: boo\n  foo: Foo\n  zoo:\n    append: false\n    value: Zoo\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: AddReqHeadersMapping-GRPC\nnamespace: plain-namespace\nprefix: /AddReqHeadersMapping-GRPC/\nservice: http://plain-addreqheadersmapping-grpc-grpc.plain-namespace\n",
                    "service": "http://plain-addreqheadersmapping-grpc-grpc.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: AddReqHeadersMapping-GRPC",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/AddReqHeadersMapping-GRPC/",
            "rewrite": "/",
            "serialization": "add_request_headers:\n  aoo:\n    append: true\n    value: aoo\n  boo:\n    value: boo\n  foo: Foo\n  zoo:\n    append: false\n    value: Zoo\nambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: AddReqHeadersMapping-GRPC\nnamespace: plain-namespace\nprefix: /AddReqHeadersMapping-GRPC/\nservice: http://plain-addreqheadersmapping-grpc-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "--internal--"
            ],
            "_rkey": "ir.ambassador",
            "group_id": "b4db12f5b638f1750062dd4220911c4f6f44fc57",
            "group_weight": [
                0,
                26,
                0,
                "/ambassador/v0/check_ready",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "--internal--",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_referenced_by": [
                        "--internal--"
                    ],
                    "_rkey": "ir.ambassador",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "127.0.0.1",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 8877,
                        "_referenced_by": [
                            "--internal--"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_127_0_0_1_8877_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "--internal--",
                        "name": "cluster_127_0_0_1_8877_plain_namespace",
                        "namespace": "plain-namespace",
                        "service": "127.0.0.1:8877",
                        "targets": [
                            {
                                "ip": "127.0.0.1",
                                "port": 8877,
                                "target_kind": "IPaddr"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://127.0.0.1:8877"
                        ]
                    },
                    "group_id": "b4db12f5b638f1750062dd4220911c4f6f44fc57",
                    "headers": [],
                    "kind": "IRHTTPMapping",
                    "location": "--internal--",
                    "name": "internal_readiness_probe_mapping",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/ambassador/v0/check_ready",
                    "resolver": "kubernetes-service",
                    "rewrite": "/ambassador/v0/check_ready",
                    "route_weight": [
                        0,
                        26,
                        0,
                        "/ambassador/v0/check_ready",
                        "GET"
                    ],
                    "service": "127.0.0.1:8877",
                    "timeout_ms": 10000,
                    "weight": 100
                }
            ],
            "name": "GROUP: internal_readiness_probe_mapping",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/ambassador/v0/check_ready",
            "rewrite": "/ambassador/v0/check_ready",
            "timeout_ms": 10000
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "--internal--"
            ],
            "_rkey": "ir.ambassador",
            "group_id": "7df546235997704c909d473af2cbcb5e606d20de",
            "group_weight": [
                0,
                26,
                0,
                "/ambassador/v0/check_alive",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "--internal--",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_referenced_by": [
                        "--internal--"
                    ],
                    "_rkey": "ir.ambassador",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "127.0.0.1",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 8877,
                        "_referenced_by": [
                            "--internal--"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_127_0_0_1_8877_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "--internal--",
                        "name": "cluster_127_0_0_1_8877_plain_namespace",
                        "namespace": "plain-namespace",
                        "service": "127.0.0.1:8877",
                        "targets": [
                            {
                                "ip": "127.0.0.1",
                                "port": 8877,
                                "target_kind": "IPaddr"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://127.0.0.1:8877"
                        ]
                    },
                    "group_id": "7df546235997704c909d473af2cbcb5e606d20de",
                    "headers": [],
                    "kind": "IRHTTPMapping",
                    "location": "--internal--",
                    "name": "internal_liveness_probe_mapping",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/ambassador/v0/check_alive",
                    "resolver": "kubernetes-service",
                    "rewrite": "/ambassador/v0/check_alive",
                    "route_weight": [
                        0,
                        26,
                        0,
                        "/ambassador/v0/check_alive",
                        "GET"
                    ],
                    "service": "127.0.0.1:8877",
                    "timeout_ms": 10000,
                    "weight": 100
                }
            ],
            "name": "GROUP: internal_liveness_probe_mapping",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/ambassador/v0/check_alive",
            "rewrite": "/ambassador/v0/check_alive",
            "timeout_ms": 10000
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-canarydiffmapping-http-0-http-canary.plain-namespace.1",
                "plain-canarydiffmapping-http-0-http.plain-namespace.1"
            ],
            "_rkey": "plain-canarydiffmapping-http-0-http-canary.plain-namespace.1",
            "group_id": "71ac6b8a342fc515ae67568320f820290aa9ad00",
            "group_weight": [
                0,
                26,
                0,
                "/CanaryDiffMapping-HTTP-0/",
                "GET"
            ],
            "headers": [],
            "host_rewrite": "canary.1.example.com",
            "kind": "IRHTTPMappingGroup",
            "location": "plain-canarydiffmapping-http-0-http-canary.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarydiffmapping-http-0-http.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarydiffmapping-http-0-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarydiffmapping-http-0-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarydiffmapping_http_0_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "host_rewrite": "canary.1.example.com",
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarydiffmapping-http-0-http.plain-namespace.1",
                        "name": "cluster_http___plain_canarydiffmapping_h-1",
                        "namespace": "plain-namespace",
                        "service": "plain-canarydiffmapping-http-0-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarydiffmapping-http-0-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarydiffmapping-http-0-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "71ac6b8a342fc515ae67568320f820290aa9ad00",
                    "headers": [],
                    "host_rewrite": "canary.1.example.com",
                    "kind": "Mapping",
                    "location": "plain-canarydiffmapping-http-0-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryDiffMapping-HTTP-0",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryDiffMapping-HTTP-0/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        26,
                        0,
                        "/CanaryDiffMapping-HTTP-0/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: canary.1.example.com\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryDiffMapping-HTTP-0\nnamespace: plain-namespace\nprefix: /CanaryDiffMapping-HTTP-0/\nservice: http://plain-canarydiffmapping-http-0-http.plain-namespace\n",
                    "service": "http://plain-canarydiffmapping-http-0-http.plain-namespace",
                    "weight": 100
                },
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarydiffmapping-http-0-http-canary.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarydiffmapping-http-0-http-canary.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarydiffmapping-http-0-http-canary.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarydiffmapping_http_0_http_canary_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "host_rewrite": "canary.2.example.com",
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarydiffmapping-http-0-http-canary.plain-namespace.1",
                        "name": "cluster_http___plain_canarydiffmapping_h-0",
                        "namespace": "plain-namespace",
                        "service": "plain-canarydiffmapping-http-0-http-canary.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarydiffmapping-http-0-http-canary.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarydiffmapping-http-0-http-canary.plain-namespace:80"
                        ]
                    },
                    "group_id": "71ac6b8a342fc515ae67568320f820290aa9ad00",
                    "headers": [],
                    "host_rewrite": "canary.2.example.com",
                    "kind": "Mapping",
                    "location": "plain-canarydiffmapping-http-0-http-canary.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryDiffMapping-HTTP-0-canary",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryDiffMapping-HTTP-0/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        26,
                        0,
                        "/CanaryDiffMapping-HTTP-0/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: canary.2.example.com\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryDiffMapping-HTTP-0-canary\nnamespace: plain-namespace\nprefix: /CanaryDiffMapping-HTTP-0/\nservice: http://plain-canarydiffmapping-http-0-http-canary.plain-namespace\nweight: 0\n",
                    "service": "http://plain-canarydiffmapping-http-0-http-canary.plain-namespace",
                    "weight": 0
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: CanaryDiffMapping-HTTP-0-canary",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/CanaryDiffMapping-HTTP-0/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: canary.1.example.com\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryDiffMapping-HTTP-0\nnamespace: plain-namespace\nprefix: /CanaryDiffMapping-HTTP-0/\nservice: http://plain-canarydiffmapping-http-0-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-canarydiffmapping-grpc-0-grpc-canary.plain-namespace.1",
                "plain-canarydiffmapping-grpc-0-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-canarydiffmapping-grpc-0-grpc-canary.plain-namespace.1",
            "group_id": "184265711109e9f1725ec92a73e7b6c2bebe80f3",
            "group_weight": [
                0,
                26,
                0,
                "/CanaryDiffMapping-GRPC-0/",
                "GET"
            ],
            "headers": [],
            "host_rewrite": "canary.1.example.com",
            "kind": "IRHTTPMappingGroup",
            "location": "plain-canarydiffmapping-grpc-0-grpc-canary.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarydiffmapping-grpc-0-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarydiffmapping-grpc-0-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarydiffmapping-grpc-0-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarydiffmapping_grpc_0_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "host_rewrite": "canary.1.example.com",
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarydiffmapping-grpc-0-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_canarydiffmapping_g-1",
                        "namespace": "plain-namespace",
                        "service": "plain-canarydiffmapping-grpc-0-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarydiffmapping-grpc-0-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarydiffmapping-grpc-0-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "184265711109e9f1725ec92a73e7b6c2bebe80f3",
                    "headers": [],
                    "host_rewrite": "canary.1.example.com",
                    "kind": "Mapping",
                    "location": "plain-canarydiffmapping-grpc-0-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryDiffMapping-GRPC-0",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryDiffMapping-GRPC-0/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        26,
                        0,
                        "/CanaryDiffMapping-GRPC-0/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: canary.1.example.com\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryDiffMapping-GRPC-0\nnamespace: plain-namespace\nprefix: /CanaryDiffMapping-GRPC-0/\nservice: http://plain-canarydiffmapping-grpc-0-grpc.plain-namespace\n",
                    "service": "http://plain-canarydiffmapping-grpc-0-grpc.plain-namespace",
                    "weight": 100
                },
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarydiffmapping-grpc-0-grpc-canary.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarydiffmapping-grpc-0-grpc-canary.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarydiffmapping-grpc-0-grpc-canary.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarydiffmapping_grpc_0_grpc_canary_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "host_rewrite": "canary.2.example.com",
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarydiffmapping-grpc-0-grpc-canary.plain-namespace.1",
                        "name": "cluster_http___plain_canarydiffmapping_g-0",
                        "namespace": "plain-namespace",
                        "service": "plain-canarydiffmapping-grpc-0-grpc-canary.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarydiffmapping-grpc-0-grpc-canary.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarydiffmapping-grpc-0-grpc-canary.plain-namespace:80"
                        ]
                    },
                    "group_id": "184265711109e9f1725ec92a73e7b6c2bebe80f3",
                    "headers": [],
                    "host_rewrite": "canary.2.example.com",
                    "kind": "Mapping",
                    "location": "plain-canarydiffmapping-grpc-0-grpc-canary.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryDiffMapping-GRPC-0-canary",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryDiffMapping-GRPC-0/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        26,
                        0,
                        "/CanaryDiffMapping-GRPC-0/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: canary.2.example.com\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryDiffMapping-GRPC-0-canary\nnamespace: plain-namespace\nprefix: /CanaryDiffMapping-GRPC-0/\nservice: http://plain-canarydiffmapping-grpc-0-grpc-canary.plain-namespace\nweight: 0\n",
                    "service": "http://plain-canarydiffmapping-grpc-0-grpc-canary.plain-namespace",
                    "weight": 0
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: CanaryDiffMapping-GRPC-0-canary",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/CanaryDiffMapping-GRPC-0/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: canary.1.example.com\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryDiffMapping-GRPC-0\nnamespace: plain-namespace\nprefix: /CanaryDiffMapping-GRPC-0/\nservice: http://plain-canarydiffmapping-grpc-0-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-http-cors-http.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-http-cors-http.plain-namespace.1",
            "cors": {
                "allow_origin_string_match": [
                    {
                        "exact": "*"
                    }
                ],
                "filter_enabled": {
                    "default_value": {
                        "denominator": "HUNDRED",
                        "numerator": 100
                    },
                    "runtime_key": "routing.cors_enabled.unset"
                }
            },
            "group_id": "b6dbc25782c1d9ac4f2081e2289ac2dcae15d7c5",
            "group_weight": [
                0,
                25,
                0,
                "/SimpleMapping-HTTP-CORS/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-http-cors-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-http-cors-http.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-http-cors-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-http-cors-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_http_cors_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-http-cors-http.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_http_-13",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-http-cors-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-http-cors-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-http-cors-http.plain-namespace:80"
                        ]
                    },
                    "cors": {
                        "allow_origin_string_match": [
                            {
                                "exact": "*"
                            }
                        ],
                        "filter_enabled": {
                            "default_value": {
                                "denominator": "HUNDRED",
                                "numerator": 100
                            },
                            "runtime_key": "routing.cors_enabled.unset"
                        }
                    },
                    "group_id": "b6dbc25782c1d9ac4f2081e2289ac2dcae15d7c5",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-http-cors-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-HTTP-CORS",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-HTTP-CORS/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        25,
                        0,
                        "/SimpleMapping-HTTP-CORS/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\ncors:\n  origins: '*'\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-CORS\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-CORS/\nservice: http://plain-simplemapping-http-cors-http.plain-namespace\n",
                    "service": "http://plain-simplemapping-http-cors-http.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-HTTP-CORS",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-HTTP-CORS/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\ncors:\n  origins: '*'\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-CORS\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-CORS/\nservice: http://plain-simplemapping-http-cors-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-grpc-cors-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-grpc-cors-grpc.plain-namespace.1",
            "cors": {
                "allow_origin_string_match": [
                    {
                        "exact": "*"
                    }
                ],
                "filter_enabled": {
                    "default_value": {
                        "denominator": "HUNDRED",
                        "numerator": 100
                    },
                    "runtime_key": "routing.cors_enabled.unset"
                }
            },
            "group_id": "09eeb3b6514195bb1e8da9c1552e50bf17ed7b02",
            "group_weight": [
                0,
                25,
                0,
                "/SimpleMapping-GRPC-CORS/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-grpc-cors-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-grpc-cors-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-grpc-cors-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-grpc-cors-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_grpc_cors_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-grpc-cors-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_grpc_-13",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-grpc-cors-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-grpc-cors-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-grpc-cors-grpc.plain-namespace:80"
                        ]
                    },
                    "cors": {
                        "allow_origin_string_match": [
                            {
                                "exact": "*"
                            }
                        ],
                        "filter_enabled": {
                            "default_value": {
                                "denominator": "HUNDRED",
                                "numerator": 100
                            },
                            "runtime_key": "routing.cors_enabled.unset"
                        }
                    },
                    "group_id": "09eeb3b6514195bb1e8da9c1552e50bf17ed7b02",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-grpc-cors-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-GRPC-CORS",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-GRPC-CORS/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        25,
                        0,
                        "/SimpleMapping-GRPC-CORS/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\ncors:\n  origins: '*'\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-CORS\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-CORS/\nservice: http://plain-simplemapping-grpc-cors-grpc.plain-namespace\n",
                    "service": "http://plain-simplemapping-grpc-cors-grpc.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-GRPC-CORS",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-GRPC-CORS/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\ncors:\n  origins: '*'\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-CORS\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-CORS/\nservice: http://plain-simplemapping-grpc-cors-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-invalidportmapping-http-http.plain-namespace.1"
            ],
            "_rkey": "plain-invalidportmapping-http-http.plain-namespace.1",
            "group_id": "8b04e14fdf699a871a1b0b4f77fb1129ed58e907",
            "group_weight": [
                0,
                25,
                0,
                "/InvalidPortMapping-HTTP/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-invalidportmapping-http-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-invalidportmapping-http-http.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": false,
                        "_errored": false,
                        "_hostname": "plain-invalidportmapping-http-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-invalidportmapping-http-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_invalidportmapping_http_http_plain_namespace_80_invalid_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": true,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-invalidportmapping-http-http.plain-namespace.1",
                        "name": "cluster_http___plain_invalidportmapping_-1",
                        "namespace": "plain-namespace",
                        "service": "plain-invalidportmapping-http-http.plain-namespace:80.invalid",
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-invalidportmapping-http-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "8b04e14fdf699a871a1b0b4f77fb1129ed58e907",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-invalidportmapping-http-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "InvalidPortMapping-HTTP",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/InvalidPortMapping-HTTP/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        25,
                        0,
                        "/InvalidPortMapping-HTTP/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: InvalidPortMapping-HTTP\nnamespace: plain-namespace\nprefix: /InvalidPortMapping-HTTP/\nservice: http://plain-invalidportmapping-http-http.plain-namespace:80.invalid\n",
                    "service": "http://plain-invalidportmapping-http-http.plain-namespace:80.invalid",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: InvalidPortMapping-HTTP",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/InvalidPortMapping-HTTP/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: InvalidPortMapping-HTTP\nnamespace: plain-namespace\nprefix: /InvalidPortMapping-HTTP/\nservice: http://plain-invalidportmapping-http-http.plain-namespace:80.invalid\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-invalidportmapping-grpc-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-invalidportmapping-grpc-grpc.plain-namespace.1",
            "group_id": "f4935be08f5eac70695a2c35181a4b95a547383b",
            "group_weight": [
                0,
                25,
                0,
                "/InvalidPortMapping-GRPC/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-invalidportmapping-grpc-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-invalidportmapping-grpc-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": false,
                        "_errored": false,
                        "_hostname": "plain-invalidportmapping-grpc-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-invalidportmapping-grpc-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_invalidportmapping_grpc_grpc_plain_namespace_80_invalid_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": true,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-invalidportmapping-grpc-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_invalidportmapping_-0",
                        "namespace": "plain-namespace",
                        "service": "plain-invalidportmapping-grpc-grpc.plain-namespace:80.invalid",
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-invalidportmapping-grpc-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "f4935be08f5eac70695a2c35181a4b95a547383b",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-invalidportmapping-grpc-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "InvalidPortMapping-GRPC",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/InvalidPortMapping-GRPC/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        25,
                        0,
                        "/InvalidPortMapping-GRPC/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: InvalidPortMapping-GRPC\nnamespace: plain-namespace\nprefix: /InvalidPortMapping-GRPC/\nservice: http://plain-invalidportmapping-grpc-grpc.plain-namespace:80.invalid\n",
                    "service": "http://plain-invalidportmapping-grpc-grpc.plain-namespace:80.invalid",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: InvalidPortMapping-GRPC",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/InvalidPortMapping-GRPC/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: InvalidPortMapping-GRPC\nnamespace: plain-namespace\nprefix: /InvalidPortMapping-GRPC/\nservice: http://plain-invalidportmapping-grpc-grpc.plain-namespace:80.invalid\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-hostheadermapping-http-http.plain-namespace.1"
            ],
            "_rkey": "plain-hostheadermapping-http-http.plain-namespace.1",
            "group_id": "343d702707bcdb0f317f7e570a91a4c3fa91d395",
            "group_weight": [
                0,
                24,
                28,
                "/HostHeaderMapping-HTTP/",
                "GET",
                ":authority-inspector.external"
            ],
            "headers": [
                {
                    "name": ":authority",
                    "regex": false,
                    "value": "inspector.external"
                }
            ],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-hostheadermapping-http-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-hostheadermapping-http-http.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-hostheadermapping-http-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-hostheadermapping-http-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_hostheadermapping_http_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-hostheadermapping-http-http.plain-namespace.1",
                        "name": "cluster_http___plain_hostheadermapping_h-0",
                        "namespace": "plain-namespace",
                        "service": "plain-hostheadermapping-http-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-hostheadermapping-http-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-hostheadermapping-http-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "343d702707bcdb0f317f7e570a91a4c3fa91d395",
                    "headers": [
                        {
                            "name": ":authority",
                            "regex": false,
                            "value": "inspector.external"
                        }
                    ],
                    "host": "inspector.external",
                    "kind": "Mapping",
                    "location": "plain-hostheadermapping-http-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "HostHeaderMapping-HTTP",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/HostHeaderMapping-HTTP/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        24,
                        28,
                        "/HostHeaderMapping-HTTP/",
                        "GET",
                        ":authority-inspector.external"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nhost: inspector.external\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: HostHeaderMapping-HTTP\nnamespace: plain-namespace\nprefix: /HostHeaderMapping-HTTP/\nservice: http://plain-hostheadermapping-http-http.plain-namespace\n",
                    "service": "http://plain-hostheadermapping-http-http.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: HostHeaderMapping-HTTP",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/HostHeaderMapping-HTTP/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nhost: inspector.external\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: HostHeaderMapping-HTTP\nnamespace: plain-namespace\nprefix: /HostHeaderMapping-HTTP/\nservice: http://plain-hostheadermapping-http-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-hostheadermapping-grpc-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-hostheadermapping-grpc-grpc.plain-namespace.1",
            "group_id": "96c5e8c5c00f7e47627c072c9720e99cd9cc0fb8",
            "group_weight": [
                0,
                24,
                28,
                "/HostHeaderMapping-GRPC/",
                "GET",
                ":authority-inspector.external"
            ],
            "headers": [
                {
                    "name": ":authority",
                    "regex": false,
                    "value": "inspector.external"
                }
            ],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-hostheadermapping-grpc-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-hostheadermapping-grpc-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-hostheadermapping-grpc-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-hostheadermapping-grpc-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_hostheadermapping_grpc_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-hostheadermapping-grpc-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_hostheadermapping_g-0",
                        "namespace": "plain-namespace",
                        "service": "plain-hostheadermapping-grpc-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-hostheadermapping-grpc-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-hostheadermapping-grpc-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "96c5e8c5c00f7e47627c072c9720e99cd9cc0fb8",
                    "headers": [
                        {
                            "name": ":authority",
                            "regex": false,
                            "value": "inspector.external"
                        }
                    ],
                    "host": "inspector.external",
                    "kind": "Mapping",
                    "location": "plain-hostheadermapping-grpc-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "HostHeaderMapping-GRPC",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/HostHeaderMapping-GRPC/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        24,
                        28,
                        "/HostHeaderMapping-GRPC/",
                        "GET",
                        ":authority-inspector.external"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nhost: inspector.external\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: HostHeaderMapping-GRPC\nnamespace: plain-namespace\nprefix: /HostHeaderMapping-GRPC/\nservice: http://plain-hostheadermapping-grpc-grpc.plain-namespace\n",
                    "service": "http://plain-hostheadermapping-grpc-grpc.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: HostHeaderMapping-GRPC",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/HostHeaderMapping-GRPC/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nhost: inspector.external\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: HostHeaderMapping-GRPC\nnamespace: plain-namespace\nprefix: /HostHeaderMapping-GRPC/\nservice: http://plain-hostheadermapping-grpc-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-headerroutingtest-http-http-target2.plain-namespace.1"
            ],
            "_rkey": "plain-headerroutingtest-http-http-target2.plain-namespace.1",
            "group_id": "9ef8804ca9aace8729f7008d1fd8d838196b23df",
            "group_weight": [
                0,
                24,
                14,
                "/HeaderRoutingTest-HTTP/",
                "GET",
                "X-Route-target2"
            ],
            "headers": [
                {
                    "name": "X-Route",
                    "regex": false,
                    "value": "target2"
                }
            ],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-headerroutingtest-http-http-target2.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-headerroutingtest-http-http-target2.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-headerroutingtest-http-http-target2.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-headerroutingtest-http-http-target2.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_headerroutingtest_http_http_target2_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-headerroutingtest-http-http-target2.plain-namespace.1",
                        "name": "cluster_http___plain_headerroutingtest_h-1",
                        "namespace": "plain-namespace",
                        "service": "plain-headerroutingtest-http-http-target2.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-headerroutingtest-http-http-target2.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-headerroutingtest-http-http-target2.plain-namespace:80"
                        ]
                    },
                    "group_id": "9ef8804ca9aace8729f7008d1fd8d838196b23df",
                    "headers": [
                        {
                            "name": "X-Route",
                            "regex": false,
                            "value": "target2"
                        }
                    ],
                    "kind": "Mapping",
                    "location": "plain-headerroutingtest-http-http-target2.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "X-Route",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/HeaderRoutingTest-HTTP/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        24,
                        14,
                        "/HeaderRoutingTest-HTTP/",
                        "GET",
                        "X-Route-target2"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nheaders:\n  X-Route: target2\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: HeaderRoutingTest-HTTP-target2\nnamespace: plain-namespace\nprefix: /HeaderRoutingTest-HTTP/\nservice: http://plain-headerroutingtest-http-http-target2.plain-namespace\n",
                    "service": "http://plain-headerroutingtest-http-http-target2.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: X-Route",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/HeaderRoutingTest-HTTP/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nheaders:\n  X-Route: target2\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: HeaderRoutingTest-HTTP-target2\nnamespace: plain-namespace\nprefix: /HeaderRoutingTest-HTTP/\nservice: http://plain-headerroutingtest-http-http-target2.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-headerroutingtest-grpc-grpc-target2.plain-namespace.1"
            ],
            "_rkey": "plain-headerroutingtest-grpc-grpc-target2.plain-namespace.1",
            "group_id": "0ed31846e2f18abf8fc108d99f8671391588ef72",
            "group_weight": [
                0,
                24,
                14,
                "/HeaderRoutingTest-GRPC/",
                "GET",
                "X-Route-target2"
            ],
            "headers": [
                {
                    "name": "X-Route",
                    "regex": false,
                    "value": "target2"
                }
            ],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-headerroutingtest-grpc-grpc-target2.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-headerroutingtest-grpc-grpc-target2.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-headerroutingtest-grpc-grpc-target2.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-headerroutingtest-grpc-grpc-target2.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_headerroutingtest_grpc_grpc_target2_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-headerroutingtest-grpc-grpc-target2.plain-namespace.1",
                        "name": "cluster_http___plain_headerroutingtest_g-1",
                        "namespace": "plain-namespace",
                        "service": "plain-headerroutingtest-grpc-grpc-target2.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-headerroutingtest-grpc-grpc-target2.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-headerroutingtest-grpc-grpc-target2.plain-namespace:80"
                        ]
                    },
                    "group_id": "0ed31846e2f18abf8fc108d99f8671391588ef72",
                    "headers": [
                        {
                            "name": "X-Route",
                            "regex": false,
                            "value": "target2"
                        }
                    ],
                    "kind": "Mapping",
                    "location": "plain-headerroutingtest-grpc-grpc-target2.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "X-Route",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/HeaderRoutingTest-GRPC/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        24,
                        14,
                        "/HeaderRoutingTest-GRPC/",
                        "GET",
                        "X-Route-target2"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nheaders:\n  X-Route: target2\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: HeaderRoutingTest-GRPC-target2\nnamespace: plain-namespace\nprefix: /HeaderRoutingTest-GRPC/\nservice: http://plain-headerroutingtest-grpc-grpc-target2.plain-namespace\n",
                    "service": "http://plain-headerroutingtest-grpc-grpc-target2.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: X-Route",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/HeaderRoutingTest-GRPC/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nheaders:\n  X-Route: target2\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: HeaderRoutingTest-GRPC-target2\nnamespace: plain-namespace\nprefix: /HeaderRoutingTest-GRPC/\nservice: http://plain-headerroutingtest-grpc-grpc-target2.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-http-all-http.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-http-all-http.plain-namespace.1",
            "add_request_headers": {
                "foo": "bar"
            },
            "add_response_headers": {
                "foo": "bar"
            },
            "auto_host_rewrite": true,
            "case_sensitive": false,
            "cors": {
                "allow_origin_string_match": [
                    {
                        "exact": "*"
                    }
                ],
                "filter_enabled": {
                    "default_value": {
                        "denominator": "HUNDRED",
                        "numerator": 100
                    },
                    "runtime_key": "routing.cors_enabled.unset"
                }
            },
            "group_id": "76b2c7674a43dbae2926cfa90d3ae576fa5cea64",
            "group_weight": [
                0,
                24,
                0,
                "/SimpleMapping-HTTP-all/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-http-all-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-http-all-http.plain-namespace.1",
                    "add_request_headers": {
                        "foo": "bar"
                    },
                    "add_response_headers": {
                        "foo": "bar"
                    },
                    "auto_host_rewrite": true,
                    "case_sensitive": false,
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-http-all-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-http-all-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_http_all_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-http-all-http.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_http_-10",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-http-all-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-http-all-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-http-all-http.plain-namespace:80"
                        ]
                    },
                    "cors": {
                        "allow_origin_string_match": [
                            {
                                "exact": "*"
                            }
                        ],
                        "filter_enabled": {
                            "default_value": {
                                "denominator": "HUNDRED",
                                "numerator": 100
                            },
                            "runtime_key": "routing.cors_enabled.unset"
                        }
                    },
                    "group_id": "76b2c7674a43dbae2926cfa90d3ae576fa5cea64",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-http-all-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-HTTP-all",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-HTTP-all/",
                    "remove_response_headers": "x-envoy-upstream-service-time",
                    "resolver": "kubernetes-service",
                    "rewrite": "/foo",
                    "route_weight": [
                        0,
                        24,
                        0,
                        "/SimpleMapping-HTTP-all/",
                        "GET"
                    ],
                    "serialization": "add_request_headers:\n  foo: bar\nadd_response_headers:\n  foo: bar\nambassador_id: plain\napiVersion: ambassador/v1\nauto_host_rewrite: true\ncase_sensitive: false\ncors:\n  origins: '*'\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-all\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-all/\nremove_response_headers: x-envoy-upstream-service-time\nrewrite: /foo\nservice: http://plain-simplemapping-http-all-http.plain-namespace\nuse_websocket: true\n",
                    "service": "http://plain-simplemapping-http-all-http.plain-namespace",
                    "use_websocket": true,
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-HTTP-all",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-HTTP-all/",
            "remove_response_headers": "x-envoy-upstream-service-time",
            "rewrite": "/foo",
            "serialization": "add_request_headers:\n  foo: bar\nadd_response_headers:\n  foo: bar\nambassador_id: plain\napiVersion: ambassador/v1\nauto_host_rewrite: true\ncase_sensitive: false\ncors:\n  origins: '*'\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP-all\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP-all/\nremove_response_headers: x-envoy-upstream-service-time\nrewrite: /foo\nservice: http://plain-simplemapping-http-all-http.plain-namespace\nuse_websocket: true\n",
            "use_websocket": true
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-grpc-all-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-grpc-all-grpc.plain-namespace.1",
            "add_request_headers": {
                "foo": "bar"
            },
            "add_response_headers": {
                "foo": "bar"
            },
            "auto_host_rewrite": true,
            "case_sensitive": false,
            "cors": {
                "allow_origin_string_match": [
                    {
                        "exact": "*"
                    }
                ],
                "filter_enabled": {
                    "default_value": {
                        "denominator": "HUNDRED",
                        "numerator": 100
                    },
                    "runtime_key": "routing.cors_enabled.unset"
                }
            },
            "group_id": "d12a2a9c8dfc4947dfaf1f5a0ebadedf55eec10c",
            "group_weight": [
                0,
                24,
                0,
                "/SimpleMapping-GRPC-all/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-grpc-all-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-grpc-all-grpc.plain-namespace.1",
                    "add_request_headers": {
                        "foo": "bar"
                    },
                    "add_response_headers": {
                        "foo": "bar"
                    },
                    "auto_host_rewrite": true,
                    "case_sensitive": false,
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-grpc-all-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-grpc-all-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_grpc_all_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-grpc-all-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_grpc_-10",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-grpc-all-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-grpc-all-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-grpc-all-grpc.plain-namespace:80"
                        ]
                    },
                    "cors": {
                        "allow_origin_string_match": [
                            {
                                "exact": "*"
                            }
                        ],
                        "filter_enabled": {
                            "default_value": {
                                "denominator": "HUNDRED",
                                "numerator": 100
                            },
                            "runtime_key": "routing.cors_enabled.unset"
                        }
                    },
                    "group_id": "d12a2a9c8dfc4947dfaf1f5a0ebadedf55eec10c",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-grpc-all-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-GRPC-all",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-GRPC-all/",
                    "remove_response_headers": "x-envoy-upstream-service-time",
                    "resolver": "kubernetes-service",
                    "rewrite": "/foo",
                    "route_weight": [
                        0,
                        24,
                        0,
                        "/SimpleMapping-GRPC-all/",
                        "GET"
                    ],
                    "serialization": "add_request_headers:\n  foo: bar\nadd_response_headers:\n  foo: bar\nambassador_id: plain\napiVersion: ambassador/v1\nauto_host_rewrite: true\ncase_sensitive: false\ncors:\n  origins: '*'\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-all\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-all/\nremove_response_headers: x-envoy-upstream-service-time\nrewrite: /foo\nservice: http://plain-simplemapping-grpc-all-grpc.plain-namespace\nuse_websocket: true\n",
                    "service": "http://plain-simplemapping-grpc-all-grpc.plain-namespace",
                    "use_websocket": true,
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-GRPC-all",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-GRPC-all/",
            "remove_response_headers": "x-envoy-upstream-service-time",
            "rewrite": "/foo",
            "serialization": "add_request_headers:\n  foo: bar\nadd_response_headers:\n  foo: bar\nambassador_id: plain\napiVersion: ambassador/v1\nauto_host_rewrite: true\ncase_sensitive: false\ncors:\n  origins: '*'\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC-all\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC-all/\nremove_response_headers: x-envoy-upstream-service-time\nrewrite: /foo\nservice: http://plain-simplemapping-grpc-all-grpc.plain-namespace\nuse_websocket: true\n",
            "use_websocket": true
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-headerroutingtest-http-http.plain-namespace.1"
            ],
            "_rkey": "plain-headerroutingtest-http-http.plain-namespace.1",
            "group_id": "dbbba9aca7faebac338d47cae687895d7b89b38f",
            "group_weight": [
                0,
                24,
                0,
                "/HeaderRoutingTest-HTTP/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-headerroutingtest-http-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-headerroutingtest-http-http.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-headerroutingtest-http-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-headerroutingtest-http-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_headerroutingtest_http_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-headerroutingtest-http-http.plain-namespace.1",
                        "name": "cluster_http___plain_headerroutingtest_h-0",
                        "namespace": "plain-namespace",
                        "service": "plain-headerroutingtest-http-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-headerroutingtest-http-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-headerroutingtest-http-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "dbbba9aca7faebac338d47cae687895d7b89b38f",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-headerroutingtest-http-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "HeaderRoutingTest-HTTP-target1",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/HeaderRoutingTest-HTTP/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        24,
                        0,
                        "/HeaderRoutingTest-HTTP/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: HeaderRoutingTest-HTTP-target1\nnamespace: plain-namespace\nprefix: /HeaderRoutingTest-HTTP/\nservice: http://plain-headerroutingtest-http-http.plain-namespace\n",
                    "service": "http://plain-headerroutingtest-http-http.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: HeaderRoutingTest-HTTP-target1",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/HeaderRoutingTest-HTTP/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: HeaderRoutingTest-HTTP-target1\nnamespace: plain-namespace\nprefix: /HeaderRoutingTest-HTTP/\nservice: http://plain-headerroutingtest-http-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-headerroutingtest-grpc-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-headerroutingtest-grpc-grpc.plain-namespace.1",
            "group_id": "713a73b77a48993a68901c1dc5a13cb3754f88b1",
            "group_weight": [
                0,
                24,
                0,
                "/HeaderRoutingTest-GRPC/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-headerroutingtest-grpc-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-headerroutingtest-grpc-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-headerroutingtest-grpc-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-headerroutingtest-grpc-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_headerroutingtest_grpc_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-headerroutingtest-grpc-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_headerroutingtest_g-0",
                        "namespace": "plain-namespace",
                        "service": "plain-headerroutingtest-grpc-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-headerroutingtest-grpc-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-headerroutingtest-grpc-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "713a73b77a48993a68901c1dc5a13cb3754f88b1",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-headerroutingtest-grpc-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "HeaderRoutingTest-GRPC-target1",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/HeaderRoutingTest-GRPC/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        24,
                        0,
                        "/HeaderRoutingTest-GRPC/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: HeaderRoutingTest-GRPC-target1\nnamespace: plain-namespace\nprefix: /HeaderRoutingTest-GRPC/\nservice: http://plain-headerroutingtest-grpc-grpc.plain-namespace\n",
                    "service": "http://plain-headerroutingtest-grpc-grpc.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: HeaderRoutingTest-GRPC-target1",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/HeaderRoutingTest-GRPC/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: HeaderRoutingTest-GRPC-target1\nnamespace: plain-namespace\nprefix: /HeaderRoutingTest-GRPC/\nservice: http://plain-headerroutingtest-grpc-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-canarymapping-http-100-http-canary.plain-namespace.1",
                "plain-canarymapping-http-100-http.plain-namespace.1"
            ],
            "_rkey": "plain-canarymapping-http-100-http-canary.plain-namespace.1",
            "group_id": "d303defb9e587302d1a31e6490030946fac431ac",
            "group_weight": [
                0,
                24,
                0,
                "/CanaryMapping-HTTP-100/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-canarymapping-http-100-http-canary.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarymapping-http-100-http.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarymapping-http-100-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarymapping-http-100-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarymapping_http_100_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarymapping-http-100-http.plain-namespace.1",
                        "name": "cluster_http___plain_canarymapping_http_-3",
                        "namespace": "plain-namespace",
                        "service": "plain-canarymapping-http-100-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarymapping-http-100-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarymapping-http-100-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "d303defb9e587302d1a31e6490030946fac431ac",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-canarymapping-http-100-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryMapping-HTTP-100",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryMapping-HTTP-100/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        24,
                        0,
                        "/CanaryMapping-HTTP-100/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryMapping-HTTP-100\nnamespace: plain-namespace\nprefix: /CanaryMapping-HTTP-100/\nservice: http://plain-canarymapping-http-100-http.plain-namespace\n",
                    "service": "http://plain-canarymapping-http-100-http.plain-namespace",
                    "weight": 100
                },
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarymapping-http-100-http-canary.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarymapping-http-100-http-canary.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarymapping-http-100-http-canary.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarymapping_http_100_http_canary_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarymapping-http-100-http-canary.plain-namespace.1",
                        "name": "cluster_http___plain_canarymapping_http_-2",
                        "namespace": "plain-namespace",
                        "service": "plain-canarymapping-http-100-http-canary.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarymapping-http-100-http-canary.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarymapping-http-100-http-canary.plain-namespace:80"
                        ]
                    },
                    "group_id": "d303defb9e587302d1a31e6490030946fac431ac",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-canarymapping-http-100-http-canary.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryMapping-HTTP-100-canary",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryMapping-HTTP-100/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        24,
                        0,
                        "/CanaryMapping-HTTP-100/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryMapping-HTTP-100-canary\nnamespace: plain-namespace\nprefix: /CanaryMapping-HTTP-100/\nservice: http://plain-canarymapping-http-100-http-canary.plain-namespace\nweight: 100\n",
                    "service": "http://plain-canarymapping-http-100-http-canary.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: CanaryMapping-HTTP-100-canary",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/CanaryMapping-HTTP-100/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryMapping-HTTP-100\nnamespace: plain-namespace\nprefix: /CanaryMapping-HTTP-100/\nservice: http://plain-canarymapping-http-100-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-canarymapping-grpc-100-grpc-canary.plain-namespace.1",
                "plain-canarymapping-grpc-100-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-canarymapping-grpc-100-grpc-canary.plain-namespace.1",
            "group_id": "e78e0a9a72ff2371c93167e6c216c9d2a84e447a",
            "group_weight": [
                0,
                24,
                0,
                "/CanaryMapping-GRPC-100/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-canarymapping-grpc-100-grpc-canary.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarymapping-grpc-100-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarymapping-grpc-100-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarymapping-grpc-100-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarymapping_grpc_100_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarymapping-grpc-100-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_canarymapping_grpc_-3",
                        "namespace": "plain-namespace",
                        "service": "plain-canarymapping-grpc-100-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarymapping-grpc-100-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarymapping-grpc-100-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "e78e0a9a72ff2371c93167e6c216c9d2a84e447a",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-canarymapping-grpc-100-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryMapping-GRPC-100",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryMapping-GRPC-100/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        24,
                        0,
                        "/CanaryMapping-GRPC-100/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryMapping-GRPC-100\nnamespace: plain-namespace\nprefix: /CanaryMapping-GRPC-100/\nservice: http://plain-canarymapping-grpc-100-grpc.plain-namespace\n",
                    "service": "http://plain-canarymapping-grpc-100-grpc.plain-namespace",
                    "weight": 100
                },
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarymapping-grpc-100-grpc-canary.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarymapping-grpc-100-grpc-canary.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarymapping-grpc-100-grpc-canary.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarymapping_grpc_100_grpc_canary_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarymapping-grpc-100-grpc-canary.plain-namespace.1",
                        "name": "cluster_http___plain_canarymapping_grpc_-2",
                        "namespace": "plain-namespace",
                        "service": "plain-canarymapping-grpc-100-grpc-canary.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarymapping-grpc-100-grpc-canary.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarymapping-grpc-100-grpc-canary.plain-namespace:80"
                        ]
                    },
                    "group_id": "e78e0a9a72ff2371c93167e6c216c9d2a84e447a",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-canarymapping-grpc-100-grpc-canary.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryMapping-GRPC-100-canary",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryMapping-GRPC-100/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        24,
                        0,
                        "/CanaryMapping-GRPC-100/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryMapping-GRPC-100-canary\nnamespace: plain-namespace\nprefix: /CanaryMapping-GRPC-100/\nservice: http://plain-canarymapping-grpc-100-grpc-canary.plain-namespace\nweight: 100\n",
                    "service": "http://plain-canarymapping-grpc-100-grpc-canary.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: CanaryMapping-GRPC-100-canary",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/CanaryMapping-GRPC-100/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryMapping-GRPC-100\nnamespace: plain-namespace\nprefix: /CanaryMapping-GRPC-100/\nservice: http://plain-canarymapping-grpc-100-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-websocketmapping-http-http.plain-namespace.1"
            ],
            "_rkey": "plain-websocketmapping-http-http.plain-namespace.1",
            "group_id": "07ff6553e1b8a02e499d1be15a0cdb4b07043ced",
            "group_weight": [
                0,
                23,
                0,
                "/WebSocketMapping-HTTP/",
                "GET"
            ],
            "headers": [],
            "host_rewrite": "echo.websocket.org",
            "kind": "IRHTTPMappingGroup",
            "location": "plain-websocketmapping-http-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-websocketmapping-http-http.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "echo.websocket.org",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-websocketmapping-grpc-grpc.plain-namespace.1",
                            "plain-websocketmapping-http-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_echo_websocket_org_80_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "host_rewrite": "echo.websocket.org",
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-websocketmapping-grpc-grpc.plain-namespace.1",
                        "name": "cluster_echo_websocket_org_80_plain_namespace",
                        "namespace": "plain-namespace",
                        "service": "echo.websocket.org:80",
                        "targets": [
                            {
                                "ip": "echo.websocket.org",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://echo.websocket.org:80"
                        ]
                    },
                    "group_id": "07ff6553e1b8a02e499d1be15a0cdb4b07043ced",
                    "headers": [],
                    "host_rewrite": "echo.websocket.org",
                    "kind": "Mapping",
                    "location": "plain-websocketmapping-http-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "WebSocketMapping-HTTP",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/WebSocketMapping-HTTP/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        23,
                        0,
                        "/WebSocketMapping-HTTP/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: echo.websocket.org\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: WebSocketMapping-HTTP\nnamespace: plain-namespace\nprefix: /WebSocketMapping-HTTP/\nservice: echo.websocket.org:80\nuse_websocket: true\n",
                    "service": "echo.websocket.org:80",
                    "use_websocket": true,
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: WebSocketMapping-HTTP",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/WebSocketMapping-HTTP/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: echo.websocket.org\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: WebSocketMapping-HTTP\nnamespace: plain-namespace\nprefix: /WebSocketMapping-HTTP/\nservice: echo.websocket.org:80\nuse_websocket: true\n",
            "use_websocket": true
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-websocketmapping-grpc-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-websocketmapping-grpc-grpc.plain-namespace.1",
            "group_id": "3b375e2e8ef79269ef6398c32d7d7474157ededd",
            "group_weight": [
                0,
                23,
                0,
                "/WebSocketMapping-GRPC/",
                "GET"
            ],
            "headers": [],
            "host_rewrite": "echo.websocket.org",
            "kind": "IRHTTPMappingGroup",
            "location": "plain-websocketmapping-grpc-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-websocketmapping-grpc-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "echo.websocket.org",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-websocketmapping-grpc-grpc.plain-namespace.1",
                            "plain-websocketmapping-http-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_echo_websocket_org_80_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "host_rewrite": "echo.websocket.org",
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-websocketmapping-grpc-grpc.plain-namespace.1",
                        "name": "cluster_echo_websocket_org_80_plain_namespace",
                        "namespace": "plain-namespace",
                        "service": "echo.websocket.org:80",
                        "targets": [
                            {
                                "ip": "echo.websocket.org",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://echo.websocket.org:80"
                        ]
                    },
                    "group_id": "3b375e2e8ef79269ef6398c32d7d7474157ededd",
                    "headers": [],
                    "host_rewrite": "echo.websocket.org",
                    "kind": "Mapping",
                    "location": "plain-websocketmapping-grpc-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "WebSocketMapping-GRPC",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/WebSocketMapping-GRPC/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        23,
                        0,
                        "/WebSocketMapping-GRPC/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: echo.websocket.org\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: WebSocketMapping-GRPC\nnamespace: plain-namespace\nprefix: /WebSocketMapping-GRPC/\nservice: echo.websocket.org:80\nuse_websocket: true\n",
                    "service": "echo.websocket.org:80",
                    "use_websocket": true,
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: WebSocketMapping-GRPC",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/WebSocketMapping-GRPC/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_rewrite: echo.websocket.org\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: WebSocketMapping-GRPC\nnamespace: plain-namespace\nprefix: /WebSocketMapping-GRPC/\nservice: echo.websocket.org:80\nuse_websocket: true\n",
            "use_websocket": true
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-hostredirectmapping-http.plain-namespace.2"
            ],
            "_rkey": "plain-hostredirectmapping-http.plain-namespace.2",
            "case_sensitive": false,
            "group_id": "ce3772b985b2deff189e356271677105d7986588",
            "group_weight": [
                0,
                23,
                0,
                "/HostRedirectMapping-2/",
                "GET"
            ],
            "headers": [],
            "host_redirect": {
                "_active": true,
                "_errored": false,
                "_rkey": "plain-hostredirectmapping-http.plain-namespace.2",
                "add_request_headers": {},
                "case_sensitive": false,
                "group_id": "ce3772b985b2deff189e356271677105d7986588",
                "headers": [],
                "host_redirect": true,
                "kind": "Mapping",
                "location": "plain-hostredirectmapping-http.plain-namespace.2",
                "metadata_labels": {
                    "kat-ambassador-id": "plain",
                    "scope": "AmbassadorTest"
                },
                "name": "HostRedirectMapping-2",
                "namespace": "plain-namespace",
                "precedence": 0,
                "prefix": "/HostRedirectMapping-2/",
                "resolver": "kubernetes-service",
                "rewrite": "/",
                "route_weight": [
                    0,
                    23,
                    0,
                    "/HostRedirectMapping-2/",
                    "GET"
                ],
                "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\ncase_sensitive: false\nhost_redirect: true\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: HostRedirectMapping-2\nnamespace: plain-namespace\nprefix: /HostRedirectMapping-2/\nservice: foobar.com\n",
                "service": "foobar.com"
            },
            "kind": "IRHTTPMappingGroup",
            "location": "plain-hostredirectmapping-http.plain-namespace.2",
            "name": "GROUP: HostRedirectMapping-2",
            "namespace": "plain-namespace",
            "prefix": "/HostRedirectMapping-2/",
            "rewrite": "/"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-canarymapping-http-50-http-canary.plain-namespace.1",
                "plain-canarymapping-http-50-http.plain-namespace.1"
            ],
            "_rkey": "plain-canarymapping-http-50-http-canary.plain-namespace.1",
            "group_id": "be9c155befc0175aa8da07c25dd19519ab55f7de",
            "group_weight": [
                0,
                23,
                0,
                "/CanaryMapping-HTTP-50/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-canarymapping-http-50-http-canary.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarymapping-http-50-http.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarymapping-http-50-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarymapping-http-50-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarymapping_http_50_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarymapping-http-50-http.plain-namespace.1",
                        "name": "cluster_http___plain_canarymapping_http_-7",
                        "namespace": "plain-namespace",
                        "service": "plain-canarymapping-http-50-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarymapping-http-50-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarymapping-http-50-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "be9c155befc0175aa8da07c25dd19519ab55f7de",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-canarymapping-http-50-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryMapping-HTTP-50",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryMapping-HTTP-50/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        23,
                        0,
                        "/CanaryMapping-HTTP-50/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryMapping-HTTP-50\nnamespace: plain-namespace\nprefix: /CanaryMapping-HTTP-50/\nservice: http://plain-canarymapping-http-50-http.plain-namespace\n",
                    "service": "http://plain-canarymapping-http-50-http.plain-namespace",
                    "weight": 100
                },
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarymapping-http-50-http-canary.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarymapping-http-50-http-canary.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarymapping-http-50-http-canary.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarymapping_http_50_http_canary_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarymapping-http-50-http-canary.plain-namespace.1",
                        "name": "cluster_http___plain_canarymapping_http_-6",
                        "namespace": "plain-namespace",
                        "service": "plain-canarymapping-http-50-http-canary.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarymapping-http-50-http-canary.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarymapping-http-50-http-canary.plain-namespace:80"
                        ]
                    },
                    "group_id": "be9c155befc0175aa8da07c25dd19519ab55f7de",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-canarymapping-http-50-http-canary.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryMapping-HTTP-50-canary",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryMapping-HTTP-50/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        23,
                        0,
                        "/CanaryMapping-HTTP-50/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryMapping-HTTP-50-canary\nnamespace: plain-namespace\nprefix: /CanaryMapping-HTTP-50/\nservice: http://plain-canarymapping-http-50-http-canary.plain-namespace\nweight: 50\n",
                    "service": "http://plain-canarymapping-http-50-http-canary.plain-namespace",
                    "weight": 50
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: CanaryMapping-HTTP-50-canary",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/CanaryMapping-HTTP-50/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryMapping-HTTP-50\nnamespace: plain-namespace\nprefix: /CanaryMapping-HTTP-50/\nservice: http://plain-canarymapping-http-50-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-canarymapping-http-10-http-canary.plain-namespace.1",
                "plain-canarymapping-http-10-http.plain-namespace.1"
            ],
            "_rkey": "plain-canarymapping-http-10-http-canary.plain-namespace.1",
            "group_id": "c40ad3f5b1605f1c163478a404da7d109179eefe",
            "group_weight": [
                0,
                23,
                0,
                "/CanaryMapping-HTTP-10/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-canarymapping-http-10-http-canary.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarymapping-http-10-http.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarymapping-http-10-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarymapping-http-10-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarymapping_http_10_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarymapping-http-10-http.plain-namespace.1",
                        "name": "cluster_http___plain_canarymapping_http_-5",
                        "namespace": "plain-namespace",
                        "service": "plain-canarymapping-http-10-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarymapping-http-10-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarymapping-http-10-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "c40ad3f5b1605f1c163478a404da7d109179eefe",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-canarymapping-http-10-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryMapping-HTTP-10",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryMapping-HTTP-10/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        23,
                        0,
                        "/CanaryMapping-HTTP-10/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryMapping-HTTP-10\nnamespace: plain-namespace\nprefix: /CanaryMapping-HTTP-10/\nservice: http://plain-canarymapping-http-10-http.plain-namespace\n",
                    "service": "http://plain-canarymapping-http-10-http.plain-namespace",
                    "weight": 100
                },
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarymapping-http-10-http-canary.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarymapping-http-10-http-canary.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarymapping-http-10-http-canary.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarymapping_http_10_http_canary_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarymapping-http-10-http-canary.plain-namespace.1",
                        "name": "cluster_http___plain_canarymapping_http_-4",
                        "namespace": "plain-namespace",
                        "service": "plain-canarymapping-http-10-http-canary.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarymapping-http-10-http-canary.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarymapping-http-10-http-canary.plain-namespace:80"
                        ]
                    },
                    "group_id": "c40ad3f5b1605f1c163478a404da7d109179eefe",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-canarymapping-http-10-http-canary.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryMapping-HTTP-10-canary",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryMapping-HTTP-10/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        23,
                        0,
                        "/CanaryMapping-HTTP-10/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryMapping-HTTP-10-canary\nnamespace: plain-namespace\nprefix: /CanaryMapping-HTTP-10/\nservice: http://plain-canarymapping-http-10-http-canary.plain-namespace\nweight: 10\n",
                    "service": "http://plain-canarymapping-http-10-http-canary.plain-namespace",
                    "weight": 10
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: CanaryMapping-HTTP-10-canary",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/CanaryMapping-HTTP-10/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryMapping-HTTP-10\nnamespace: plain-namespace\nprefix: /CanaryMapping-HTTP-10/\nservice: http://plain-canarymapping-http-10-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-canarymapping-grpc-50-grpc-canary.plain-namespace.1",
                "plain-canarymapping-grpc-50-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-canarymapping-grpc-50-grpc-canary.plain-namespace.1",
            "group_id": "4d4a7b2192e9aa4839e1a5d365ea730093d45517",
            "group_weight": [
                0,
                23,
                0,
                "/CanaryMapping-GRPC-50/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-canarymapping-grpc-50-grpc-canary.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarymapping-grpc-50-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarymapping-grpc-50-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarymapping-grpc-50-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarymapping_grpc_50_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarymapping-grpc-50-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_canarymapping_grpc_-7",
                        "namespace": "plain-namespace",
                        "service": "plain-canarymapping-grpc-50-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarymapping-grpc-50-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarymapping-grpc-50-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "4d4a7b2192e9aa4839e1a5d365ea730093d45517",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-canarymapping-grpc-50-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryMapping-GRPC-50",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryMapping-GRPC-50/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        23,
                        0,
                        "/CanaryMapping-GRPC-50/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryMapping-GRPC-50\nnamespace: plain-namespace\nprefix: /CanaryMapping-GRPC-50/\nservice: http://plain-canarymapping-grpc-50-grpc.plain-namespace\n",
                    "service": "http://plain-canarymapping-grpc-50-grpc.plain-namespace",
                    "weight": 100
                },
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarymapping-grpc-50-grpc-canary.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarymapping-grpc-50-grpc-canary.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarymapping-grpc-50-grpc-canary.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarymapping_grpc_50_grpc_canary_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarymapping-grpc-50-grpc-canary.plain-namespace.1",
                        "name": "cluster_http___plain_canarymapping_grpc_-6",
                        "namespace": "plain-namespace",
                        "service": "plain-canarymapping-grpc-50-grpc-canary.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarymapping-grpc-50-grpc-canary.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarymapping-grpc-50-grpc-canary.plain-namespace:80"
                        ]
                    },
                    "group_id": "4d4a7b2192e9aa4839e1a5d365ea730093d45517",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-canarymapping-grpc-50-grpc-canary.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryMapping-GRPC-50-canary",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryMapping-GRPC-50/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        23,
                        0,
                        "/CanaryMapping-GRPC-50/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryMapping-GRPC-50-canary\nnamespace: plain-namespace\nprefix: /CanaryMapping-GRPC-50/\nservice: http://plain-canarymapping-grpc-50-grpc-canary.plain-namespace\nweight: 50\n",
                    "service": "http://plain-canarymapping-grpc-50-grpc-canary.plain-namespace",
                    "weight": 50
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: CanaryMapping-GRPC-50-canary",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/CanaryMapping-GRPC-50/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryMapping-GRPC-50\nnamespace: plain-namespace\nprefix: /CanaryMapping-GRPC-50/\nservice: http://plain-canarymapping-grpc-50-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-canarymapping-grpc-10-grpc-canary.plain-namespace.1",
                "plain-canarymapping-grpc-10-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-canarymapping-grpc-10-grpc-canary.plain-namespace.1",
            "group_id": "6910bf0dbf9f4732effa69811adf477bb8c41cd7",
            "group_weight": [
                0,
                23,
                0,
                "/CanaryMapping-GRPC-10/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-canarymapping-grpc-10-grpc-canary.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarymapping-grpc-10-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarymapping-grpc-10-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarymapping-grpc-10-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarymapping_grpc_10_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarymapping-grpc-10-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_canarymapping_grpc_-5",
                        "namespace": "plain-namespace",
                        "service": "plain-canarymapping-grpc-10-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarymapping-grpc-10-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarymapping-grpc-10-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "6910bf0dbf9f4732effa69811adf477bb8c41cd7",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-canarymapping-grpc-10-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryMapping-GRPC-10",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryMapping-GRPC-10/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        23,
                        0,
                        "/CanaryMapping-GRPC-10/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryMapping-GRPC-10\nnamespace: plain-namespace\nprefix: /CanaryMapping-GRPC-10/\nservice: http://plain-canarymapping-grpc-10-grpc.plain-namespace\n",
                    "service": "http://plain-canarymapping-grpc-10-grpc.plain-namespace",
                    "weight": 100
                },
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarymapping-grpc-10-grpc-canary.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarymapping-grpc-10-grpc-canary.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarymapping-grpc-10-grpc-canary.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarymapping_grpc_10_grpc_canary_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarymapping-grpc-10-grpc-canary.plain-namespace.1",
                        "name": "cluster_http___plain_canarymapping_grpc_-4",
                        "namespace": "plain-namespace",
                        "service": "plain-canarymapping-grpc-10-grpc-canary.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarymapping-grpc-10-grpc-canary.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarymapping-grpc-10-grpc-canary.plain-namespace:80"
                        ]
                    },
                    "group_id": "6910bf0dbf9f4732effa69811adf477bb8c41cd7",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-canarymapping-grpc-10-grpc-canary.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryMapping-GRPC-10-canary",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryMapping-GRPC-10/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        23,
                        0,
                        "/CanaryMapping-GRPC-10/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryMapping-GRPC-10-canary\nnamespace: plain-namespace\nprefix: /CanaryMapping-GRPC-10/\nservice: http://plain-canarymapping-grpc-10-grpc-canary.plain-namespace\nweight: 10\n",
                    "service": "http://plain-canarymapping-grpc-10-grpc-canary.plain-namespace",
                    "weight": 10
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: CanaryMapping-GRPC-10-canary",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/CanaryMapping-GRPC-10/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryMapping-GRPC-10\nnamespace: plain-namespace\nprefix: /CanaryMapping-GRPC-10/\nservice: http://plain-canarymapping-grpc-10-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-canarymapping-http-0-http-canary.plain-namespace.1",
                "plain-canarymapping-http-0-http.plain-namespace.1"
            ],
            "_rkey": "plain-canarymapping-http-0-http-canary.plain-namespace.1",
            "group_id": "b57179e798f24bfec2749180adbbcff203155fac",
            "group_weight": [
                0,
                22,
                0,
                "/CanaryMapping-HTTP-0/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-canarymapping-http-0-http-canary.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarymapping-http-0-http.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarymapping-http-0-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarymapping-http-0-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarymapping_http_0_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarymapping-http-0-http.plain-namespace.1",
                        "name": "cluster_http___plain_canarymapping_http_-1",
                        "namespace": "plain-namespace",
                        "service": "plain-canarymapping-http-0-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarymapping-http-0-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarymapping-http-0-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "b57179e798f24bfec2749180adbbcff203155fac",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-canarymapping-http-0-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryMapping-HTTP-0",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryMapping-HTTP-0/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        22,
                        0,
                        "/CanaryMapping-HTTP-0/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryMapping-HTTP-0\nnamespace: plain-namespace\nprefix: /CanaryMapping-HTTP-0/\nservice: http://plain-canarymapping-http-0-http.plain-namespace\n",
                    "service": "http://plain-canarymapping-http-0-http.plain-namespace",
                    "weight": 100
                },
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarymapping-http-0-http-canary.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarymapping-http-0-http-canary.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarymapping-http-0-http-canary.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarymapping_http_0_http_canary_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarymapping-http-0-http-canary.plain-namespace.1",
                        "name": "cluster_http___plain_canarymapping_http_-0",
                        "namespace": "plain-namespace",
                        "service": "plain-canarymapping-http-0-http-canary.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarymapping-http-0-http-canary.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarymapping-http-0-http-canary.plain-namespace:80"
                        ]
                    },
                    "group_id": "b57179e798f24bfec2749180adbbcff203155fac",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-canarymapping-http-0-http-canary.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryMapping-HTTP-0-canary",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryMapping-HTTP-0/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        22,
                        0,
                        "/CanaryMapping-HTTP-0/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryMapping-HTTP-0-canary\nnamespace: plain-namespace\nprefix: /CanaryMapping-HTTP-0/\nservice: http://plain-canarymapping-http-0-http-canary.plain-namespace\nweight: 0\n",
                    "service": "http://plain-canarymapping-http-0-http-canary.plain-namespace",
                    "weight": 0
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: CanaryMapping-HTTP-0-canary",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/CanaryMapping-HTTP-0/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryMapping-HTTP-0\nnamespace: plain-namespace\nprefix: /CanaryMapping-HTTP-0/\nservice: http://plain-canarymapping-http-0-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-canarymapping-grpc-0-grpc-canary.plain-namespace.1",
                "plain-canarymapping-grpc-0-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-canarymapping-grpc-0-grpc-canary.plain-namespace.1",
            "group_id": "2da466e68225bc6b2e777b35554356bd136ed2a4",
            "group_weight": [
                0,
                22,
                0,
                "/CanaryMapping-GRPC-0/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-canarymapping-grpc-0-grpc-canary.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarymapping-grpc-0-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarymapping-grpc-0-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarymapping-grpc-0-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarymapping_grpc_0_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarymapping-grpc-0-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_canarymapping_grpc_-1",
                        "namespace": "plain-namespace",
                        "service": "plain-canarymapping-grpc-0-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarymapping-grpc-0-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarymapping-grpc-0-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "2da466e68225bc6b2e777b35554356bd136ed2a4",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-canarymapping-grpc-0-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryMapping-GRPC-0",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryMapping-GRPC-0/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        22,
                        0,
                        "/CanaryMapping-GRPC-0/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryMapping-GRPC-0\nnamespace: plain-namespace\nprefix: /CanaryMapping-GRPC-0/\nservice: http://plain-canarymapping-grpc-0-grpc.plain-namespace\n",
                    "service": "http://plain-canarymapping-grpc-0-grpc.plain-namespace",
                    "weight": 100
                },
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-canarymapping-grpc-0-grpc-canary.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-canarymapping-grpc-0-grpc-canary.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-canarymapping-grpc-0-grpc-canary.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_canarymapping_grpc_0_grpc_canary_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-canarymapping-grpc-0-grpc-canary.plain-namespace.1",
                        "name": "cluster_http___plain_canarymapping_grpc_-0",
                        "namespace": "plain-namespace",
                        "service": "plain-canarymapping-grpc-0-grpc-canary.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-canarymapping-grpc-0-grpc-canary.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-canarymapping-grpc-0-grpc-canary.plain-namespace:80"
                        ]
                    },
                    "group_id": "2da466e68225bc6b2e777b35554356bd136ed2a4",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-canarymapping-grpc-0-grpc-canary.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CanaryMapping-GRPC-0-canary",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/CanaryMapping-GRPC-0/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        22,
                        0,
                        "/CanaryMapping-GRPC-0/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryMapping-GRPC-0-canary\nnamespace: plain-namespace\nprefix: /CanaryMapping-GRPC-0/\nservice: http://plain-canarymapping-grpc-0-grpc-canary.plain-namespace\nweight: 0\n",
                    "service": "http://plain-canarymapping-grpc-0-grpc-canary.plain-namespace",
                    "weight": 0
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: CanaryMapping-GRPC-0-canary",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/CanaryMapping-GRPC-0/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: CanaryMapping-GRPC-0\nnamespace: plain-namespace\nprefix: /CanaryMapping-GRPC-0/\nservice: http://plain-canarymapping-grpc-0-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-hostredirectmapping-http.plain-namespace.1"
            ],
            "_rkey": "plain-hostredirectmapping-http.plain-namespace.1",
            "group_id": "fb00c5e23982e0448c77025c1fd82ec921b82ead",
            "group_weight": [
                0,
                21,
                0,
                "/HostRedirectMapping/",
                "GET"
            ],
            "headers": [],
            "host_redirect": {
                "_active": true,
                "_errored": false,
                "_rkey": "plain-hostredirectmapping-http.plain-namespace.1",
                "add_request_headers": {},
                "group_id": "fb00c5e23982e0448c77025c1fd82ec921b82ead",
                "headers": [],
                "host_redirect": true,
                "kind": "Mapping",
                "location": "plain-hostredirectmapping-http.plain-namespace.1",
                "metadata_labels": {
                    "kat-ambassador-id": "plain",
                    "scope": "AmbassadorTest"
                },
                "name": "HostRedirectMapping",
                "namespace": "plain-namespace",
                "precedence": 0,
                "prefix": "/HostRedirectMapping/",
                "resolver": "kubernetes-service",
                "rewrite": "/",
                "route_weight": [
                    0,
                    21,
                    0,
                    "/HostRedirectMapping/",
                    "GET"
                ],
                "serialization": "ambassador_id: plain\napiVersion: ambassador/v0\nhost_redirect: true\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: HostRedirectMapping\nnamespace: plain-namespace\nprefix: /HostRedirectMapping/\nservice: foobar.com\n",
                "service": "foobar.com"
            },
            "kind": "IRHTTPMappingGroup",
            "location": "plain-hostredirectmapping-http.plain-namespace.1",
            "name": "GROUP: HostRedirectMapping",
            "namespace": "plain-namespace",
            "prefix": "/HostRedirectMapping/",
            "rewrite": "/"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-http-http.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-http-http.plain-namespace.1",
            "group_id": "33904bb8c0eca30124056fb33b3150743976a896",
            "group_weight": [
                0,
                20,
                0,
                "/SimpleMapping-HTTP/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-http-http.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-http-http.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-http-http.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-http-http.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_http_http_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-http-http.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_http_-14",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-http-http.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-http-http.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-http-http.plain-namespace:80"
                        ]
                    },
                    "group_id": "33904bb8c0eca30124056fb33b3150743976a896",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-http-http.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-HTTP",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-HTTP/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        20,
                        0,
                        "/SimpleMapping-HTTP/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP/\nservice: http://plain-simplemapping-http-http.plain-namespace\n",
                    "service": "http://plain-simplemapping-http-http.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-HTTP",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-HTTP/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-HTTP\nnamespace: plain-namespace\nprefix: /SimpleMapping-HTTP/\nservice: http://plain-simplemapping-http-http.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "plain-simplemapping-grpc-grpc.plain-namespace.1"
            ],
            "_rkey": "plain-simplemapping-grpc-grpc.plain-namespace.1",
            "group_id": "5a8ee5e9c9350cae91a0dc6555dfd699a5260aee",
            "group_weight": [
                0,
                20,
                0,
                "/SimpleMapping-GRPC/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "plain-simplemapping-grpc-grpc.plain-namespace.1",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_rkey": "plain-simplemapping-grpc-grpc.plain-namespace.1",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "plain-simplemapping-grpc-grpc.plain-namespace",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 80,
                        "_referenced_by": [
                            "plain-simplemapping-grpc-grpc.plain-namespace.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_http___plain_simplemapping_grpc_grpc_plain_namespace_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "plain-simplemapping-grpc-grpc.plain-namespace.1",
                        "name": "cluster_http___plain_simplemapping_grpc_-14",
                        "namespace": "plain-namespace",
                        "service": "plain-simplemapping-grpc-grpc.plain-namespace",
                        "targets": [
                            {
                                "ip": "plain-simplemapping-grpc-grpc.plain-namespace",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://plain-simplemapping-grpc-grpc.plain-namespace:80"
                        ]
                    },
                    "group_id": "5a8ee5e9c9350cae91a0dc6555dfd699a5260aee",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "plain-simplemapping-grpc-grpc.plain-namespace.1",
                    "metadata_labels": {
                        "kat-ambassador-id": "plain",
                        "scope": "AmbassadorTest"
                    },
                    "name": "SimpleMapping-GRPC",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/SimpleMapping-GRPC/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        20,
                        0,
                        "/SimpleMapping-GRPC/",
                        "GET"
                    ],
                    "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC/\nservice: http://plain-simplemapping-grpc-grpc.plain-namespace\n",
                    "service": "http://plain-simplemapping-grpc-grpc.plain-namespace",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: SimpleMapping-GRPC",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/SimpleMapping-GRPC/",
            "rewrite": "/",
            "serialization": "ambassador_id: plain\napiVersion: ambassador/v1\nkind: Mapping\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: SimpleMapping-GRPC\nnamespace: plain-namespace\nprefix: /SimpleMapping-GRPC/\nservice: http://plain-simplemapping-grpc-grpc.plain-namespace\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "--internal--"
            ],
            "_rkey": "ir.ambassador",
            "group_id": "8de18501d2044fe30db225289b318d5fda913b64",
            "group_weight": [
                0,
                15,
                0,
                "/ambassador/v0/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "--internal--",
            "mappings": [
                {
                    "_active": true,
                    "_errored": false,
                    "_referenced_by": [
                        "--internal--"
                    ],
                    "_rkey": "ir.ambassador",
                    "add_request_headers": {},
                    "cluster": {
                        "_active": true,
                        "_errored": false,
                        "_hostname": "127.0.0.1",
                        "_is_sidecar": false,
                        "_namespace": "plain-namespace",
                        "_port": 8877,
                        "_referenced_by": [
                            "--internal--"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_127_0_0_1_8877_plain_namespace",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "--internal--",
                        "name": "cluster_127_0_0_1_8877_plain_namespace",
                        "namespace": "plain-namespace",
                        "service": "127.0.0.1:8877",
                        "targets": [
                            {
                                "ip": "127.0.0.1",
                                "port": 8877,
                                "target_kind": "IPaddr"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://127.0.0.1:8877"
                        ]
                    },
                    "group_id": "8de18501d2044fe30db225289b318d5fda913b64",
                    "headers": [],
                    "kind": "IRHTTPMapping",
                    "location": "--internal--",
                    "name": "internal_diagnostics_probe_mapping",
                    "namespace": "plain-namespace",
                    "precedence": 0,
                    "prefix": "/ambassador/v0/",
                    "resolver": "kubernetes-service",
                    "rewrite": "/ambassador/v0/",
                    "route_weight": [
                        0,
                        15,
                        0,
                        "/ambassador/v0/",
                        "GET"
                    ],
                    "service": "127.0.0.1:8877",
                    "timeout_ms": 10000,
                    "weight": 100
                }
            ],
            "name": "GROUP: internal_diagnostics_probe_mapping",
            "namespace": "plain-namespace",
            "precedence": 0,
            "prefix": "/ambassador/v0/",
            "rewrite": "/ambassador/v0/",
            "timeout_ms": 10000
        }
    ],
    "grpc_services": {},
    "hosts": [],
    "identity": {
        "ambassador_id": "plain",
        "ambassador_namespace": "plain-namespace",
        "ambassador_nodename": "plain-plain-namespace"
    },
    "k8s_status_updates": {
        "hostheadermappingingress-grpc-0-0.plain-namespace": [
            "Mapping",
            "plain-namespace",
            {
                "state": "Running"
            }
        ],
        "hostheadermappingingress-grpc.plain-namespace": [
            "Ingress",
            "plain-namespace",
            {
                "loadBalancer": {}
            }
        ],
        "hostheadermappingingress-http-0-0.plain-namespace": [
            "Mapping",
            "plain-namespace",
            {
                "state": "Running"
            }
        ],
        "hostheadermappingingress-http.plain-namespace": [
            "Ingress",
            "plain-namespace",
            {
                "loadBalancer": {}
            }
        ],
        "simpleingresswithannotations-grpc-0-0.plain-namespace": [
            "Mapping",
            "plain-namespace",
            {
                "state": "Running"
            }
        ],
        "simpleingresswithannotations-grpc.plain-namespace": [
            "Ingress",
            "plain-namespace",
            {
                "loadBalancer": {}
            }
        ],
        "simpleingresswithannotations-http-0-0.plain-namespace": [
            "Mapping",
            "plain-namespace",
            {
                "state": "Running"
            }
        ],
        "simpleingresswithannotations-http.plain-namespace": [
            "Ingress",
            "plain-namespace",
            {
                "loadBalancer": {}
            }
        ],
        "simplemappingingress-grpc-0-0.plain-namespace": [
            "Mapping",
            "plain-namespace",
            {
                "state": "Running"
            }
        ],
        "simplemappingingress-grpc.plain-namespace": [
            "Ingress",
            "plain-namespace",
            {
                "loadBalancer": {}
            }
        ],
        "simplemappingingress-http-0-0.plain-namespace": [
            "Mapping",
            "plain-namespace",
            {
                "state": "Running"
            }
        ],
        "simplemappingingress-http.plain-namespace": [
            "Ingress",
            "plain-namespace",
            {
                "loadBalancer": {}
            }
        ]
    },
    "listeners": [
        {
            "_active": true,
            "_errored": false,
            "_rkey": "ir.listener",
            "hostname": "*",
            "insecure_action": "Route",
            "kind": "IRListener",
            "location": "--internal--",
            "name": "ir.listener",
            "namespace": "plain-namespace",
            "redirect_listener": false,
            "secure_action": "Route",
            "service_port": 8080,
            "use_proxy_proto": false
        }
    ],
    "services": {
        "k8s-plain-addreqheadersmapping-grpc-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-addreqheadersmapping-grpc-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-addreqheadersmapping-grpc-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-addreqheadersmapping-grpc-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-addreqheadersmapping-grpc-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-addreqheadersmapping-http-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-addreqheadersmapping-http-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-addreqheadersmapping-http-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-addreqheadersmapping-http-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-addreqheadersmapping-http-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-addrespheadersmapping-grpc-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-addrespheadersmapping-grpc-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-addrespheadersmapping-grpc-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-addrespheadersmapping-grpc-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-addrespheadersmapping-grpc-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-addrespheadersmapping-http-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-addrespheadersmapping-http-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-addrespheadersmapping-http-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-addrespheadersmapping-http-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-addrespheadersmapping-http-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-admin-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-admin-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest",
                "service": "plain-admin"
            },
            "name": "plain-admin",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-admin-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\n  service: plain-admin\nname: plain-admin\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-grpc-0-grpc-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-grpc-0-grpc-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-grpc-0-grpc-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-grpc-0-grpc-canary-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-grpc-0-grpc-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-grpc-0-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-grpc-0-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-grpc-0-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-grpc-0-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-grpc-0-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-grpc-10-grpc-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-grpc-10-grpc-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-grpc-10-grpc-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-grpc-10-grpc-canary-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-grpc-10-grpc-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-grpc-10-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-grpc-10-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-grpc-10-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-grpc-10-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-grpc-10-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-grpc-100-grpc-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-grpc-100-grpc-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-grpc-100-grpc-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-grpc-100-grpc-canary-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-grpc-100-grpc-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-grpc-100-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-grpc-100-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-grpc-100-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-grpc-100-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-grpc-100-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-grpc-50-grpc-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-grpc-50-grpc-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-grpc-50-grpc-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-grpc-50-grpc-canary-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-grpc-50-grpc-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-grpc-50-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-grpc-50-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-grpc-50-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-grpc-50-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-grpc-50-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-http-0-http-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-http-0-http-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-http-0-http-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-http-0-http-canary-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-http-0-http-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-http-0-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-http-0-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-http-0-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-http-0-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-http-0-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-http-10-http-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-http-10-http-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-http-10-http-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-http-10-http-canary-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-http-10-http-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-http-10-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-http-10-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-http-10-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-http-10-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-http-10-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-http-100-http-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-http-100-http-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-http-100-http-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-http-100-http-canary-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-http-100-http-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-http-100-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-http-100-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-http-100-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-http-100-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-http-100-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-http-50-http-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-http-50-http-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-http-50-http-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-http-50-http-canary-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-http-50-http-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-http-50-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-http-50-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-http-50-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-http-50-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-http-50-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-grpc-0-grpc-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-grpc-0-grpc-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-grpc-0-grpc-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-grpc-0-grpc-canary-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-grpc-0-grpc-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-grpc-0-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-grpc-0-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-grpc-0-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-grpc-0-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-grpc-0-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-grpc-10-grpc-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-grpc-10-grpc-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-grpc-10-grpc-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-grpc-10-grpc-canary-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-grpc-10-grpc-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-grpc-10-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-grpc-10-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-grpc-10-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-grpc-10-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-grpc-10-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-grpc-100-grpc-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-grpc-100-grpc-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-grpc-100-grpc-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-grpc-100-grpc-canary-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-grpc-100-grpc-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-grpc-100-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-grpc-100-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-grpc-100-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-grpc-100-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-grpc-100-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-grpc-50-grpc-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-grpc-50-grpc-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-grpc-50-grpc-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-grpc-50-grpc-canary-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-grpc-50-grpc-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-grpc-50-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-grpc-50-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-grpc-50-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-grpc-50-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-grpc-50-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-http-0-http-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-http-0-http-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-http-0-http-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-http-0-http-canary-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-http-0-http-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-http-0-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-http-0-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-http-0-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-http-0-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-http-0-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-http-10-http-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-http-10-http-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-http-10-http-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-http-10-http-canary-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-http-10-http-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-http-10-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-http-10-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-http-10-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-http-10-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-http-10-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-http-100-http-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-http-100-http-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-http-100-http-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-http-100-http-canary-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-http-100-http-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-http-100-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-http-100-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-http-100-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-http-100-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-http-100-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-http-50-http-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-http-50-http-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-http-50-http-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-http-50-http-canary-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-http-50-http-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-http-50-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-http-50-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-http-50-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-http-50-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-http-50-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-headerroutingtest-grpc-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-headerroutingtest-grpc-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-headerroutingtest-grpc-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-headerroutingtest-grpc-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-headerroutingtest-grpc-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-headerroutingtest-grpc-grpc-target2-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-headerroutingtest-grpc-grpc-target2-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-headerroutingtest-grpc-grpc-target2",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-headerroutingtest-grpc-grpc-target2-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-headerroutingtest-grpc-grpc-target2\nnamespace: plain-namespace\n"
        },
        "k8s-plain-headerroutingtest-http-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-headerroutingtest-http-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-headerroutingtest-http-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-headerroutingtest-http-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-headerroutingtest-http-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-headerroutingtest-http-http-target2-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-headerroutingtest-http-http-target2-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-headerroutingtest-http-http-target2",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-headerroutingtest-http-http-target2-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-headerroutingtest-http-http-target2\nnamespace: plain-namespace\n"
        },
        "k8s-plain-hostheadermapping-grpc-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-hostheadermapping-grpc-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-hostheadermapping-grpc-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-hostheadermapping-grpc-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-hostheadermapping-grpc-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-hostheadermapping-http-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-hostheadermapping-http-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-hostheadermapping-http-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-hostheadermapping-http-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-hostheadermapping-http-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-hostheadermappingingress-grpc-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-hostheadermappingingress-grpc-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-hostheadermappingingress-grpc-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-hostheadermappingingress-grpc-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-hostheadermappingingress-grpc-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-hostheadermappingingress-http-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-hostheadermappingingress-http-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-hostheadermappingingress-http-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-hostheadermappingingress-http-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-hostheadermappingingress-http-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-hostredirectmapping-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-hostredirectmapping-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-hostredirectmapping-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-hostredirectmapping-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-hostredirectmapping-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-invalidportmapping-grpc-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-invalidportmapping-grpc-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-invalidportmapping-grpc-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-invalidportmapping-grpc-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-invalidportmapping-grpc-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-invalidportmapping-http-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-invalidportmapping-http-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-invalidportmapping-http-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-invalidportmapping-http-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-invalidportmapping-http-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-plain-namespace",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain\nnamespace: plain-namespace\n"
        },
        "k8s-plain-removereqheadersmapping-grpc-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-removereqheadersmapping-grpc-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-removereqheadersmapping-grpc-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-removereqheadersmapping-grpc-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-removereqheadersmapping-grpc-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-removereqheadersmapping-http-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-removereqheadersmapping-http-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-removereqheadersmapping-http-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-removereqheadersmapping-http-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-removereqheadersmapping-http-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simpleingresswithannotations-grpc-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simpleingresswithannotations-grpc-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simpleingresswithannotations-grpc-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simpleingresswithannotations-grpc-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simpleingresswithannotations-grpc-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simpleingresswithannotations-http-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simpleingresswithannotations-http-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simpleingresswithannotations-http-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simpleingresswithannotations-http-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simpleingresswithannotations-http-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-all-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-all-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-all-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-all-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-all-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-autohostrewrite-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-autohostrewrite-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-autohostrewrite-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-autohostrewrite-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-autohostrewrite-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-casesensitive-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-casesensitive-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-casesensitive-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-casesensitive-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-casesensitive-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-cors-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-cors-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-cors-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-cors-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-cors-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-removeresponseheaders-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-removeresponseheaders-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-removeresponseheaders-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-removeresponseheaders-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-removeresponseheaders-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-rewrite-foo-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-rewrite-foo-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-rewrite-foo-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-rewrite-foo-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-rewrite-foo-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-rewrite-slash-foo-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-rewrite-slash-foo-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-rewrite-slash-foo-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-rewrite-slash-foo-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-rewrite-slash-foo-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-usewebsocket-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-usewebsocket-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-usewebsocket-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-usewebsocket-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-usewebsocket-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-addrequestheaders-aoo-tyu-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-addrequestheaders-aoo-tyu-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-addrequestheaders-aoo-tyu-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-addrequestheaders-aoo-tyu-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-addrequestheaders-aoo-tyu-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-addrequestheaders-foo-bar-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-addrequestheaders-foo-bar-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-addrequestheaders-foo-bar-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-addrequestheaders-foo-bar-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-addrequestheaders-foo-bar-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-addrequestheaders-moo-arf-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-addrequestheaders-moo-arf-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-addrequestheaders-moo-arf-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-addrequestheaders-moo-arf-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-addrequestheaders-moo-arf-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-addrequestheaders-xoo-dwe-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-addrequestheaders-xoo-dwe-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-addrequestheaders-xoo-dwe-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-addrequestheaders-xoo-dwe-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-addrequestheaders-xoo-dwe-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-addrequestheaders-zoo-bar-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-addrequestheaders-zoo-bar-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-addrequestheaders-zoo-bar-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-addrequestheaders-zoo-bar-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-addrequestheaders-zoo-bar-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-addresponseheaders-aoo-tyu-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-addresponseheaders-aoo-tyu-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-addresponseheaders-aoo-tyu-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-addresponseheaders-aoo-tyu-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-addresponseheaders-aoo-tyu-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-addresponseheaders-foo-bar-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-addresponseheaders-foo-bar-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-addresponseheaders-foo-bar-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-addresponseheaders-foo-bar-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-addresponseheaders-foo-bar-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-addresponseheaders-moo-arf-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-addresponseheaders-moo-arf-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-addresponseheaders-moo-arf-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-addresponseheaders-moo-arf-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-addresponseheaders-moo-arf-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-addresponseheaders-xoo-dwe-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-addresponseheaders-xoo-dwe-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-addresponseheaders-xoo-dwe-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-addresponseheaders-xoo-dwe-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-addresponseheaders-xoo-dwe-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-addresponseheaders-zoo-bar-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-addresponseheaders-zoo-bar-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-addresponseheaders-zoo-bar-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-addresponseheaders-zoo-bar-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-addresponseheaders-zoo-bar-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-all-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-all-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-all-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-all-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-all-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-autohostrewrite-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-autohostrewrite-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-autohostrewrite-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-autohostrewrite-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-autohostrewrite-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-casesensitive-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-casesensitive-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-casesensitive-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-casesensitive-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-casesensitive-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-cors-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-cors-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-cors-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-cors-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-cors-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-removeresponseheaders-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-removeresponseheaders-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-removeresponseheaders-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-removeresponseheaders-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-removeresponseheaders-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-rewrite-foo-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-rewrite-foo-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-rewrite-foo-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-rewrite-foo-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-rewrite-foo-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-rewrite-slash-foo-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-rewrite-slash-foo-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-rewrite-slash-foo-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-rewrite-slash-foo-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-rewrite-slash-foo-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-usewebsocket-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-usewebsocket-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-usewebsocket-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-usewebsocket-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-usewebsocket-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemappingingress-grpc-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemappingingress-grpc-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemappingingress-grpc-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemappingingress-grpc-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemappingingress-grpc-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemappingingress-http-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemappingingress-http-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemappingingress-http-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemappingingress-http-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemappingingress-http-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-tlsorigination-grpc-explicit-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-tlsorigination-grpc-explicit-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-tlsorigination-grpc-explicit-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-tlsorigination-grpc-explicit-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-tlsorigination-grpc-explicit-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-tlsorigination-grpc-implicit-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-tlsorigination-grpc-implicit-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-tlsorigination-grpc-implicit-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-tlsorigination-grpc-implicit-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-tlsorigination-grpc-implicit-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-tlsorigination-http-explicit-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-tlsorigination-http-explicit-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-tlsorigination-http-explicit-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-tlsorigination-http-explicit-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-tlsorigination-http-explicit-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-tlsorigination-http-implicit-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-tlsorigination-http-implicit-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-tlsorigination-http-implicit-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-tlsorigination-http-implicit-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-tlsorigination-http-implicit-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-websocketmapping-grpc-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-websocketmapping-grpc-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-websocketmapping-grpc-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-websocketmapping-grpc-grpc-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-websocketmapping-grpc-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-websocketmapping-http-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "plain",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-websocketmapping-http-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-websocketmapping-http-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-websocketmapping-http-http-plain-namespace",
            "serialization": "ambassador_id: plain\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-websocketmapping-http-http\nnamespace: plain-namespace\n"
        }
    },
    "tls_contexts": [
        {
            "_active": true,
            "_ambassador_enabled": true,
            "_errored": false,
            "_referenced_by": [
                "plain-tlsorigination-grpc-explicit-grpc.plain-namespace.1",
                "plain-tlsorigination-http-explicit-http.plain-namespace.1"
            ],
            "_rkey": "ir.no-cert-upstream",
            "is_fallback": false,
            "kind": "null-TLS-context",
            "location": "ir.no-cert-upstream",
            "name": "no-cert-upstream",
            "namespace": "plain-namespace",
            "secret_info": {}
        }
    ]
}