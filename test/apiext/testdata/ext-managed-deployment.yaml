apiVersion: v1
kind: Service
metadata:
  name: emissary-apiext
  namespace: emissary-system
  labels:
    app.kubernetes.io/instance: emissary-apiext
    app.kubernetes.io/managed-by: kubectl_apply_-f_emissary-apiext.yaml
    app.kubernetes.io/name: emissary-apiext
    app.kubernetes.io/part-of: emissary-apiext
spec:
  type: ClusterIP
  ports:
    - name: https
      port: 443
      targetPort: https
  selector:
    app.kubernetes.io/instance: emissary-apiext
    app.kubernetes.io/name: emissary-apiext
    app.kubernetes.io/part-of: emissary-apiext
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: emissary-apiext
  namespace: emissary-system
  labels:
    app.kubernetes.io/instance: emissary-apiext
    app.kubernetes.io/managed-by: kubectl_apply_-f_emissary-apiext.yaml
    app.kubernetes.io/name: emissary-apiext
    app.kubernetes.io/part-of: emissary-apiext
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: emissary-apiext
      app.kubernetes.io/name: emissary-apiext
      app.kubernetes.io/part-of: emissary-apiext
  replicas: 3
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: emissary-apiext
        app.kubernetes.io/managed-by: kubectl_apply_-f_emissary-apiext.yaml
        app.kubernetes.io/name: emissary-apiext
        app.kubernetes.io/part-of: emissary-apiext
    spec:
      serviceAccountName: emissary-apiext
      containers:
        - name: emissary-apiext
          image: e2e-registry:10000/apiext:latest
          imagePullPolicy: Always
          command: [ "apiext", "emissary-apiext" ]
          env:
            - name: DISABLE_CRD_MANAGEMENT
              value: "true"
            - name: DISABLE_CA_MANAGEMENT
              value: "true"
          ports:
            - name: http
              containerPort: 8080
            - name: https
              containerPort: 8443
          startupProbe:
            httpGet:
              path: /probes/live
              port: 8080
            failureThreshold: 10
            periodSeconds: 3
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /probes/live
              port: 8080
            periodSeconds: 3
            failureThreshold: 3
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /probes/ready
              port: 8080
            periodSeconds: 3
            failureThreshold: 3
