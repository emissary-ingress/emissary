# @TEMPLATE@
---
apiVersion: v1
kind: Namespace
metadata:
  name: docker-registry
---
apiVersion: v1
kind: Service
metadata:
  namespace: docker-registry
  name: registry
spec:
  type: NodePort
  selector:
    app: registry
  ports:
    - port: 5000
      nodePort: 31000
---
apiVersion: apps/v1
# XXX: Avoid using a StatefulSet if possible, because `kubeapply`
# doesn't know how to wait for them.
kind: {{ if env "DOCKER_K8S_ENABLE_PVC" | eq "true" }}StatefulSet{{ else }}Deployment{{ end }}
metadata:
  namespace: docker-registry
  name: registry
spec:
  replicas: 1
{{ if env "DOCKER_K8S_ENABLE_PVC" | eq "true" }} # XXX: StatefulSet
  serviceName: registry
{{ end }}
  selector:
    matchLabels:
      app: registry
  template:
    metadata:
      name: registry
      labels:
        app: registry
    spec:
      containers:
        - name: registry
          image: docker.io/library/registry:2
          ports:
            - containerPort: 5000
          volumeMounts:
            - mountPath: /var/lib/registry
              name: registry-data
      volumes:
        - name: registry-data
{{ if env "DOCKER_K8S_ENABLE_PVC" | eq "true" | not }}
          # On kubernaut.io clusters, there is only 1 node, so a
          # hostPath is fine.
          hostPath:
            path: /var/lib/registry
{{ else }}
          persistentVolumeClaim:
            claimName: registry-data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: registry-data
  namespace: docker-registry
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
{{ end }}
