######################################################################
# Create a ClusterRole+ClusterRoleBinding+ServiceAccount for
# ambassador-pro-oauth that has access to the CRDs that we will
# create for it below
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: ambassador-pro-oauth
rules:
- apiGroups: ["getambassador.io"]
  # Custom resources. See custom definitions below for more details.
  resources:
  - policies
  - tenants
  verbs: ["get", "list", "watch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ambassador-pro-oauth
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: ambassador-pro-oauth
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ambassador-pro-oauth
subjects:
- kind: ServiceAccount
  name: ambassador-pro-oauth
  namespace: default


######################################################################
# Create a CRDs used to configure ambassador-pro-oauth
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: policies.getambassador.io
spec:
  group: getambassador.io
  version: v1beta1
  versions:
    - name: v1beta1
      served: true
      storage: true
  scope: Namespaced
  names:
    plural: policies
    singular: policy
    kind: Policy
    shortNames:
    - pol
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: tenants.getambassador.io
spec:
  group: getambassador.io
  version: v1beta1
  versions:
    - name: v1beta1
      served: true
      storage: true
  scope: Namespaced
  names:
    plural: tenants
    singular: tenant
    kind: Tenant
    shortNames:
    - ten


######################################################################
# Create the ambassador-pro-oauth Service+Deployment
---
apiVersion: v1
kind: Service
metadata:
  name: ambassador-pro-oauth
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v0
      kind:  AuthService
      name:  authentication
      auth_service: ambassador-pro-oauth
      allowed_headers:
       - "Authorization"
       - "Client-Id"
       - "Client-Secret"
       - "X-Forwarded-Proto"
spec:
  selector:
    service: ambassador-pro-oauth
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ambassador-pro-oauth
spec:
  replicas: 1
  selector:
    matchLabels:
      service: ambassador-pro-oauth
  template:
    metadata:
      labels:
        service: ambassador-pro-oauth
    spec:
      serviceAccountName: ambassador-pro-oauth
      containers:
      - name: ambassador-pro-oauth
        image: quay.io/gsagula/auth-service:multi
        ports:
        - containerPort: 8080
        env:
          # Auth provider's abolute url: {scheme}://{host}
          - name: AUTH_PROVIDER_URL
            value: https://example.auth0.com
      imagePullSecrets:
      - name: ambassador-pro-registry-credentials
