# GENERATED FILE: edits made by hand will not be preserved.
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: emissary-ingress
    app.kubernetes.io/managed-by: getambassador.io
    app.kubernetes.io/name: emissary-ingress-agent
    app.kubernetes.io/part-of: emissary-ingress
    product: aes
  name: emissary-ingress-agent
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: emissary-ingress
    app.kubernetes.io/managed-by: getambassador.io
    app.kubernetes.io/name: emissary-ingress-agent
    app.kubernetes.io/part-of: emissary-ingress
    product: aes
  name: emissary-ingress-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: emissary-ingress-agent
subjects:
- kind: ServiceAccount
  name: emissary-ingress-agent
  namespace: default
---
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      rbac.getambassador.io/role-group: emissary-ingress-agent
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: emissary-ingress
    app.kubernetes.io/managed-by: getambassador.io
    app.kubernetes.io/name: emissary-ingress-agent
    app.kubernetes.io/part-of: emissary-ingress
    product: aes
  name: emissary-ingress-agent
rules: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: emissary-ingress
    app.kubernetes.io/managed-by: getambassador.io
    app.kubernetes.io/name: emissary-ingress-agent
    app.kubernetes.io/part-of: emissary-ingress
    product: aes
    rbac.getambassador.io/role-group: emissary-ingress-agent
  name: emissary-ingress-agent-pods
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: emissary-ingress
    app.kubernetes.io/managed-by: getambassador.io
    app.kubernetes.io/name: emissary-ingress-agent
    app.kubernetes.io/part-of: emissary-ingress
    product: aes
    rbac.getambassador.io/role-group: emissary-ingress-agent
  name: emissary-ingress-agent-rollouts
rules:
- apiGroups:
  - argoproj.io
  resources:
  - rollouts
  - rollouts/status
  verbs:
  - get
  - list
  - watch
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: emissary-ingress
    app.kubernetes.io/managed-by: getambassador.io
    app.kubernetes.io/name: emissary-ingress-agent
    app.kubernetes.io/part-of: emissary-ingress
    product: aes
    rbac.getambassador.io/role-group: emissary-ingress-agent
  name: emissary-ingress-agent-applications
rules:
- apiGroups:
  - argoproj.io
  resources:
  - applications
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: emissary-ingress
    app.kubernetes.io/managed-by: getambassador.io
    app.kubernetes.io/name: emissary-ingress-agent
    app.kubernetes.io/part-of: emissary-ingress
    product: aes
    rbac.getambassador.io/role-group: emissary-ingress-agent
  name: emissary-ingress-agent-deployments
rules:
- apiGroups:
  - apps
  - extensions
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: emissary-ingress
    app.kubernetes.io/managed-by: getambassador.io
    app.kubernetes.io/name: emissary-ingress-agent
    app.kubernetes.io/part-of: emissary-ingress
    product: aes
    rbac.getambassador.io/role-group: emissary-ingress-agent
  name: emissary-ingress-agent-endpoints
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: emissary-ingress
    app.kubernetes.io/managed-by: getambassador.io
    app.kubernetes.io/name: emissary-ingress-agent
    app.kubernetes.io/part-of: emissary-ingress
    product: aes
    rbac.getambassador.io/role-group: emissary-ingress-agent
  name: emissary-ingress-agent-configmaps
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: emissary-ingress
    app.kubernetes.io/managed-by: getambassador.io
    app.kubernetes.io/name: emissary-ingress-agent
    app.kubernetes.io/part-of: emissary-ingress
    product: aes
  name: emissary-ingress-agent-config
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: emissary-ingress
    app.kubernetes.io/managed-by: getambassador.io
    app.kubernetes.io/name: emissary-ingress-agent
    app.kubernetes.io/part-of: emissary-ingress
    product: aes
  name: emissary-ingress-agent-config
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: emissary-ingress-agent-config
subjects:
- kind: ServiceAccount
  name: emissary-ingress-agent
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: emissary-ingress
    app.kubernetes.io/managed-by: getambassador.io
    app.kubernetes.io/name: emissary-ingress-agent
    app.kubernetes.io/part-of: emissary-ingress
    product: aes
  name: emissary-ingress-agent
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: emissary-ingress
      app.kubernetes.io/name: emissary-ingress-agent
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: emissary-ingress
        app.kubernetes.io/managed-by: getambassador.io
        app.kubernetes.io/name: emissary-ingress-agent
        app.kubernetes.io/part-of: emissary-ingress
        product: aes
    spec:
      containers:
      - command:
        - agent
        env:
        - name: AGENT_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AGENT_CONFIG_RESOURCE_NAME
          value: emissary-ingress-agent-cloud-token
        - name: RPC_CONNECTION_ADDRESS
          value: https://app.getambassador.io/
        - name: AES_SNAPSHOT_URL
          value: http://emissary-ingress-admin.default:8005/snapshot-external
        image: $imageRepo$:$version$
        imagePullPolicy: IfNotPresent
        name: agent
        ports:
        - containerPort: 8080
          name: http
      serviceAccountName: emissary-ingress-agent
