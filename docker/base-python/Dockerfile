###
# This dockerfile builds the base image for the builder container. See
# the main Dockerfile for more information about what the builder
# container is and how code in this repo is built.
#
# Originally this base was built as part of the builder container's
# bootstrap process. We discovered that minor network interruptions
# would break these steps, and such interruptions were common on our
# cloud CI system. We decided to separate out these steps so that any
# one of them is much less likely to be the cause of a network-related
# failure, i.e. a flake.
#
# See the comment before the build_builder_base() function in builder.sh
# to see when and how often this base image is built and pushed.
##

########################################
# Third-party code
########################################

FROM docker.io/frolvlad/alpine-glibc:alpine-3.15

RUN apk --no-cache add \
    bash \
    gcc \
    make \
    musl-dev \
    curl \
    cython \
    docker-cli \
    git \
    iptables \
    jq \
    libcap \
    libcap-dev \
    libffi-dev \
    ncurses \
    openssl-dev \
    python3=~3.9.7 \
    py3-pip=~20.3.4 \
    py3-yaml=~5.4.1 \
    python3-dev \
    rust \
    cargo \
    patchelf \
    rsync \
    sudo \
    && ln -s /usr/bin/python3 /usr/bin/python \
    && chmod u+s $(which docker)

# Consult
# https://github.com/jazzband/pip-tools/#versions-and-compatibility to
# select a pip-tools version that corresponds to the 'py3-pip' and
# 'python3' versions above.
RUN pip3 install pip-tools==6.3.1

# orjson is special; the wheels on PyPI rely on glibc, so we need to
# use cargo/rustc/patchelf to build a musl-compatible version.
RUN pip3 install orjson==3.6.6
