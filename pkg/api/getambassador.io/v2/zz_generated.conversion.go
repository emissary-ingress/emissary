//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Copyright 2021 Ambassador Labs.  All rights reserved
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by conversion-gen. DO NOT EDIT.

package v2

import (
	v3alpha1 "github.com/datawire/ambassador/v2/pkg/api/getambassador.io/v3alpha1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*ACMEProviderSpec)(nil), (*v3alpha1.ACMEProviderSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_ACMEProviderSpec_To_v3alpha1_ACMEProviderSpec(a.(*ACMEProviderSpec), b.(*v3alpha1.ACMEProviderSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.ACMEProviderSpec)(nil), (*ACMEProviderSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_ACMEProviderSpec_To_v2_ACMEProviderSpec(a.(*v3alpha1.ACMEProviderSpec), b.(*ACMEProviderSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AdditionalLogHeaders)(nil), (*v3alpha1.AdditionalLogHeaders)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_AdditionalLogHeaders_To_v3alpha1_AdditionalLogHeaders(a.(*AdditionalLogHeaders), b.(*v3alpha1.AdditionalLogHeaders), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.AdditionalLogHeaders)(nil), (*AdditionalLogHeaders)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_AdditionalLogHeaders_To_v2_AdditionalLogHeaders(a.(*v3alpha1.AdditionalLogHeaders), b.(*AdditionalLogHeaders), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AuthService)(nil), (*v3alpha1.AuthService)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_AuthService_To_v3alpha1_AuthService(a.(*AuthService), b.(*v3alpha1.AuthService), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.AuthService)(nil), (*AuthService)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_AuthService_To_v2_AuthService(a.(*v3alpha1.AuthService), b.(*AuthService), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AuthServiceIncludeBody)(nil), (*v3alpha1.AuthServiceIncludeBody)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_AuthServiceIncludeBody_To_v3alpha1_AuthServiceIncludeBody(a.(*AuthServiceIncludeBody), b.(*v3alpha1.AuthServiceIncludeBody), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.AuthServiceIncludeBody)(nil), (*AuthServiceIncludeBody)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_AuthServiceIncludeBody_To_v2_AuthServiceIncludeBody(a.(*v3alpha1.AuthServiceIncludeBody), b.(*AuthServiceIncludeBody), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AuthServiceList)(nil), (*v3alpha1.AuthServiceList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_AuthServiceList_To_v3alpha1_AuthServiceList(a.(*AuthServiceList), b.(*v3alpha1.AuthServiceList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.AuthServiceList)(nil), (*AuthServiceList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_AuthServiceList_To_v2_AuthServiceList(a.(*v3alpha1.AuthServiceList), b.(*AuthServiceList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AuthServiceStatusOnError)(nil), (*v3alpha1.AuthServiceStatusOnError)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_AuthServiceStatusOnError_To_v3alpha1_AuthServiceStatusOnError(a.(*AuthServiceStatusOnError), b.(*v3alpha1.AuthServiceStatusOnError), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.AuthServiceStatusOnError)(nil), (*AuthServiceStatusOnError)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_AuthServiceStatusOnError_To_v2_AuthServiceStatusOnError(a.(*v3alpha1.AuthServiceStatusOnError), b.(*AuthServiceStatusOnError), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*CircuitBreaker)(nil), (*v3alpha1.CircuitBreaker)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_CircuitBreaker_To_v3alpha1_CircuitBreaker(a.(*CircuitBreaker), b.(*v3alpha1.CircuitBreaker), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.CircuitBreaker)(nil), (*CircuitBreaker)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_CircuitBreaker_To_v2_CircuitBreaker(a.(*v3alpha1.CircuitBreaker), b.(*CircuitBreaker), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ConsulResolver)(nil), (*v3alpha1.ConsulResolver)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_ConsulResolver_To_v3alpha1_ConsulResolver(a.(*ConsulResolver), b.(*v3alpha1.ConsulResolver), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.ConsulResolver)(nil), (*ConsulResolver)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_ConsulResolver_To_v2_ConsulResolver(a.(*v3alpha1.ConsulResolver), b.(*ConsulResolver), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ConsulResolverList)(nil), (*v3alpha1.ConsulResolverList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_ConsulResolverList_To_v3alpha1_ConsulResolverList(a.(*ConsulResolverList), b.(*v3alpha1.ConsulResolverList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.ConsulResolverList)(nil), (*ConsulResolverList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_ConsulResolverList_To_v2_ConsulResolverList(a.(*v3alpha1.ConsulResolverList), b.(*ConsulResolverList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ConsulResolverSpec)(nil), (*v3alpha1.ConsulResolverSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_ConsulResolverSpec_To_v3alpha1_ConsulResolverSpec(a.(*ConsulResolverSpec), b.(*v3alpha1.ConsulResolverSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.ConsulResolverSpec)(nil), (*ConsulResolverSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_ConsulResolverSpec_To_v2_ConsulResolverSpec(a.(*v3alpha1.ConsulResolverSpec), b.(*ConsulResolverSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*DevPortal)(nil), (*v3alpha1.DevPortal)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_DevPortal_To_v3alpha1_DevPortal(a.(*DevPortal), b.(*v3alpha1.DevPortal), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.DevPortal)(nil), (*DevPortal)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_DevPortal_To_v2_DevPortal(a.(*v3alpha1.DevPortal), b.(*DevPortal), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*DevPortalContentSpec)(nil), (*v3alpha1.DevPortalContentSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_DevPortalContentSpec_To_v3alpha1_DevPortalContentSpec(a.(*DevPortalContentSpec), b.(*v3alpha1.DevPortalContentSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.DevPortalContentSpec)(nil), (*DevPortalContentSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_DevPortalContentSpec_To_v2_DevPortalContentSpec(a.(*v3alpha1.DevPortalContentSpec), b.(*DevPortalContentSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*DevPortalDocsSpec)(nil), (*v3alpha1.DevPortalDocsSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_DevPortalDocsSpec_To_v3alpha1_DevPortalDocsSpec(a.(*DevPortalDocsSpec), b.(*v3alpha1.DevPortalDocsSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.DevPortalDocsSpec)(nil), (*DevPortalDocsSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_DevPortalDocsSpec_To_v2_DevPortalDocsSpec(a.(*v3alpha1.DevPortalDocsSpec), b.(*DevPortalDocsSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*DevPortalList)(nil), (*v3alpha1.DevPortalList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_DevPortalList_To_v3alpha1_DevPortalList(a.(*DevPortalList), b.(*v3alpha1.DevPortalList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.DevPortalList)(nil), (*DevPortalList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_DevPortalList_To_v2_DevPortalList(a.(*v3alpha1.DevPortalList), b.(*DevPortalList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*DevPortalSearchSpec)(nil), (*v3alpha1.DevPortalSearchSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_DevPortalSearchSpec_To_v3alpha1_DevPortalSearchSpec(a.(*DevPortalSearchSpec), b.(*v3alpha1.DevPortalSearchSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.DevPortalSearchSpec)(nil), (*DevPortalSearchSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_DevPortalSearchSpec_To_v2_DevPortalSearchSpec(a.(*v3alpha1.DevPortalSearchSpec), b.(*DevPortalSearchSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*DevPortalSelectorSpec)(nil), (*v3alpha1.DevPortalSelectorSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_DevPortalSelectorSpec_To_v3alpha1_DevPortalSelectorSpec(a.(*DevPortalSelectorSpec), b.(*v3alpha1.DevPortalSelectorSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.DevPortalSelectorSpec)(nil), (*DevPortalSelectorSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_DevPortalSelectorSpec_To_v2_DevPortalSelectorSpec(a.(*v3alpha1.DevPortalSelectorSpec), b.(*DevPortalSelectorSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*DevPortalSpec)(nil), (*v3alpha1.DevPortalSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_DevPortalSpec_To_v3alpha1_DevPortalSpec(a.(*DevPortalSpec), b.(*v3alpha1.DevPortalSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.DevPortalSpec)(nil), (*DevPortalSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_DevPortalSpec_To_v2_DevPortalSpec(a.(*v3alpha1.DevPortalSpec), b.(*DevPortalSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*DocsInfo)(nil), (*v3alpha1.DocsInfo)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_DocsInfo_To_v3alpha1_DocsInfo(a.(*DocsInfo), b.(*v3alpha1.DocsInfo), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.DocsInfo)(nil), (*DocsInfo)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_DocsInfo_To_v2_DocsInfo(a.(*v3alpha1.DocsInfo), b.(*DocsInfo), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*DomainMap)(nil), (*v3alpha1.DomainMap)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_DomainMap_To_v3alpha1_DomainMap(a.(*DomainMap), b.(*v3alpha1.DomainMap), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.DomainMap)(nil), (*DomainMap)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_DomainMap_To_v2_DomainMap(a.(*v3alpha1.DomainMap), b.(*DomainMap), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*DriverConfig)(nil), (*v3alpha1.DriverConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_DriverConfig_To_v3alpha1_DriverConfig(a.(*DriverConfig), b.(*v3alpha1.DriverConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.DriverConfig)(nil), (*DriverConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_DriverConfig_To_v2_DriverConfig(a.(*v3alpha1.DriverConfig), b.(*DriverConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ErrorResponseOverride)(nil), (*v3alpha1.ErrorResponseOverride)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_ErrorResponseOverride_To_v3alpha1_ErrorResponseOverride(a.(*ErrorResponseOverride), b.(*v3alpha1.ErrorResponseOverride), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.ErrorResponseOverride)(nil), (*ErrorResponseOverride)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_ErrorResponseOverride_To_v2_ErrorResponseOverride(a.(*v3alpha1.ErrorResponseOverride), b.(*ErrorResponseOverride), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ErrorResponseOverrideBody)(nil), (*v3alpha1.ErrorResponseOverrideBody)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_ErrorResponseOverrideBody_To_v3alpha1_ErrorResponseOverrideBody(a.(*ErrorResponseOverrideBody), b.(*v3alpha1.ErrorResponseOverrideBody), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.ErrorResponseOverrideBody)(nil), (*ErrorResponseOverrideBody)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_ErrorResponseOverrideBody_To_v2_ErrorResponseOverrideBody(a.(*v3alpha1.ErrorResponseOverrideBody), b.(*ErrorResponseOverrideBody), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ErrorResponseTextFormatSource)(nil), (*v3alpha1.ErrorResponseTextFormatSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_ErrorResponseTextFormatSource_To_v3alpha1_ErrorResponseTextFormatSource(a.(*ErrorResponseTextFormatSource), b.(*v3alpha1.ErrorResponseTextFormatSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.ErrorResponseTextFormatSource)(nil), (*ErrorResponseTextFormatSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_ErrorResponseTextFormatSource_To_v2_ErrorResponseTextFormatSource(a.(*v3alpha1.ErrorResponseTextFormatSource), b.(*ErrorResponseTextFormatSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Host)(nil), (*v3alpha1.Host)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_Host_To_v3alpha1_Host(a.(*Host), b.(*v3alpha1.Host), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.Host)(nil), (*Host)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_Host_To_v2_Host(a.(*v3alpha1.Host), b.(*Host), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*HostList)(nil), (*v3alpha1.HostList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_HostList_To_v3alpha1_HostList(a.(*HostList), b.(*v3alpha1.HostList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.HostList)(nil), (*HostList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_HostList_To_v2_HostList(a.(*v3alpha1.HostList), b.(*HostList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*HostPhase)(nil), (*v3alpha1.HostPhase)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_HostPhase_To_v3alpha1_HostPhase(a.(*HostPhase), b.(*v3alpha1.HostPhase), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.HostPhase)(nil), (*HostPhase)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_HostPhase_To_v2_HostPhase(a.(*v3alpha1.HostPhase), b.(*HostPhase), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*HostState)(nil), (*v3alpha1.HostState)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_HostState_To_v3alpha1_HostState(a.(*HostState), b.(*v3alpha1.HostState), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.HostState)(nil), (*HostState)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_HostState_To_v2_HostState(a.(*v3alpha1.HostState), b.(*HostState), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*HostStatus)(nil), (*v3alpha1.HostStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_HostStatus_To_v3alpha1_HostStatus(a.(*HostStatus), b.(*v3alpha1.HostStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.HostStatus)(nil), (*HostStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_HostStatus_To_v2_HostStatus(a.(*v3alpha1.HostStatus), b.(*HostStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*HostTLSCertificateSource)(nil), (*v3alpha1.HostTLSCertificateSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_HostTLSCertificateSource_To_v3alpha1_HostTLSCertificateSource(a.(*HostTLSCertificateSource), b.(*v3alpha1.HostTLSCertificateSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.HostTLSCertificateSource)(nil), (*HostTLSCertificateSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_HostTLSCertificateSource_To_v2_HostTLSCertificateSource(a.(*v3alpha1.HostTLSCertificateSource), b.(*HostTLSCertificateSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*InsecureRequestPolicy)(nil), (*v3alpha1.InsecureRequestPolicy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_InsecureRequestPolicy_To_v3alpha1_InsecureRequestPolicy(a.(*InsecureRequestPolicy), b.(*v3alpha1.InsecureRequestPolicy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.InsecureRequestPolicy)(nil), (*InsecureRequestPolicy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_InsecureRequestPolicy_To_v2_InsecureRequestPolicy(a.(*v3alpha1.InsecureRequestPolicy), b.(*InsecureRequestPolicy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KeepAlive)(nil), (*v3alpha1.KeepAlive)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_KeepAlive_To_v3alpha1_KeepAlive(a.(*KeepAlive), b.(*v3alpha1.KeepAlive), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.KeepAlive)(nil), (*KeepAlive)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_KeepAlive_To_v2_KeepAlive(a.(*v3alpha1.KeepAlive), b.(*KeepAlive), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubernetesEndpointResolver)(nil), (*v3alpha1.KubernetesEndpointResolver)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_KubernetesEndpointResolver_To_v3alpha1_KubernetesEndpointResolver(a.(*KubernetesEndpointResolver), b.(*v3alpha1.KubernetesEndpointResolver), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.KubernetesEndpointResolver)(nil), (*KubernetesEndpointResolver)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_KubernetesEndpointResolver_To_v2_KubernetesEndpointResolver(a.(*v3alpha1.KubernetesEndpointResolver), b.(*KubernetesEndpointResolver), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubernetesEndpointResolverList)(nil), (*v3alpha1.KubernetesEndpointResolverList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_KubernetesEndpointResolverList_To_v3alpha1_KubernetesEndpointResolverList(a.(*KubernetesEndpointResolverList), b.(*v3alpha1.KubernetesEndpointResolverList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.KubernetesEndpointResolverList)(nil), (*KubernetesEndpointResolverList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_KubernetesEndpointResolverList_To_v2_KubernetesEndpointResolverList(a.(*v3alpha1.KubernetesEndpointResolverList), b.(*KubernetesEndpointResolverList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubernetesEndpointResolverSpec)(nil), (*v3alpha1.KubernetesEndpointResolverSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_KubernetesEndpointResolverSpec_To_v3alpha1_KubernetesEndpointResolverSpec(a.(*KubernetesEndpointResolverSpec), b.(*v3alpha1.KubernetesEndpointResolverSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.KubernetesEndpointResolverSpec)(nil), (*KubernetesEndpointResolverSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_KubernetesEndpointResolverSpec_To_v2_KubernetesEndpointResolverSpec(a.(*v3alpha1.KubernetesEndpointResolverSpec), b.(*KubernetesEndpointResolverSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubernetesServiceResolver)(nil), (*v3alpha1.KubernetesServiceResolver)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_KubernetesServiceResolver_To_v3alpha1_KubernetesServiceResolver(a.(*KubernetesServiceResolver), b.(*v3alpha1.KubernetesServiceResolver), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.KubernetesServiceResolver)(nil), (*KubernetesServiceResolver)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_KubernetesServiceResolver_To_v2_KubernetesServiceResolver(a.(*v3alpha1.KubernetesServiceResolver), b.(*KubernetesServiceResolver), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubernetesServiceResolverList)(nil), (*v3alpha1.KubernetesServiceResolverList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_KubernetesServiceResolverList_To_v3alpha1_KubernetesServiceResolverList(a.(*KubernetesServiceResolverList), b.(*v3alpha1.KubernetesServiceResolverList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.KubernetesServiceResolverList)(nil), (*KubernetesServiceResolverList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_KubernetesServiceResolverList_To_v2_KubernetesServiceResolverList(a.(*v3alpha1.KubernetesServiceResolverList), b.(*KubernetesServiceResolverList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubernetesServiceResolverSpec)(nil), (*v3alpha1.KubernetesServiceResolverSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_KubernetesServiceResolverSpec_To_v3alpha1_KubernetesServiceResolverSpec(a.(*KubernetesServiceResolverSpec), b.(*v3alpha1.KubernetesServiceResolverSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.KubernetesServiceResolverSpec)(nil), (*KubernetesServiceResolverSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_KubernetesServiceResolverSpec_To_v2_KubernetesServiceResolverSpec(a.(*v3alpha1.KubernetesServiceResolverSpec), b.(*KubernetesServiceResolverSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LoadBalancer)(nil), (*v3alpha1.LoadBalancer)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_LoadBalancer_To_v3alpha1_LoadBalancer(a.(*LoadBalancer), b.(*v3alpha1.LoadBalancer), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.LoadBalancer)(nil), (*LoadBalancer)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_LoadBalancer_To_v2_LoadBalancer(a.(*v3alpha1.LoadBalancer), b.(*LoadBalancer), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LoadBalancerCookie)(nil), (*v3alpha1.LoadBalancerCookie)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_LoadBalancerCookie_To_v3alpha1_LoadBalancerCookie(a.(*LoadBalancerCookie), b.(*v3alpha1.LoadBalancerCookie), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.LoadBalancerCookie)(nil), (*LoadBalancerCookie)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_LoadBalancerCookie_To_v2_LoadBalancerCookie(a.(*v3alpha1.LoadBalancerCookie), b.(*LoadBalancerCookie), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LogService)(nil), (*v3alpha1.LogService)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_LogService_To_v3alpha1_LogService(a.(*LogService), b.(*v3alpha1.LogService), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.LogService)(nil), (*LogService)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_LogService_To_v2_LogService(a.(*v3alpha1.LogService), b.(*LogService), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LogServiceList)(nil), (*v3alpha1.LogServiceList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_LogServiceList_To_v3alpha1_LogServiceList(a.(*LogServiceList), b.(*v3alpha1.LogServiceList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.LogServiceList)(nil), (*LogServiceList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_LogServiceList_To_v2_LogServiceList(a.(*v3alpha1.LogServiceList), b.(*LogServiceList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LogServiceSpec)(nil), (*v3alpha1.LogServiceSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_LogServiceSpec_To_v3alpha1_LogServiceSpec(a.(*LogServiceSpec), b.(*v3alpha1.LogServiceSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.LogServiceSpec)(nil), (*LogServiceSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_LogServiceSpec_To_v2_LogServiceSpec(a.(*v3alpha1.LogServiceSpec), b.(*LogServiceSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Mapping)(nil), (*v3alpha1.Mapping)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_Mapping_To_v3alpha1_Mapping(a.(*Mapping), b.(*v3alpha1.Mapping), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.Mapping)(nil), (*Mapping)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_Mapping_To_v2_Mapping(a.(*v3alpha1.Mapping), b.(*Mapping), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MappingLabelGroup)(nil), (*v3alpha1.MappingLabelGroup)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_MappingLabelGroup_To_v3alpha1_MappingLabelGroup(a.(*MappingLabelGroup), b.(*v3alpha1.MappingLabelGroup), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.MappingLabelGroup)(nil), (*MappingLabelGroup)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_MappingLabelGroup_To_v2_MappingLabelGroup(a.(*v3alpha1.MappingLabelGroup), b.(*MappingLabelGroup), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MappingLabelGroupsArray)(nil), (*v3alpha1.MappingLabelGroupsArray)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_MappingLabelGroupsArray_To_v3alpha1_MappingLabelGroupsArray(a.(*MappingLabelGroupsArray), b.(*v3alpha1.MappingLabelGroupsArray), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.MappingLabelGroupsArray)(nil), (*MappingLabelGroupsArray)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_MappingLabelGroupsArray_To_v2_MappingLabelGroupsArray(a.(*v3alpha1.MappingLabelGroupsArray), b.(*MappingLabelGroupsArray), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MappingLabelsArray)(nil), (*v3alpha1.MappingLabelsArray)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_MappingLabelsArray_To_v3alpha1_MappingLabelsArray(a.(*MappingLabelsArray), b.(*v3alpha1.MappingLabelsArray), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.MappingLabelsArray)(nil), (*MappingLabelsArray)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_MappingLabelsArray_To_v2_MappingLabelsArray(a.(*v3alpha1.MappingLabelsArray), b.(*MappingLabelsArray), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MappingList)(nil), (*v3alpha1.MappingList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_MappingList_To_v3alpha1_MappingList(a.(*MappingList), b.(*v3alpha1.MappingList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.MappingList)(nil), (*MappingList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_MappingList_To_v2_MappingList(a.(*v3alpha1.MappingList), b.(*MappingList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MappingStatus)(nil), (*v3alpha1.MappingStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_MappingStatus_To_v3alpha1_MappingStatus(a.(*MappingStatus), b.(*v3alpha1.MappingStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.MappingStatus)(nil), (*MappingStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_MappingStatus_To_v2_MappingStatus(a.(*v3alpha1.MappingStatus), b.(*MappingStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MillisecondDuration)(nil), (*v3alpha1.MillisecondDuration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_MillisecondDuration_To_v3alpha1_MillisecondDuration(a.(*MillisecondDuration), b.(*v3alpha1.MillisecondDuration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.MillisecondDuration)(nil), (*MillisecondDuration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_MillisecondDuration_To_v2_MillisecondDuration(a.(*v3alpha1.MillisecondDuration), b.(*MillisecondDuration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Module)(nil), (*v3alpha1.Module)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_Module_To_v3alpha1_Module(a.(*Module), b.(*v3alpha1.Module), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.Module)(nil), (*Module)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_Module_To_v2_Module(a.(*v3alpha1.Module), b.(*Module), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ModuleList)(nil), (*v3alpha1.ModuleList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_ModuleList_To_v3alpha1_ModuleList(a.(*ModuleList), b.(*v3alpha1.ModuleList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.ModuleList)(nil), (*ModuleList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_ModuleList_To_v2_ModuleList(a.(*v3alpha1.ModuleList), b.(*ModuleList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ModuleSpec)(nil), (*v3alpha1.ModuleSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_ModuleSpec_To_v3alpha1_ModuleSpec(a.(*ModuleSpec), b.(*v3alpha1.ModuleSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.ModuleSpec)(nil), (*ModuleSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_ModuleSpec_To_v2_ModuleSpec(a.(*v3alpha1.ModuleSpec), b.(*ModuleSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PreviewURLSpec)(nil), (*v3alpha1.PreviewURLSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_PreviewURLSpec_To_v3alpha1_PreviewURLSpec(a.(*PreviewURLSpec), b.(*v3alpha1.PreviewURLSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.PreviewURLSpec)(nil), (*PreviewURLSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_PreviewURLSpec_To_v2_PreviewURLSpec(a.(*v3alpha1.PreviewURLSpec), b.(*PreviewURLSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PreviewURLType)(nil), (*v3alpha1.PreviewURLType)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_PreviewURLType_To_v3alpha1_PreviewURLType(a.(*PreviewURLType), b.(*v3alpha1.PreviewURLType), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.PreviewURLType)(nil), (*PreviewURLType)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_PreviewURLType_To_v2_PreviewURLType(a.(*v3alpha1.PreviewURLType), b.(*PreviewURLType), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RateLimitService)(nil), (*v3alpha1.RateLimitService)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_RateLimitService_To_v3alpha1_RateLimitService(a.(*RateLimitService), b.(*v3alpha1.RateLimitService), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.RateLimitService)(nil), (*RateLimitService)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_RateLimitService_To_v2_RateLimitService(a.(*v3alpha1.RateLimitService), b.(*RateLimitService), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RateLimitServiceList)(nil), (*v3alpha1.RateLimitServiceList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_RateLimitServiceList_To_v3alpha1_RateLimitServiceList(a.(*RateLimitServiceList), b.(*v3alpha1.RateLimitServiceList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.RateLimitServiceList)(nil), (*RateLimitServiceList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_RateLimitServiceList_To_v2_RateLimitServiceList(a.(*v3alpha1.RateLimitServiceList), b.(*RateLimitServiceList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RegexMap)(nil), (*v3alpha1.RegexMap)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_RegexMap_To_v3alpha1_RegexMap(a.(*RegexMap), b.(*v3alpha1.RegexMap), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.RegexMap)(nil), (*RegexMap)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_RegexMap_To_v2_RegexMap(a.(*v3alpha1.RegexMap), b.(*RegexMap), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RequestPolicy)(nil), (*v3alpha1.RequestPolicy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_RequestPolicy_To_v3alpha1_RequestPolicy(a.(*RequestPolicy), b.(*v3alpha1.RequestPolicy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.RequestPolicy)(nil), (*RequestPolicy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_RequestPolicy_To_v2_RequestPolicy(a.(*v3alpha1.RequestPolicy), b.(*RequestPolicy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RetryPolicy)(nil), (*v3alpha1.RetryPolicy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_RetryPolicy_To_v3alpha1_RetryPolicy(a.(*RetryPolicy), b.(*v3alpha1.RetryPolicy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.RetryPolicy)(nil), (*RetryPolicy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_RetryPolicy_To_v2_RetryPolicy(a.(*v3alpha1.RetryPolicy), b.(*RetryPolicy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*TCPMapping)(nil), (*v3alpha1.TCPMapping)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_TCPMapping_To_v3alpha1_TCPMapping(a.(*TCPMapping), b.(*v3alpha1.TCPMapping), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.TCPMapping)(nil), (*TCPMapping)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_TCPMapping_To_v2_TCPMapping(a.(*v3alpha1.TCPMapping), b.(*TCPMapping), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*TCPMappingList)(nil), (*v3alpha1.TCPMappingList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_TCPMappingList_To_v3alpha1_TCPMappingList(a.(*TCPMappingList), b.(*v3alpha1.TCPMappingList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.TCPMappingList)(nil), (*TCPMappingList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_TCPMappingList_To_v2_TCPMappingList(a.(*v3alpha1.TCPMappingList), b.(*TCPMappingList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*TLSConfig)(nil), (*v3alpha1.TLSConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_TLSConfig_To_v3alpha1_TLSConfig(a.(*TLSConfig), b.(*v3alpha1.TLSConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.TLSConfig)(nil), (*TLSConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_TLSConfig_To_v2_TLSConfig(a.(*v3alpha1.TLSConfig), b.(*TLSConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*TLSContext)(nil), (*v3alpha1.TLSContext)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_TLSContext_To_v3alpha1_TLSContext(a.(*TLSContext), b.(*v3alpha1.TLSContext), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.TLSContext)(nil), (*TLSContext)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_TLSContext_To_v2_TLSContext(a.(*v3alpha1.TLSContext), b.(*TLSContext), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*TLSContextList)(nil), (*v3alpha1.TLSContextList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_TLSContextList_To_v3alpha1_TLSContextList(a.(*TLSContextList), b.(*v3alpha1.TLSContextList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.TLSContextList)(nil), (*TLSContextList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_TLSContextList_To_v2_TLSContextList(a.(*v3alpha1.TLSContextList), b.(*TLSContextList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*TLSContextSpec)(nil), (*v3alpha1.TLSContextSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_TLSContextSpec_To_v3alpha1_TLSContextSpec(a.(*TLSContextSpec), b.(*v3alpha1.TLSContextSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.TLSContextSpec)(nil), (*TLSContextSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_TLSContextSpec_To_v2_TLSContextSpec(a.(*v3alpha1.TLSContextSpec), b.(*TLSContextSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*TraceConfig)(nil), (*v3alpha1.TraceConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_TraceConfig_To_v3alpha1_TraceConfig(a.(*TraceConfig), b.(*v3alpha1.TraceConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.TraceConfig)(nil), (*TraceConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_TraceConfig_To_v2_TraceConfig(a.(*v3alpha1.TraceConfig), b.(*TraceConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*TraceSampling)(nil), (*v3alpha1.TraceSampling)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_TraceSampling_To_v3alpha1_TraceSampling(a.(*TraceSampling), b.(*v3alpha1.TraceSampling), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.TraceSampling)(nil), (*TraceSampling)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_TraceSampling_To_v2_TraceSampling(a.(*v3alpha1.TraceSampling), b.(*TraceSampling), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*TracingService)(nil), (*v3alpha1.TracingService)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_TracingService_To_v3alpha1_TracingService(a.(*TracingService), b.(*v3alpha1.TracingService), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.TracingService)(nil), (*TracingService)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_TracingService_To_v2_TracingService(a.(*v3alpha1.TracingService), b.(*TracingService), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*TracingServiceList)(nil), (*v3alpha1.TracingServiceList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_TracingServiceList_To_v3alpha1_TracingServiceList(a.(*TracingServiceList), b.(*v3alpha1.TracingServiceList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.TracingServiceList)(nil), (*TracingServiceList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_TracingServiceList_To_v2_TracingServiceList(a.(*v3alpha1.TracingServiceList), b.(*TracingServiceList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*UntypedDict)(nil), (*v3alpha1.UntypedDict)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_UntypedDict_To_v3alpha1_UntypedDict(a.(*UntypedDict), b.(*v3alpha1.UntypedDict), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v3alpha1.UntypedDict)(nil), (*UntypedDict)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_UntypedDict_To_v2_UntypedDict(a.(*v3alpha1.UntypedDict), b.(*UntypedDict), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*string)(nil), (**BoolOrString)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_string_To_Pointer_v2_BoolOrString(a.(*string), b.(**BoolOrString), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*string)(nil), (*BoolOrString)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_string_To_v2_BoolOrString(a.(*string), b.(*BoolOrString), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*AddedHeader)(nil), (*v3alpha1.AddedHeader)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_AddedHeader_To_v3alpha1_AddedHeader(a.(*AddedHeader), b.(*v3alpha1.AddedHeader), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*AmbassadorID)(nil), (*v3alpha1.AmbassadorID)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_AmbassadorID_To_v3alpha1_AmbassadorID(a.(*AmbassadorID), b.(*v3alpha1.AmbassadorID), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*AuthServiceSpec)(nil), (*v3alpha1.AuthServiceSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_AuthServiceSpec_To_v3alpha1_AuthServiceSpec(a.(*AuthServiceSpec), b.(*v3alpha1.AuthServiceSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*CORS)(nil), (*v3alpha1.CORS)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_CORS_To_v3alpha1_CORS(a.(*CORS), b.(*v3alpha1.CORS), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*HostSpec)(nil), (*v3alpha1.HostSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_HostSpec_To_v3alpha1_HostSpec(a.(*HostSpec), b.(*v3alpha1.HostSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*MappingLabelSpecifier)(nil), (*v3alpha1.MappingLabelSpecifier)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_MappingLabelSpecifier_To_v3alpha1_MappingLabelSpecifier(a.(*MappingLabelSpecifier), b.(*v3alpha1.MappingLabelSpecifier), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*MappingSpec)(nil), (*v3alpha1.MappingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_MappingSpec_To_v3alpha1_MappingSpec(a.(*MappingSpec), b.(*v3alpha1.MappingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*RateLimitServiceSpec)(nil), (*v3alpha1.RateLimitServiceSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_RateLimitServiceSpec_To_v3alpha1_RateLimitServiceSpec(a.(*RateLimitServiceSpec), b.(*v3alpha1.RateLimitServiceSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*TCPMappingSpec)(nil), (*v3alpha1.TCPMappingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_TCPMappingSpec_To_v3alpha1_TCPMappingSpec(a.(*TCPMappingSpec), b.(*v3alpha1.TCPMappingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*TracingServiceSpec)(nil), (*v3alpha1.TracingServiceSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_TracingServiceSpec_To_v3alpha1_TracingServiceSpec(a.(*TracingServiceSpec), b.(*v3alpha1.TracingServiceSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v3alpha1.AddedHeader)(nil), (*AddedHeader)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_AddedHeader_To_v2_AddedHeader(a.(*v3alpha1.AddedHeader), b.(*AddedHeader), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v3alpha1.AmbassadorID)(nil), (*AmbassadorID)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_AmbassadorID_To_v2_AmbassadorID(a.(*v3alpha1.AmbassadorID), b.(*AmbassadorID), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v3alpha1.AuthServiceSpec)(nil), (*AuthServiceSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_AuthServiceSpec_To_v2_AuthServiceSpec(a.(*v3alpha1.AuthServiceSpec), b.(*AuthServiceSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v3alpha1.CORS)(nil), (*CORS)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_CORS_To_v2_CORS(a.(*v3alpha1.CORS), b.(*CORS), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v3alpha1.HostSpec)(nil), (*HostSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_HostSpec_To_v2_HostSpec(a.(*v3alpha1.HostSpec), b.(*HostSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v3alpha1.MappingLabelSpecifier)(nil), (*MappingLabelSpecifier)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_MappingLabelSpecifier_To_v2_MappingLabelSpecifier(a.(*v3alpha1.MappingLabelSpecifier), b.(*MappingLabelSpecifier), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v3alpha1.MappingSpec)(nil), (*MappingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_MappingSpec_To_v2_MappingSpec(a.(*v3alpha1.MappingSpec), b.(*MappingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v3alpha1.RateLimitServiceSpec)(nil), (*RateLimitServiceSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_RateLimitServiceSpec_To_v2_RateLimitServiceSpec(a.(*v3alpha1.RateLimitServiceSpec), b.(*RateLimitServiceSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v3alpha1.TCPMappingSpec)(nil), (*TCPMappingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_TCPMappingSpec_To_v2_TCPMappingSpec(a.(*v3alpha1.TCPMappingSpec), b.(*TCPMappingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v3alpha1.TracingServiceSpec)(nil), (*TracingServiceSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v3alpha1_TracingServiceSpec_To_v2_TracingServiceSpec(a.(*v3alpha1.TracingServiceSpec), b.(*TracingServiceSpec), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v2_ACMEProviderSpec_To_v3alpha1_ACMEProviderSpec(in *ACMEProviderSpec, out *v3alpha1.ACMEProviderSpec, s conversion.Scope) error {
	*out = v3alpha1.ACMEProviderSpec(*in)
	return nil
}

// Convert_v2_ACMEProviderSpec_To_v3alpha1_ACMEProviderSpec is an autogenerated conversion function.
func Convert_v2_ACMEProviderSpec_To_v3alpha1_ACMEProviderSpec(in *ACMEProviderSpec, out *v3alpha1.ACMEProviderSpec, s conversion.Scope) error {
	return autoConvert_v2_ACMEProviderSpec_To_v3alpha1_ACMEProviderSpec(in, out, s)
}

func autoConvert_v3alpha1_ACMEProviderSpec_To_v2_ACMEProviderSpec(in *v3alpha1.ACMEProviderSpec, out *ACMEProviderSpec, s conversion.Scope) error {
	*out = ACMEProviderSpec(*in)
	return nil
}

// Convert_v3alpha1_ACMEProviderSpec_To_v2_ACMEProviderSpec is an autogenerated conversion function.
func Convert_v3alpha1_ACMEProviderSpec_To_v2_ACMEProviderSpec(in *v3alpha1.ACMEProviderSpec, out *ACMEProviderSpec, s conversion.Scope) error {
	return autoConvert_v3alpha1_ACMEProviderSpec_To_v2_ACMEProviderSpec(in, out, s)
}

func autoConvert_v2_AddedHeader_To_v3alpha1_AddedHeader(in *AddedHeader, out *v3alpha1.AddedHeader, s conversion.Scope) error {
	// WARNING: in.Shorthand requires manual conversion: does not exist in peer-type
	// WARNING: in.Full requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v3alpha1_AddedHeader_To_v2_AddedHeader(in *v3alpha1.AddedHeader, out *AddedHeader, s conversion.Scope) error {
	// WARNING: in.Value requires manual conversion: does not exist in peer-type
	// WARNING: in.Append requires manual conversion: does not exist in peer-type
	// WARNING: in.V2Representation requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v2_AdditionalLogHeaders_To_v3alpha1_AdditionalLogHeaders(in *AdditionalLogHeaders, out *v3alpha1.AdditionalLogHeaders, s conversion.Scope) error {
	*out = v3alpha1.AdditionalLogHeaders(*in)
	return nil
}

// Convert_v2_AdditionalLogHeaders_To_v3alpha1_AdditionalLogHeaders is an autogenerated conversion function.
func Convert_v2_AdditionalLogHeaders_To_v3alpha1_AdditionalLogHeaders(in *AdditionalLogHeaders, out *v3alpha1.AdditionalLogHeaders, s conversion.Scope) error {
	return autoConvert_v2_AdditionalLogHeaders_To_v3alpha1_AdditionalLogHeaders(in, out, s)
}

func autoConvert_v3alpha1_AdditionalLogHeaders_To_v2_AdditionalLogHeaders(in *v3alpha1.AdditionalLogHeaders, out *AdditionalLogHeaders, s conversion.Scope) error {
	*out = AdditionalLogHeaders(*in)
	return nil
}

// Convert_v3alpha1_AdditionalLogHeaders_To_v2_AdditionalLogHeaders is an autogenerated conversion function.
func Convert_v3alpha1_AdditionalLogHeaders_To_v2_AdditionalLogHeaders(in *v3alpha1.AdditionalLogHeaders, out *AdditionalLogHeaders, s conversion.Scope) error {
	return autoConvert_v3alpha1_AdditionalLogHeaders_To_v2_AdditionalLogHeaders(in, out, s)
}

func autoConvert_v2_AmbassadorID_To_v3alpha1_AmbassadorID(in *AmbassadorID, out *v3alpha1.AmbassadorID, s conversion.Scope) error {
	*out = v3alpha1.AmbassadorID(*in)
	return nil
}

func autoConvert_v3alpha1_AmbassadorID_To_v2_AmbassadorID(in *v3alpha1.AmbassadorID, out *AmbassadorID, s conversion.Scope) error {
	*out = AmbassadorID(*in)
	return nil
}

func autoConvert_v2_AuthService_To_v3alpha1_AuthService(in *AuthService, out *v3alpha1.AuthService, s conversion.Scope) error {
	if true {
		in, out := &in.ObjectMeta, &out.ObjectMeta
		*out = *in
	}
	if true {
		in, out := &in.Spec, &out.Spec
		if err := Convert_v2_AuthServiceSpec_To_v3alpha1_AuthServiceSpec(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v2_AuthService_To_v3alpha1_AuthService is an autogenerated conversion function.
func Convert_v2_AuthService_To_v3alpha1_AuthService(in *AuthService, out *v3alpha1.AuthService, s conversion.Scope) error {
	return autoConvert_v2_AuthService_To_v3alpha1_AuthService(in, out, s)
}

func autoConvert_v3alpha1_AuthService_To_v2_AuthService(in *v3alpha1.AuthService, out *AuthService, s conversion.Scope) error {
	if true {
		in, out := &in.ObjectMeta, &out.ObjectMeta
		*out = *in
	}
	if true {
		in, out := &in.Spec, &out.Spec
		if err := Convert_v3alpha1_AuthServiceSpec_To_v2_AuthServiceSpec(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v3alpha1_AuthService_To_v2_AuthService is an autogenerated conversion function.
func Convert_v3alpha1_AuthService_To_v2_AuthService(in *v3alpha1.AuthService, out *AuthService, s conversion.Scope) error {
	return autoConvert_v3alpha1_AuthService_To_v2_AuthService(in, out, s)
}

func autoConvert_v2_AuthServiceIncludeBody_To_v3alpha1_AuthServiceIncludeBody(in *AuthServiceIncludeBody, out *v3alpha1.AuthServiceIncludeBody, s conversion.Scope) error {
	*out = v3alpha1.AuthServiceIncludeBody(*in)
	return nil
}

// Convert_v2_AuthServiceIncludeBody_To_v3alpha1_AuthServiceIncludeBody is an autogenerated conversion function.
func Convert_v2_AuthServiceIncludeBody_To_v3alpha1_AuthServiceIncludeBody(in *AuthServiceIncludeBody, out *v3alpha1.AuthServiceIncludeBody, s conversion.Scope) error {
	return autoConvert_v2_AuthServiceIncludeBody_To_v3alpha1_AuthServiceIncludeBody(in, out, s)
}

func autoConvert_v3alpha1_AuthServiceIncludeBody_To_v2_AuthServiceIncludeBody(in *v3alpha1.AuthServiceIncludeBody, out *AuthServiceIncludeBody, s conversion.Scope) error {
	*out = AuthServiceIncludeBody(*in)
	return nil
}

// Convert_v3alpha1_AuthServiceIncludeBody_To_v2_AuthServiceIncludeBody is an autogenerated conversion function.
func Convert_v3alpha1_AuthServiceIncludeBody_To_v2_AuthServiceIncludeBody(in *v3alpha1.AuthServiceIncludeBody, out *AuthServiceIncludeBody, s conversion.Scope) error {
	return autoConvert_v3alpha1_AuthServiceIncludeBody_To_v2_AuthServiceIncludeBody(in, out, s)
}

func autoConvert_v2_AuthServiceList_To_v3alpha1_AuthServiceList(in *AuthServiceList, out *v3alpha1.AuthServiceList, s conversion.Scope) error {
	if true {
		in, out := &in.ListMeta, &out.ListMeta
		*out = *in
	}
	if true {
		in, out := &in.Items, &out.Items
		if *in == nil {
			*out = nil
		} else {
			*out = make([]v3alpha1.AuthService, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v2_AuthService_To_v3alpha1_AuthService(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

// Convert_v2_AuthServiceList_To_v3alpha1_AuthServiceList is an autogenerated conversion function.
func Convert_v2_AuthServiceList_To_v3alpha1_AuthServiceList(in *AuthServiceList, out *v3alpha1.AuthServiceList, s conversion.Scope) error {
	return autoConvert_v2_AuthServiceList_To_v3alpha1_AuthServiceList(in, out, s)
}

func autoConvert_v3alpha1_AuthServiceList_To_v2_AuthServiceList(in *v3alpha1.AuthServiceList, out *AuthServiceList, s conversion.Scope) error {
	if true {
		in, out := &in.ListMeta, &out.ListMeta
		*out = *in
	}
	if true {
		in, out := &in.Items, &out.Items
		if *in == nil {
			*out = nil
		} else {
			*out = make([]AuthService, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v3alpha1_AuthService_To_v2_AuthService(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

// Convert_v3alpha1_AuthServiceList_To_v2_AuthServiceList is an autogenerated conversion function.
func Convert_v3alpha1_AuthServiceList_To_v2_AuthServiceList(in *v3alpha1.AuthServiceList, out *AuthServiceList, s conversion.Scope) error {
	return autoConvert_v3alpha1_AuthServiceList_To_v2_AuthServiceList(in, out, s)
}

func autoConvert_v2_AuthServiceSpec_To_v3alpha1_AuthServiceSpec(in *AuthServiceSpec, out *v3alpha1.AuthServiceSpec, s conversion.Scope) error {
	if true {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		if err := Convert_v2_AmbassadorID_To_v3alpha1_AmbassadorID(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.AuthService, &out.AuthService
		*out = *in
	}
	if true {
		in, out := &in.PathPrefix, &out.PathPrefix
		*out = *in
	}
	// INFO: in.TLS opted out of conversion generation via +k8s:conversion-gen=false
	if true {
		in, out := &in.Proto, &out.Proto
		*out = *in
	}
	if true {
		in, out := &in.Timeout, &out.Timeout
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.MillisecondDuration)
			in, out := *in, *out
			if err := Convert_v2_MillisecondDuration_To_v3alpha1_MillisecondDuration(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.AllowedRequestHeaders, &out.AllowedRequestHeaders
		*out = *in
	}
	if true {
		in, out := &in.AllowedAuthorizationHeaders, &out.AllowedAuthorizationHeaders
		*out = *in
	}
	if true {
		in, out := &in.AddAuthHeaders, &out.AddAuthHeaders
		*out = *in
	}
	if true {
		in, out := &in.AllowRequestBody, &out.AllowRequestBody
		*out = *in
	}
	if true {
		in, out := &in.AddLinkerdHeaders, &out.AddLinkerdHeaders
		*out = *in
	}
	if true {
		in, out := &in.FailureModeAllow, &out.FailureModeAllow
		*out = *in
	}
	if true {
		in, out := &in.IncludeBody, &out.IncludeBody
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.AuthServiceIncludeBody)
			in, out := *in, *out
			if err := Convert_v2_AuthServiceIncludeBody_To_v3alpha1_AuthServiceIncludeBody(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.StatusOnError, &out.StatusOnError
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.AuthServiceStatusOnError)
			in, out := *in, *out
			if err := Convert_v2_AuthServiceStatusOnError_To_v3alpha1_AuthServiceStatusOnError(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.ProtocolVersion, &out.ProtocolVersion
		*out = *in
	}
	if true {
		in, out := &in.V3StatsName, &out.StatsName
		*out = *in
	}
	if true {
		in, out := &in.V3CircuitBreakers, &out.CircuitBreakers
		if *in == nil {
			*out = nil
		} else {
			*out = make([]*v3alpha1.CircuitBreaker, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if *in == nil {
					*out = nil
				} else {
					*out = new(v3alpha1.CircuitBreaker)
					in, out := *in, *out
					if err := Convert_v2_CircuitBreaker_To_v3alpha1_CircuitBreaker(in, out, s); err != nil {
						return err
					}
				}
			}
		}
	}
	return nil
}

func autoConvert_v3alpha1_AuthServiceSpec_To_v2_AuthServiceSpec(in *v3alpha1.AuthServiceSpec, out *AuthServiceSpec, s conversion.Scope) error {
	if true {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		if err := Convert_v3alpha1_AmbassadorID_To_v2_AmbassadorID(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.AuthService, &out.AuthService
		*out = *in
	}
	if true {
		in, out := &in.PathPrefix, &out.PathPrefix
		*out = *in
	}
	if true {
		in, out := &in.TLS, &out.TLS
		if err := Convert_string_To_Pointer_v2_BoolOrString(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.Proto, &out.Proto
		*out = *in
	}
	if true {
		in, out := &in.Timeout, &out.Timeout
		if *in == nil {
			*out = nil
		} else {
			*out = new(MillisecondDuration)
			in, out := *in, *out
			if err := Convert_v3alpha1_MillisecondDuration_To_v2_MillisecondDuration(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.AllowedRequestHeaders, &out.AllowedRequestHeaders
		*out = *in
	}
	if true {
		in, out := &in.AllowedAuthorizationHeaders, &out.AllowedAuthorizationHeaders
		*out = *in
	}
	if true {
		in, out := &in.AddAuthHeaders, &out.AddAuthHeaders
		*out = *in
	}
	if true {
		in, out := &in.AllowRequestBody, &out.AllowRequestBody
		*out = *in
	}
	if true {
		in, out := &in.AddLinkerdHeaders, &out.AddLinkerdHeaders
		*out = *in
	}
	if true {
		in, out := &in.FailureModeAllow, &out.FailureModeAllow
		*out = *in
	}
	if true {
		in, out := &in.IncludeBody, &out.IncludeBody
		if *in == nil {
			*out = nil
		} else {
			*out = new(AuthServiceIncludeBody)
			in, out := *in, *out
			if err := Convert_v3alpha1_AuthServiceIncludeBody_To_v2_AuthServiceIncludeBody(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.StatusOnError, &out.StatusOnError
		if *in == nil {
			*out = nil
		} else {
			*out = new(AuthServiceStatusOnError)
			in, out := *in, *out
			if err := Convert_v3alpha1_AuthServiceStatusOnError_To_v2_AuthServiceStatusOnError(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.ProtocolVersion, &out.ProtocolVersion
		*out = *in
	}
	if true {
		in, out := &in.StatsName, &out.V3StatsName
		*out = *in
	}
	if true {
		in, out := &in.CircuitBreakers, &out.V3CircuitBreakers
		if *in == nil {
			*out = nil
		} else {
			*out = make([]*CircuitBreaker, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if *in == nil {
					*out = nil
				} else {
					*out = new(CircuitBreaker)
					in, out := *in, *out
					if err := Convert_v3alpha1_CircuitBreaker_To_v2_CircuitBreaker(in, out, s); err != nil {
						return err
					}
				}
			}
		}
	}
	// WARNING: in.V2ExplicitTLS requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v2_AuthServiceStatusOnError_To_v3alpha1_AuthServiceStatusOnError(in *AuthServiceStatusOnError, out *v3alpha1.AuthServiceStatusOnError, s conversion.Scope) error {
	*out = v3alpha1.AuthServiceStatusOnError(*in)
	return nil
}

// Convert_v2_AuthServiceStatusOnError_To_v3alpha1_AuthServiceStatusOnError is an autogenerated conversion function.
func Convert_v2_AuthServiceStatusOnError_To_v3alpha1_AuthServiceStatusOnError(in *AuthServiceStatusOnError, out *v3alpha1.AuthServiceStatusOnError, s conversion.Scope) error {
	return autoConvert_v2_AuthServiceStatusOnError_To_v3alpha1_AuthServiceStatusOnError(in, out, s)
}

func autoConvert_v3alpha1_AuthServiceStatusOnError_To_v2_AuthServiceStatusOnError(in *v3alpha1.AuthServiceStatusOnError, out *AuthServiceStatusOnError, s conversion.Scope) error {
	*out = AuthServiceStatusOnError(*in)
	return nil
}

// Convert_v3alpha1_AuthServiceStatusOnError_To_v2_AuthServiceStatusOnError is an autogenerated conversion function.
func Convert_v3alpha1_AuthServiceStatusOnError_To_v2_AuthServiceStatusOnError(in *v3alpha1.AuthServiceStatusOnError, out *AuthServiceStatusOnError, s conversion.Scope) error {
	return autoConvert_v3alpha1_AuthServiceStatusOnError_To_v2_AuthServiceStatusOnError(in, out, s)
}

func autoConvert_v2_CORS_To_v3alpha1_CORS(in *CORS, out *v3alpha1.CORS, s conversion.Scope) error {
	// INFO: in.Origins opted out of conversion generation via +k8s:conversion-gen=false
	if true {
		in, out := &in.Methods, &out.Methods
		*out = []string(*in)
	}
	if true {
		in, out := &in.Headers, &out.Headers
		*out = []string(*in)
	}
	if true {
		in, out := &in.Credentials, &out.Credentials
		*out = *in
	}
	if true {
		in, out := &in.ExposedHeaders, &out.ExposedHeaders
		*out = []string(*in)
	}
	if true {
		in, out := &in.MaxAge, &out.MaxAge
		*out = *in
	}
	return nil
}

func autoConvert_v3alpha1_CORS_To_v2_CORS(in *v3alpha1.CORS, out *CORS, s conversion.Scope) error {
	// INFO: in.Origins opted out of conversion generation via +k8s:conversion-gen=false
	if true {
		in, out := &in.Methods, &out.Methods
		*out = StringOrStringList(*in)
	}
	if true {
		in, out := &in.Headers, &out.Headers
		*out = StringOrStringList(*in)
	}
	if true {
		in, out := &in.Credentials, &out.Credentials
		*out = *in
	}
	if true {
		in, out := &in.ExposedHeaders, &out.ExposedHeaders
		*out = StringOrStringList(*in)
	}
	if true {
		in, out := &in.MaxAge, &out.MaxAge
		*out = *in
	}
	// WARNING: in.V2CommaSeparatedOrigins requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v2_CircuitBreaker_To_v3alpha1_CircuitBreaker(in *CircuitBreaker, out *v3alpha1.CircuitBreaker, s conversion.Scope) error {
	*out = v3alpha1.CircuitBreaker(*in)
	return nil
}

// Convert_v2_CircuitBreaker_To_v3alpha1_CircuitBreaker is an autogenerated conversion function.
func Convert_v2_CircuitBreaker_To_v3alpha1_CircuitBreaker(in *CircuitBreaker, out *v3alpha1.CircuitBreaker, s conversion.Scope) error {
	return autoConvert_v2_CircuitBreaker_To_v3alpha1_CircuitBreaker(in, out, s)
}

func autoConvert_v3alpha1_CircuitBreaker_To_v2_CircuitBreaker(in *v3alpha1.CircuitBreaker, out *CircuitBreaker, s conversion.Scope) error {
	*out = CircuitBreaker(*in)
	return nil
}

// Convert_v3alpha1_CircuitBreaker_To_v2_CircuitBreaker is an autogenerated conversion function.
func Convert_v3alpha1_CircuitBreaker_To_v2_CircuitBreaker(in *v3alpha1.CircuitBreaker, out *CircuitBreaker, s conversion.Scope) error {
	return autoConvert_v3alpha1_CircuitBreaker_To_v2_CircuitBreaker(in, out, s)
}

func autoConvert_v2_ConsulResolver_To_v3alpha1_ConsulResolver(in *ConsulResolver, out *v3alpha1.ConsulResolver, s conversion.Scope) error {
	if true {
		in, out := &in.ObjectMeta, &out.ObjectMeta
		*out = *in
	}
	if true {
		in, out := &in.Spec, &out.Spec
		if err := Convert_v2_ConsulResolverSpec_To_v3alpha1_ConsulResolverSpec(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v2_ConsulResolver_To_v3alpha1_ConsulResolver is an autogenerated conversion function.
func Convert_v2_ConsulResolver_To_v3alpha1_ConsulResolver(in *ConsulResolver, out *v3alpha1.ConsulResolver, s conversion.Scope) error {
	return autoConvert_v2_ConsulResolver_To_v3alpha1_ConsulResolver(in, out, s)
}

func autoConvert_v3alpha1_ConsulResolver_To_v2_ConsulResolver(in *v3alpha1.ConsulResolver, out *ConsulResolver, s conversion.Scope) error {
	if true {
		in, out := &in.ObjectMeta, &out.ObjectMeta
		*out = *in
	}
	if true {
		in, out := &in.Spec, &out.Spec
		if err := Convert_v3alpha1_ConsulResolverSpec_To_v2_ConsulResolverSpec(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v3alpha1_ConsulResolver_To_v2_ConsulResolver is an autogenerated conversion function.
func Convert_v3alpha1_ConsulResolver_To_v2_ConsulResolver(in *v3alpha1.ConsulResolver, out *ConsulResolver, s conversion.Scope) error {
	return autoConvert_v3alpha1_ConsulResolver_To_v2_ConsulResolver(in, out, s)
}

func autoConvert_v2_ConsulResolverList_To_v3alpha1_ConsulResolverList(in *ConsulResolverList, out *v3alpha1.ConsulResolverList, s conversion.Scope) error {
	if true {
		in, out := &in.ListMeta, &out.ListMeta
		*out = *in
	}
	if true {
		in, out := &in.Items, &out.Items
		if *in == nil {
			*out = nil
		} else {
			*out = make([]v3alpha1.ConsulResolver, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v2_ConsulResolver_To_v3alpha1_ConsulResolver(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

// Convert_v2_ConsulResolverList_To_v3alpha1_ConsulResolverList is an autogenerated conversion function.
func Convert_v2_ConsulResolverList_To_v3alpha1_ConsulResolverList(in *ConsulResolverList, out *v3alpha1.ConsulResolverList, s conversion.Scope) error {
	return autoConvert_v2_ConsulResolverList_To_v3alpha1_ConsulResolverList(in, out, s)
}

func autoConvert_v3alpha1_ConsulResolverList_To_v2_ConsulResolverList(in *v3alpha1.ConsulResolverList, out *ConsulResolverList, s conversion.Scope) error {
	if true {
		in, out := &in.ListMeta, &out.ListMeta
		*out = *in
	}
	if true {
		in, out := &in.Items, &out.Items
		if *in == nil {
			*out = nil
		} else {
			*out = make([]ConsulResolver, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v3alpha1_ConsulResolver_To_v2_ConsulResolver(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

// Convert_v3alpha1_ConsulResolverList_To_v2_ConsulResolverList is an autogenerated conversion function.
func Convert_v3alpha1_ConsulResolverList_To_v2_ConsulResolverList(in *v3alpha1.ConsulResolverList, out *ConsulResolverList, s conversion.Scope) error {
	return autoConvert_v3alpha1_ConsulResolverList_To_v2_ConsulResolverList(in, out, s)
}

func autoConvert_v2_ConsulResolverSpec_To_v3alpha1_ConsulResolverSpec(in *ConsulResolverSpec, out *v3alpha1.ConsulResolverSpec, s conversion.Scope) error {
	if true {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		if err := Convert_v2_AmbassadorID_To_v3alpha1_AmbassadorID(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.Address, &out.Address
		*out = *in
	}
	if true {
		in, out := &in.Datacenter, &out.Datacenter
		*out = *in
	}
	return nil
}

// Convert_v2_ConsulResolverSpec_To_v3alpha1_ConsulResolverSpec is an autogenerated conversion function.
func Convert_v2_ConsulResolverSpec_To_v3alpha1_ConsulResolverSpec(in *ConsulResolverSpec, out *v3alpha1.ConsulResolverSpec, s conversion.Scope) error {
	return autoConvert_v2_ConsulResolverSpec_To_v3alpha1_ConsulResolverSpec(in, out, s)
}

func autoConvert_v3alpha1_ConsulResolverSpec_To_v2_ConsulResolverSpec(in *v3alpha1.ConsulResolverSpec, out *ConsulResolverSpec, s conversion.Scope) error {
	if true {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		if err := Convert_v3alpha1_AmbassadorID_To_v2_AmbassadorID(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.Address, &out.Address
		*out = *in
	}
	if true {
		in, out := &in.Datacenter, &out.Datacenter
		*out = *in
	}
	return nil
}

// Convert_v3alpha1_ConsulResolverSpec_To_v2_ConsulResolverSpec is an autogenerated conversion function.
func Convert_v3alpha1_ConsulResolverSpec_To_v2_ConsulResolverSpec(in *v3alpha1.ConsulResolverSpec, out *ConsulResolverSpec, s conversion.Scope) error {
	return autoConvert_v3alpha1_ConsulResolverSpec_To_v2_ConsulResolverSpec(in, out, s)
}

func autoConvert_v2_DevPortal_To_v3alpha1_DevPortal(in *DevPortal, out *v3alpha1.DevPortal, s conversion.Scope) error {
	if true {
		in, out := &in.ObjectMeta, &out.ObjectMeta
		*out = *in
	}
	if true {
		in, out := &in.Spec, &out.Spec
		if err := Convert_v2_DevPortalSpec_To_v3alpha1_DevPortalSpec(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v2_DevPortal_To_v3alpha1_DevPortal is an autogenerated conversion function.
func Convert_v2_DevPortal_To_v3alpha1_DevPortal(in *DevPortal, out *v3alpha1.DevPortal, s conversion.Scope) error {
	return autoConvert_v2_DevPortal_To_v3alpha1_DevPortal(in, out, s)
}

func autoConvert_v3alpha1_DevPortal_To_v2_DevPortal(in *v3alpha1.DevPortal, out *DevPortal, s conversion.Scope) error {
	if true {
		in, out := &in.ObjectMeta, &out.ObjectMeta
		*out = *in
	}
	if true {
		in, out := &in.Spec, &out.Spec
		if err := Convert_v3alpha1_DevPortalSpec_To_v2_DevPortalSpec(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v3alpha1_DevPortal_To_v2_DevPortal is an autogenerated conversion function.
func Convert_v3alpha1_DevPortal_To_v2_DevPortal(in *v3alpha1.DevPortal, out *DevPortal, s conversion.Scope) error {
	return autoConvert_v3alpha1_DevPortal_To_v2_DevPortal(in, out, s)
}

func autoConvert_v2_DevPortalContentSpec_To_v3alpha1_DevPortalContentSpec(in *DevPortalContentSpec, out *v3alpha1.DevPortalContentSpec, s conversion.Scope) error {
	*out = v3alpha1.DevPortalContentSpec(*in)
	return nil
}

// Convert_v2_DevPortalContentSpec_To_v3alpha1_DevPortalContentSpec is an autogenerated conversion function.
func Convert_v2_DevPortalContentSpec_To_v3alpha1_DevPortalContentSpec(in *DevPortalContentSpec, out *v3alpha1.DevPortalContentSpec, s conversion.Scope) error {
	return autoConvert_v2_DevPortalContentSpec_To_v3alpha1_DevPortalContentSpec(in, out, s)
}

func autoConvert_v3alpha1_DevPortalContentSpec_To_v2_DevPortalContentSpec(in *v3alpha1.DevPortalContentSpec, out *DevPortalContentSpec, s conversion.Scope) error {
	*out = DevPortalContentSpec(*in)
	return nil
}

// Convert_v3alpha1_DevPortalContentSpec_To_v2_DevPortalContentSpec is an autogenerated conversion function.
func Convert_v3alpha1_DevPortalContentSpec_To_v2_DevPortalContentSpec(in *v3alpha1.DevPortalContentSpec, out *DevPortalContentSpec, s conversion.Scope) error {
	return autoConvert_v3alpha1_DevPortalContentSpec_To_v2_DevPortalContentSpec(in, out, s)
}

func autoConvert_v2_DevPortalDocsSpec_To_v3alpha1_DevPortalDocsSpec(in *DevPortalDocsSpec, out *v3alpha1.DevPortalDocsSpec, s conversion.Scope) error {
	if true {
		in, out := &in.Service, &out.Service
		*out = *in
	}
	if true {
		in, out := &in.URL, &out.URL
		*out = *in
	}
	if true {
		in, out := &in.Timeout, &out.Timeout
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.MillisecondDuration)
			in, out := *in, *out
			if err := Convert_v2_MillisecondDuration_To_v3alpha1_MillisecondDuration(in, out, s); err != nil {
				return err
			}
		}
	}
	return nil
}

// Convert_v2_DevPortalDocsSpec_To_v3alpha1_DevPortalDocsSpec is an autogenerated conversion function.
func Convert_v2_DevPortalDocsSpec_To_v3alpha1_DevPortalDocsSpec(in *DevPortalDocsSpec, out *v3alpha1.DevPortalDocsSpec, s conversion.Scope) error {
	return autoConvert_v2_DevPortalDocsSpec_To_v3alpha1_DevPortalDocsSpec(in, out, s)
}

func autoConvert_v3alpha1_DevPortalDocsSpec_To_v2_DevPortalDocsSpec(in *v3alpha1.DevPortalDocsSpec, out *DevPortalDocsSpec, s conversion.Scope) error {
	if true {
		in, out := &in.Service, &out.Service
		*out = *in
	}
	if true {
		in, out := &in.URL, &out.URL
		*out = *in
	}
	if true {
		in, out := &in.Timeout, &out.Timeout
		if *in == nil {
			*out = nil
		} else {
			*out = new(MillisecondDuration)
			in, out := *in, *out
			if err := Convert_v3alpha1_MillisecondDuration_To_v2_MillisecondDuration(in, out, s); err != nil {
				return err
			}
		}
	}
	return nil
}

// Convert_v3alpha1_DevPortalDocsSpec_To_v2_DevPortalDocsSpec is an autogenerated conversion function.
func Convert_v3alpha1_DevPortalDocsSpec_To_v2_DevPortalDocsSpec(in *v3alpha1.DevPortalDocsSpec, out *DevPortalDocsSpec, s conversion.Scope) error {
	return autoConvert_v3alpha1_DevPortalDocsSpec_To_v2_DevPortalDocsSpec(in, out, s)
}

func autoConvert_v2_DevPortalList_To_v3alpha1_DevPortalList(in *DevPortalList, out *v3alpha1.DevPortalList, s conversion.Scope) error {
	if true {
		in, out := &in.ListMeta, &out.ListMeta
		*out = *in
	}
	if true {
		in, out := &in.Items, &out.Items
		if *in == nil {
			*out = nil
		} else {
			*out = make([]v3alpha1.DevPortal, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v2_DevPortal_To_v3alpha1_DevPortal(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

// Convert_v2_DevPortalList_To_v3alpha1_DevPortalList is an autogenerated conversion function.
func Convert_v2_DevPortalList_To_v3alpha1_DevPortalList(in *DevPortalList, out *v3alpha1.DevPortalList, s conversion.Scope) error {
	return autoConvert_v2_DevPortalList_To_v3alpha1_DevPortalList(in, out, s)
}

func autoConvert_v3alpha1_DevPortalList_To_v2_DevPortalList(in *v3alpha1.DevPortalList, out *DevPortalList, s conversion.Scope) error {
	if true {
		in, out := &in.ListMeta, &out.ListMeta
		*out = *in
	}
	if true {
		in, out := &in.Items, &out.Items
		if *in == nil {
			*out = nil
		} else {
			*out = make([]DevPortal, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v3alpha1_DevPortal_To_v2_DevPortal(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

// Convert_v3alpha1_DevPortalList_To_v2_DevPortalList is an autogenerated conversion function.
func Convert_v3alpha1_DevPortalList_To_v2_DevPortalList(in *v3alpha1.DevPortalList, out *DevPortalList, s conversion.Scope) error {
	return autoConvert_v3alpha1_DevPortalList_To_v2_DevPortalList(in, out, s)
}

func autoConvert_v2_DevPortalSearchSpec_To_v3alpha1_DevPortalSearchSpec(in *DevPortalSearchSpec, out *v3alpha1.DevPortalSearchSpec, s conversion.Scope) error {
	*out = v3alpha1.DevPortalSearchSpec(*in)
	return nil
}

// Convert_v2_DevPortalSearchSpec_To_v3alpha1_DevPortalSearchSpec is an autogenerated conversion function.
func Convert_v2_DevPortalSearchSpec_To_v3alpha1_DevPortalSearchSpec(in *DevPortalSearchSpec, out *v3alpha1.DevPortalSearchSpec, s conversion.Scope) error {
	return autoConvert_v2_DevPortalSearchSpec_To_v3alpha1_DevPortalSearchSpec(in, out, s)
}

func autoConvert_v3alpha1_DevPortalSearchSpec_To_v2_DevPortalSearchSpec(in *v3alpha1.DevPortalSearchSpec, out *DevPortalSearchSpec, s conversion.Scope) error {
	*out = DevPortalSearchSpec(*in)
	return nil
}

// Convert_v3alpha1_DevPortalSearchSpec_To_v2_DevPortalSearchSpec is an autogenerated conversion function.
func Convert_v3alpha1_DevPortalSearchSpec_To_v2_DevPortalSearchSpec(in *v3alpha1.DevPortalSearchSpec, out *DevPortalSearchSpec, s conversion.Scope) error {
	return autoConvert_v3alpha1_DevPortalSearchSpec_To_v2_DevPortalSearchSpec(in, out, s)
}

func autoConvert_v2_DevPortalSelectorSpec_To_v3alpha1_DevPortalSelectorSpec(in *DevPortalSelectorSpec, out *v3alpha1.DevPortalSelectorSpec, s conversion.Scope) error {
	*out = v3alpha1.DevPortalSelectorSpec(*in)
	return nil
}

// Convert_v2_DevPortalSelectorSpec_To_v3alpha1_DevPortalSelectorSpec is an autogenerated conversion function.
func Convert_v2_DevPortalSelectorSpec_To_v3alpha1_DevPortalSelectorSpec(in *DevPortalSelectorSpec, out *v3alpha1.DevPortalSelectorSpec, s conversion.Scope) error {
	return autoConvert_v2_DevPortalSelectorSpec_To_v3alpha1_DevPortalSelectorSpec(in, out, s)
}

func autoConvert_v3alpha1_DevPortalSelectorSpec_To_v2_DevPortalSelectorSpec(in *v3alpha1.DevPortalSelectorSpec, out *DevPortalSelectorSpec, s conversion.Scope) error {
	*out = DevPortalSelectorSpec(*in)
	return nil
}

// Convert_v3alpha1_DevPortalSelectorSpec_To_v2_DevPortalSelectorSpec is an autogenerated conversion function.
func Convert_v3alpha1_DevPortalSelectorSpec_To_v2_DevPortalSelectorSpec(in *v3alpha1.DevPortalSelectorSpec, out *DevPortalSelectorSpec, s conversion.Scope) error {
	return autoConvert_v3alpha1_DevPortalSelectorSpec_To_v2_DevPortalSelectorSpec(in, out, s)
}

func autoConvert_v2_DevPortalSpec_To_v3alpha1_DevPortalSpec(in *DevPortalSpec, out *v3alpha1.DevPortalSpec, s conversion.Scope) error {
	if true {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		if err := Convert_v2_AmbassadorID_To_v3alpha1_AmbassadorID(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.Default, &out.Default
		*out = *in
	}
	if true {
		in, out := &in.Content, &out.Content
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.DevPortalContentSpec)
			in, out := *in, *out
			if err := Convert_v2_DevPortalContentSpec_To_v3alpha1_DevPortalContentSpec(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.Docs, &out.Docs
		if *in == nil {
			*out = nil
		} else {
			*out = make([]*v3alpha1.DevPortalDocsSpec, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if *in == nil {
					*out = nil
				} else {
					*out = new(v3alpha1.DevPortalDocsSpec)
					in, out := *in, *out
					if err := Convert_v2_DevPortalDocsSpec_To_v3alpha1_DevPortalDocsSpec(in, out, s); err != nil {
						return err
					}
				}
			}
		}
	}
	if true {
		in, out := &in.Selector, &out.Selector
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.DevPortalSelectorSpec)
			in, out := *in, *out
			if err := Convert_v2_DevPortalSelectorSpec_To_v3alpha1_DevPortalSelectorSpec(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.NamingScheme, &out.NamingScheme
		*out = *in
	}
	if true {
		in, out := &in.Search, &out.Search
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.DevPortalSearchSpec)
			in, out := *in, *out
			if err := Convert_v2_DevPortalSearchSpec_To_v3alpha1_DevPortalSearchSpec(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.PreserveServers, &out.PreserveServers
		*out = *in
	}
	return nil
}

// Convert_v2_DevPortalSpec_To_v3alpha1_DevPortalSpec is an autogenerated conversion function.
func Convert_v2_DevPortalSpec_To_v3alpha1_DevPortalSpec(in *DevPortalSpec, out *v3alpha1.DevPortalSpec, s conversion.Scope) error {
	return autoConvert_v2_DevPortalSpec_To_v3alpha1_DevPortalSpec(in, out, s)
}

func autoConvert_v3alpha1_DevPortalSpec_To_v2_DevPortalSpec(in *v3alpha1.DevPortalSpec, out *DevPortalSpec, s conversion.Scope) error {
	if true {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		if err := Convert_v3alpha1_AmbassadorID_To_v2_AmbassadorID(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.Default, &out.Default
		*out = *in
	}
	if true {
		in, out := &in.Content, &out.Content
		if *in == nil {
			*out = nil
		} else {
			*out = new(DevPortalContentSpec)
			in, out := *in, *out
			if err := Convert_v3alpha1_DevPortalContentSpec_To_v2_DevPortalContentSpec(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.Docs, &out.Docs
		if *in == nil {
			*out = nil
		} else {
			*out = make([]*DevPortalDocsSpec, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if *in == nil {
					*out = nil
				} else {
					*out = new(DevPortalDocsSpec)
					in, out := *in, *out
					if err := Convert_v3alpha1_DevPortalDocsSpec_To_v2_DevPortalDocsSpec(in, out, s); err != nil {
						return err
					}
				}
			}
		}
	}
	if true {
		in, out := &in.Selector, &out.Selector
		if *in == nil {
			*out = nil
		} else {
			*out = new(DevPortalSelectorSpec)
			in, out := *in, *out
			if err := Convert_v3alpha1_DevPortalSelectorSpec_To_v2_DevPortalSelectorSpec(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.NamingScheme, &out.NamingScheme
		*out = *in
	}
	if true {
		in, out := &in.Search, &out.Search
		if *in == nil {
			*out = nil
		} else {
			*out = new(DevPortalSearchSpec)
			in, out := *in, *out
			if err := Convert_v3alpha1_DevPortalSearchSpec_To_v2_DevPortalSearchSpec(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.PreserveServers, &out.PreserveServers
		*out = *in
	}
	return nil
}

// Convert_v3alpha1_DevPortalSpec_To_v2_DevPortalSpec is an autogenerated conversion function.
func Convert_v3alpha1_DevPortalSpec_To_v2_DevPortalSpec(in *v3alpha1.DevPortalSpec, out *DevPortalSpec, s conversion.Scope) error {
	return autoConvert_v3alpha1_DevPortalSpec_To_v2_DevPortalSpec(in, out, s)
}

func autoConvert_v2_DocsInfo_To_v3alpha1_DocsInfo(in *DocsInfo, out *v3alpha1.DocsInfo, s conversion.Scope) error {
	if true {
		in, out := &in.Path, &out.Path
		*out = *in
	}
	if true {
		in, out := &in.URL, &out.URL
		*out = *in
	}
	if true {
		in, out := &in.Ignored, &out.Ignored
		*out = *in
	}
	if true {
		in, out := &in.DisplayName, &out.DisplayName
		*out = *in
	}
	if true {
		in, out := &in.Timeout, &out.Timeout
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.MillisecondDuration)
			in, out := *in, *out
			if err := Convert_v2_MillisecondDuration_To_v3alpha1_MillisecondDuration(in, out, s); err != nil {
				return err
			}
		}
	}
	return nil
}

// Convert_v2_DocsInfo_To_v3alpha1_DocsInfo is an autogenerated conversion function.
func Convert_v2_DocsInfo_To_v3alpha1_DocsInfo(in *DocsInfo, out *v3alpha1.DocsInfo, s conversion.Scope) error {
	return autoConvert_v2_DocsInfo_To_v3alpha1_DocsInfo(in, out, s)
}

func autoConvert_v3alpha1_DocsInfo_To_v2_DocsInfo(in *v3alpha1.DocsInfo, out *DocsInfo, s conversion.Scope) error {
	if true {
		in, out := &in.Path, &out.Path
		*out = *in
	}
	if true {
		in, out := &in.URL, &out.URL
		*out = *in
	}
	if true {
		in, out := &in.Ignored, &out.Ignored
		*out = *in
	}
	if true {
		in, out := &in.DisplayName, &out.DisplayName
		*out = *in
	}
	if true {
		in, out := &in.Timeout, &out.Timeout
		if *in == nil {
			*out = nil
		} else {
			*out = new(MillisecondDuration)
			in, out := *in, *out
			if err := Convert_v3alpha1_MillisecondDuration_To_v2_MillisecondDuration(in, out, s); err != nil {
				return err
			}
		}
	}
	return nil
}

// Convert_v3alpha1_DocsInfo_To_v2_DocsInfo is an autogenerated conversion function.
func Convert_v3alpha1_DocsInfo_To_v2_DocsInfo(in *v3alpha1.DocsInfo, out *DocsInfo, s conversion.Scope) error {
	return autoConvert_v3alpha1_DocsInfo_To_v2_DocsInfo(in, out, s)
}

func autoConvert_v2_DomainMap_To_v3alpha1_DomainMap(in *DomainMap, out *v3alpha1.DomainMap, s conversion.Scope) error {
	if *in == nil {
		*out = nil
	} else {
		*out = make(v3alpha1.DomainMap, len(*in))
		for inKey, inVal := range *in {
			outKey := new(string)
			if true {
				in, out := &inKey, outKey
				*out = *in
			}
			outVal := new(v3alpha1.MappingLabelGroupsArray)
			if true {
				in, out := &inVal, outVal
				if err := Convert_v2_MappingLabelGroupsArray_To_v3alpha1_MappingLabelGroupsArray(in, out, s); err != nil {
					return err
				}
			}
			(*out)[*outKey] = *outVal
		}
	}
	return nil
}

// Convert_v2_DomainMap_To_v3alpha1_DomainMap is an autogenerated conversion function.
func Convert_v2_DomainMap_To_v3alpha1_DomainMap(in *DomainMap, out *v3alpha1.DomainMap, s conversion.Scope) error {
	return autoConvert_v2_DomainMap_To_v3alpha1_DomainMap(in, out, s)
}

func autoConvert_v3alpha1_DomainMap_To_v2_DomainMap(in *v3alpha1.DomainMap, out *DomainMap, s conversion.Scope) error {
	if *in == nil {
		*out = nil
	} else {
		*out = make(DomainMap, len(*in))
		for inKey, inVal := range *in {
			outKey := new(string)
			if true {
				in, out := &inKey, outKey
				*out = *in
			}
			outVal := new(MappingLabelGroupsArray)
			if true {
				in, out := &inVal, outVal
				if err := Convert_v3alpha1_MappingLabelGroupsArray_To_v2_MappingLabelGroupsArray(in, out, s); err != nil {
					return err
				}
			}
			(*out)[*outKey] = *outVal
		}
	}
	return nil
}

// Convert_v3alpha1_DomainMap_To_v2_DomainMap is an autogenerated conversion function.
func Convert_v3alpha1_DomainMap_To_v2_DomainMap(in *v3alpha1.DomainMap, out *DomainMap, s conversion.Scope) error {
	return autoConvert_v3alpha1_DomainMap_To_v2_DomainMap(in, out, s)
}

func autoConvert_v2_DriverConfig_To_v3alpha1_DriverConfig(in *DriverConfig, out *v3alpha1.DriverConfig, s conversion.Scope) error {
	if true {
		in, out := &in.AdditionalLogHeaders, &out.AdditionalLogHeaders
		if *in == nil {
			*out = nil
		} else {
			*out = make([]*v3alpha1.AdditionalLogHeaders, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if *in == nil {
					*out = nil
				} else {
					*out = new(v3alpha1.AdditionalLogHeaders)
					in, out := *in, *out
					if err := Convert_v2_AdditionalLogHeaders_To_v3alpha1_AdditionalLogHeaders(in, out, s); err != nil {
						return err
					}
				}
			}
		}
	}
	return nil
}

// Convert_v2_DriverConfig_To_v3alpha1_DriverConfig is an autogenerated conversion function.
func Convert_v2_DriverConfig_To_v3alpha1_DriverConfig(in *DriverConfig, out *v3alpha1.DriverConfig, s conversion.Scope) error {
	return autoConvert_v2_DriverConfig_To_v3alpha1_DriverConfig(in, out, s)
}

func autoConvert_v3alpha1_DriverConfig_To_v2_DriverConfig(in *v3alpha1.DriverConfig, out *DriverConfig, s conversion.Scope) error {
	if true {
		in, out := &in.AdditionalLogHeaders, &out.AdditionalLogHeaders
		if *in == nil {
			*out = nil
		} else {
			*out = make([]*AdditionalLogHeaders, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if *in == nil {
					*out = nil
				} else {
					*out = new(AdditionalLogHeaders)
					in, out := *in, *out
					if err := Convert_v3alpha1_AdditionalLogHeaders_To_v2_AdditionalLogHeaders(in, out, s); err != nil {
						return err
					}
				}
			}
		}
	}
	return nil
}

// Convert_v3alpha1_DriverConfig_To_v2_DriverConfig is an autogenerated conversion function.
func Convert_v3alpha1_DriverConfig_To_v2_DriverConfig(in *v3alpha1.DriverConfig, out *DriverConfig, s conversion.Scope) error {
	return autoConvert_v3alpha1_DriverConfig_To_v2_DriverConfig(in, out, s)
}

func autoConvert_v2_ErrorResponseOverride_To_v3alpha1_ErrorResponseOverride(in *ErrorResponseOverride, out *v3alpha1.ErrorResponseOverride, s conversion.Scope) error {
	if true {
		in, out := &in.OnStatusCode, &out.OnStatusCode
		*out = *in
	}
	if true {
		in, out := &in.Body, &out.Body
		if err := Convert_v2_ErrorResponseOverrideBody_To_v3alpha1_ErrorResponseOverrideBody(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v2_ErrorResponseOverride_To_v3alpha1_ErrorResponseOverride is an autogenerated conversion function.
func Convert_v2_ErrorResponseOverride_To_v3alpha1_ErrorResponseOverride(in *ErrorResponseOverride, out *v3alpha1.ErrorResponseOverride, s conversion.Scope) error {
	return autoConvert_v2_ErrorResponseOverride_To_v3alpha1_ErrorResponseOverride(in, out, s)
}

func autoConvert_v3alpha1_ErrorResponseOverride_To_v2_ErrorResponseOverride(in *v3alpha1.ErrorResponseOverride, out *ErrorResponseOverride, s conversion.Scope) error {
	if true {
		in, out := &in.OnStatusCode, &out.OnStatusCode
		*out = *in
	}
	if true {
		in, out := &in.Body, &out.Body
		if err := Convert_v3alpha1_ErrorResponseOverrideBody_To_v2_ErrorResponseOverrideBody(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v3alpha1_ErrorResponseOverride_To_v2_ErrorResponseOverride is an autogenerated conversion function.
func Convert_v3alpha1_ErrorResponseOverride_To_v2_ErrorResponseOverride(in *v3alpha1.ErrorResponseOverride, out *ErrorResponseOverride, s conversion.Scope) error {
	return autoConvert_v3alpha1_ErrorResponseOverride_To_v2_ErrorResponseOverride(in, out, s)
}

func autoConvert_v2_ErrorResponseOverrideBody_To_v3alpha1_ErrorResponseOverrideBody(in *ErrorResponseOverrideBody, out *v3alpha1.ErrorResponseOverrideBody, s conversion.Scope) error {
	if true {
		in, out := &in.ErrorResponseTextFormat, &out.ErrorResponseTextFormat
		*out = *in
	}
	if true {
		in, out := &in.ErrorResponseJsonFormat, &out.ErrorResponseJsonFormat
		*out = *in
	}
	if true {
		in, out := &in.ErrorResponseTextFormatSource, &out.ErrorResponseTextFormatSource
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.ErrorResponseTextFormatSource)
			in, out := *in, *out
			if err := Convert_v2_ErrorResponseTextFormatSource_To_v3alpha1_ErrorResponseTextFormatSource(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.ContentType, &out.ContentType
		*out = *in
	}
	return nil
}

// Convert_v2_ErrorResponseOverrideBody_To_v3alpha1_ErrorResponseOverrideBody is an autogenerated conversion function.
func Convert_v2_ErrorResponseOverrideBody_To_v3alpha1_ErrorResponseOverrideBody(in *ErrorResponseOverrideBody, out *v3alpha1.ErrorResponseOverrideBody, s conversion.Scope) error {
	return autoConvert_v2_ErrorResponseOverrideBody_To_v3alpha1_ErrorResponseOverrideBody(in, out, s)
}

func autoConvert_v3alpha1_ErrorResponseOverrideBody_To_v2_ErrorResponseOverrideBody(in *v3alpha1.ErrorResponseOverrideBody, out *ErrorResponseOverrideBody, s conversion.Scope) error {
	if true {
		in, out := &in.ErrorResponseTextFormat, &out.ErrorResponseTextFormat
		*out = *in
	}
	if true {
		in, out := &in.ErrorResponseJsonFormat, &out.ErrorResponseJsonFormat
		*out = *in
	}
	if true {
		in, out := &in.ErrorResponseTextFormatSource, &out.ErrorResponseTextFormatSource
		if *in == nil {
			*out = nil
		} else {
			*out = new(ErrorResponseTextFormatSource)
			in, out := *in, *out
			if err := Convert_v3alpha1_ErrorResponseTextFormatSource_To_v2_ErrorResponseTextFormatSource(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.ContentType, &out.ContentType
		*out = *in
	}
	return nil
}

// Convert_v3alpha1_ErrorResponseOverrideBody_To_v2_ErrorResponseOverrideBody is an autogenerated conversion function.
func Convert_v3alpha1_ErrorResponseOverrideBody_To_v2_ErrorResponseOverrideBody(in *v3alpha1.ErrorResponseOverrideBody, out *ErrorResponseOverrideBody, s conversion.Scope) error {
	return autoConvert_v3alpha1_ErrorResponseOverrideBody_To_v2_ErrorResponseOverrideBody(in, out, s)
}

func autoConvert_v2_ErrorResponseTextFormatSource_To_v3alpha1_ErrorResponseTextFormatSource(in *ErrorResponseTextFormatSource, out *v3alpha1.ErrorResponseTextFormatSource, s conversion.Scope) error {
	*out = v3alpha1.ErrorResponseTextFormatSource(*in)
	return nil
}

// Convert_v2_ErrorResponseTextFormatSource_To_v3alpha1_ErrorResponseTextFormatSource is an autogenerated conversion function.
func Convert_v2_ErrorResponseTextFormatSource_To_v3alpha1_ErrorResponseTextFormatSource(in *ErrorResponseTextFormatSource, out *v3alpha1.ErrorResponseTextFormatSource, s conversion.Scope) error {
	return autoConvert_v2_ErrorResponseTextFormatSource_To_v3alpha1_ErrorResponseTextFormatSource(in, out, s)
}

func autoConvert_v3alpha1_ErrorResponseTextFormatSource_To_v2_ErrorResponseTextFormatSource(in *v3alpha1.ErrorResponseTextFormatSource, out *ErrorResponseTextFormatSource, s conversion.Scope) error {
	*out = ErrorResponseTextFormatSource(*in)
	return nil
}

// Convert_v3alpha1_ErrorResponseTextFormatSource_To_v2_ErrorResponseTextFormatSource is an autogenerated conversion function.
func Convert_v3alpha1_ErrorResponseTextFormatSource_To_v2_ErrorResponseTextFormatSource(in *v3alpha1.ErrorResponseTextFormatSource, out *ErrorResponseTextFormatSource, s conversion.Scope) error {
	return autoConvert_v3alpha1_ErrorResponseTextFormatSource_To_v2_ErrorResponseTextFormatSource(in, out, s)
}

func autoConvert_v2_Host_To_v3alpha1_Host(in *Host, out *v3alpha1.Host, s conversion.Scope) error {
	if true {
		in, out := &in.ObjectMeta, &out.ObjectMeta
		*out = *in
	}
	if true {
		in, out := &in.Spec, &out.Spec
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.HostSpec)
			in, out := *in, *out
			if err := Convert_v2_HostSpec_To_v3alpha1_HostSpec(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.Status, &out.Status
		if err := Convert_v2_HostStatus_To_v3alpha1_HostStatus(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v2_Host_To_v3alpha1_Host is an autogenerated conversion function.
func Convert_v2_Host_To_v3alpha1_Host(in *Host, out *v3alpha1.Host, s conversion.Scope) error {
	return autoConvert_v2_Host_To_v3alpha1_Host(in, out, s)
}

func autoConvert_v3alpha1_Host_To_v2_Host(in *v3alpha1.Host, out *Host, s conversion.Scope) error {
	if true {
		in, out := &in.ObjectMeta, &out.ObjectMeta
		*out = *in
	}
	if true {
		in, out := &in.Spec, &out.Spec
		if *in == nil {
			*out = nil
		} else {
			*out = new(HostSpec)
			in, out := *in, *out
			if err := Convert_v3alpha1_HostSpec_To_v2_HostSpec(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.Status, &out.Status
		if err := Convert_v3alpha1_HostStatus_To_v2_HostStatus(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v3alpha1_Host_To_v2_Host is an autogenerated conversion function.
func Convert_v3alpha1_Host_To_v2_Host(in *v3alpha1.Host, out *Host, s conversion.Scope) error {
	return autoConvert_v3alpha1_Host_To_v2_Host(in, out, s)
}

func autoConvert_v2_HostList_To_v3alpha1_HostList(in *HostList, out *v3alpha1.HostList, s conversion.Scope) error {
	if true {
		in, out := &in.ListMeta, &out.ListMeta
		*out = *in
	}
	if true {
		in, out := &in.Items, &out.Items
		if *in == nil {
			*out = nil
		} else {
			*out = make([]v3alpha1.Host, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v2_Host_To_v3alpha1_Host(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

// Convert_v2_HostList_To_v3alpha1_HostList is an autogenerated conversion function.
func Convert_v2_HostList_To_v3alpha1_HostList(in *HostList, out *v3alpha1.HostList, s conversion.Scope) error {
	return autoConvert_v2_HostList_To_v3alpha1_HostList(in, out, s)
}

func autoConvert_v3alpha1_HostList_To_v2_HostList(in *v3alpha1.HostList, out *HostList, s conversion.Scope) error {
	if true {
		in, out := &in.ListMeta, &out.ListMeta
		*out = *in
	}
	if true {
		in, out := &in.Items, &out.Items
		if *in == nil {
			*out = nil
		} else {
			*out = make([]Host, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v3alpha1_Host_To_v2_Host(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

// Convert_v3alpha1_HostList_To_v2_HostList is an autogenerated conversion function.
func Convert_v3alpha1_HostList_To_v2_HostList(in *v3alpha1.HostList, out *HostList, s conversion.Scope) error {
	return autoConvert_v3alpha1_HostList_To_v2_HostList(in, out, s)
}

func autoConvert_v2_HostPhase_To_v3alpha1_HostPhase(in *HostPhase, out *v3alpha1.HostPhase, s conversion.Scope) error {
	*out = v3alpha1.HostPhase(*in)
	return nil
}

// Convert_v2_HostPhase_To_v3alpha1_HostPhase is an autogenerated conversion function.
func Convert_v2_HostPhase_To_v3alpha1_HostPhase(in *HostPhase, out *v3alpha1.HostPhase, s conversion.Scope) error {
	return autoConvert_v2_HostPhase_To_v3alpha1_HostPhase(in, out, s)
}

func autoConvert_v3alpha1_HostPhase_To_v2_HostPhase(in *v3alpha1.HostPhase, out *HostPhase, s conversion.Scope) error {
	*out = HostPhase(*in)
	return nil
}

// Convert_v3alpha1_HostPhase_To_v2_HostPhase is an autogenerated conversion function.
func Convert_v3alpha1_HostPhase_To_v2_HostPhase(in *v3alpha1.HostPhase, out *HostPhase, s conversion.Scope) error {
	return autoConvert_v3alpha1_HostPhase_To_v2_HostPhase(in, out, s)
}

func autoConvert_v2_HostSpec_To_v3alpha1_HostSpec(in *HostSpec, out *v3alpha1.HostSpec, s conversion.Scope) error {
	if true {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		if err := Convert_v2_AmbassadorID_To_v3alpha1_AmbassadorID(in, out, s); err != nil {
			return err
		}
	}
	// WARNING: in.DeprecatedAmbassadorID requires manual conversion: does not exist in peer-type
	if true {
		in, out := &in.Hostname, &out.Hostname
		*out = *in
	}
	if true {
		in, out := &in.Selector, &out.MappingSelector
		*out = *in
	}
	if true {
		in, out := &in.AcmeProvider, &out.AcmeProvider
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.ACMEProviderSpec)
			in, out := *in, *out
			if err := Convert_v2_ACMEProviderSpec_To_v3alpha1_ACMEProviderSpec(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.TLSSecret, &out.TLSSecret
		*out = *in
	}
	if true {
		in, out := &in.RequestPolicy, &out.RequestPolicy
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.RequestPolicy)
			in, out := *in, *out
			if err := Convert_v2_RequestPolicy_To_v3alpha1_RequestPolicy(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.PreviewUrl, &out.PreviewUrl
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.PreviewURLSpec)
			in, out := *in, *out
			if err := Convert_v2_PreviewURLSpec_To_v3alpha1_PreviewURLSpec(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.TLSContext, &out.TLSContext
		*out = *in
	}
	if true {
		in, out := &in.TLS, &out.TLS
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.TLSConfig)
			in, out := *in, *out
			if err := Convert_v2_TLSConfig_To_v3alpha1_TLSConfig(in, out, s); err != nil {
				return err
			}
		}
	}
	return nil
}

func autoConvert_v3alpha1_HostSpec_To_v2_HostSpec(in *v3alpha1.HostSpec, out *HostSpec, s conversion.Scope) error {
	if true {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		if err := Convert_v3alpha1_AmbassadorID_To_v2_AmbassadorID(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.Hostname, &out.Hostname
		*out = *in
	}
	// WARNING: in.DeprecatedSelector requires manual conversion: does not exist in peer-type
	if true {
		in, out := &in.MappingSelector, &out.Selector
		*out = *in
	}
	if true {
		in, out := &in.AcmeProvider, &out.AcmeProvider
		if *in == nil {
			*out = nil
		} else {
			*out = new(ACMEProviderSpec)
			in, out := *in, *out
			if err := Convert_v3alpha1_ACMEProviderSpec_To_v2_ACMEProviderSpec(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.TLSSecret, &out.TLSSecret
		*out = *in
	}
	if true {
		in, out := &in.RequestPolicy, &out.RequestPolicy
		if *in == nil {
			*out = nil
		} else {
			*out = new(RequestPolicy)
			in, out := *in, *out
			if err := Convert_v3alpha1_RequestPolicy_To_v2_RequestPolicy(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.PreviewUrl, &out.PreviewUrl
		if *in == nil {
			*out = nil
		} else {
			*out = new(PreviewURLSpec)
			in, out := *in, *out
			if err := Convert_v3alpha1_PreviewURLSpec_To_v2_PreviewURLSpec(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.TLSContext, &out.TLSContext
		*out = *in
	}
	if true {
		in, out := &in.TLS, &out.TLS
		if *in == nil {
			*out = nil
		} else {
			*out = new(TLSConfig)
			in, out := *in, *out
			if err := Convert_v3alpha1_TLSConfig_To_v2_TLSConfig(in, out, s); err != nil {
				return err
			}
		}
	}
	return nil
}

func autoConvert_v2_HostState_To_v3alpha1_HostState(in *HostState, out *v3alpha1.HostState, s conversion.Scope) error {
	*out = v3alpha1.HostState(*in)
	return nil
}

// Convert_v2_HostState_To_v3alpha1_HostState is an autogenerated conversion function.
func Convert_v2_HostState_To_v3alpha1_HostState(in *HostState, out *v3alpha1.HostState, s conversion.Scope) error {
	return autoConvert_v2_HostState_To_v3alpha1_HostState(in, out, s)
}

func autoConvert_v3alpha1_HostState_To_v2_HostState(in *v3alpha1.HostState, out *HostState, s conversion.Scope) error {
	*out = HostState(*in)
	return nil
}

// Convert_v3alpha1_HostState_To_v2_HostState is an autogenerated conversion function.
func Convert_v3alpha1_HostState_To_v2_HostState(in *v3alpha1.HostState, out *HostState, s conversion.Scope) error {
	return autoConvert_v3alpha1_HostState_To_v2_HostState(in, out, s)
}

func autoConvert_v2_HostStatus_To_v3alpha1_HostStatus(in *HostStatus, out *v3alpha1.HostStatus, s conversion.Scope) error {
	if true {
		in, out := &in.TLSCertificateSource, &out.TLSCertificateSource
		if err := Convert_v2_HostTLSCertificateSource_To_v3alpha1_HostTLSCertificateSource(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.State, &out.State
		if err := Convert_v2_HostState_To_v3alpha1_HostState(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.PhaseCompleted, &out.PhaseCompleted
		if err := Convert_v2_HostPhase_To_v3alpha1_HostPhase(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.PhasePending, &out.PhasePending
		if err := Convert_v2_HostPhase_To_v3alpha1_HostPhase(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.ErrorReason, &out.ErrorReason
		*out = *in
	}
	if true {
		in, out := &in.ErrorTimestamp, &out.ErrorTimestamp
		*out = *in
	}
	if true {
		in, out := &in.ErrorBackoff, &out.ErrorBackoff
		*out = *in
	}
	return nil
}

// Convert_v2_HostStatus_To_v3alpha1_HostStatus is an autogenerated conversion function.
func Convert_v2_HostStatus_To_v3alpha1_HostStatus(in *HostStatus, out *v3alpha1.HostStatus, s conversion.Scope) error {
	return autoConvert_v2_HostStatus_To_v3alpha1_HostStatus(in, out, s)
}

func autoConvert_v3alpha1_HostStatus_To_v2_HostStatus(in *v3alpha1.HostStatus, out *HostStatus, s conversion.Scope) error {
	if true {
		in, out := &in.TLSCertificateSource, &out.TLSCertificateSource
		if err := Convert_v3alpha1_HostTLSCertificateSource_To_v2_HostTLSCertificateSource(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.State, &out.State
		if err := Convert_v3alpha1_HostState_To_v2_HostState(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.PhaseCompleted, &out.PhaseCompleted
		if err := Convert_v3alpha1_HostPhase_To_v2_HostPhase(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.PhasePending, &out.PhasePending
		if err := Convert_v3alpha1_HostPhase_To_v2_HostPhase(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.ErrorReason, &out.ErrorReason
		*out = *in
	}
	if true {
		in, out := &in.ErrorTimestamp, &out.ErrorTimestamp
		*out = *in
	}
	if true {
		in, out := &in.ErrorBackoff, &out.ErrorBackoff
		*out = *in
	}
	return nil
}

// Convert_v3alpha1_HostStatus_To_v2_HostStatus is an autogenerated conversion function.
func Convert_v3alpha1_HostStatus_To_v2_HostStatus(in *v3alpha1.HostStatus, out *HostStatus, s conversion.Scope) error {
	return autoConvert_v3alpha1_HostStatus_To_v2_HostStatus(in, out, s)
}

func autoConvert_v2_HostTLSCertificateSource_To_v3alpha1_HostTLSCertificateSource(in *HostTLSCertificateSource, out *v3alpha1.HostTLSCertificateSource, s conversion.Scope) error {
	*out = v3alpha1.HostTLSCertificateSource(*in)
	return nil
}

// Convert_v2_HostTLSCertificateSource_To_v3alpha1_HostTLSCertificateSource is an autogenerated conversion function.
func Convert_v2_HostTLSCertificateSource_To_v3alpha1_HostTLSCertificateSource(in *HostTLSCertificateSource, out *v3alpha1.HostTLSCertificateSource, s conversion.Scope) error {
	return autoConvert_v2_HostTLSCertificateSource_To_v3alpha1_HostTLSCertificateSource(in, out, s)
}

func autoConvert_v3alpha1_HostTLSCertificateSource_To_v2_HostTLSCertificateSource(in *v3alpha1.HostTLSCertificateSource, out *HostTLSCertificateSource, s conversion.Scope) error {
	*out = HostTLSCertificateSource(*in)
	return nil
}

// Convert_v3alpha1_HostTLSCertificateSource_To_v2_HostTLSCertificateSource is an autogenerated conversion function.
func Convert_v3alpha1_HostTLSCertificateSource_To_v2_HostTLSCertificateSource(in *v3alpha1.HostTLSCertificateSource, out *HostTLSCertificateSource, s conversion.Scope) error {
	return autoConvert_v3alpha1_HostTLSCertificateSource_To_v2_HostTLSCertificateSource(in, out, s)
}

func autoConvert_v2_InsecureRequestPolicy_To_v3alpha1_InsecureRequestPolicy(in *InsecureRequestPolicy, out *v3alpha1.InsecureRequestPolicy, s conversion.Scope) error {
	*out = v3alpha1.InsecureRequestPolicy(*in)
	return nil
}

// Convert_v2_InsecureRequestPolicy_To_v3alpha1_InsecureRequestPolicy is an autogenerated conversion function.
func Convert_v2_InsecureRequestPolicy_To_v3alpha1_InsecureRequestPolicy(in *InsecureRequestPolicy, out *v3alpha1.InsecureRequestPolicy, s conversion.Scope) error {
	return autoConvert_v2_InsecureRequestPolicy_To_v3alpha1_InsecureRequestPolicy(in, out, s)
}

func autoConvert_v3alpha1_InsecureRequestPolicy_To_v2_InsecureRequestPolicy(in *v3alpha1.InsecureRequestPolicy, out *InsecureRequestPolicy, s conversion.Scope) error {
	*out = InsecureRequestPolicy(*in)
	return nil
}

// Convert_v3alpha1_InsecureRequestPolicy_To_v2_InsecureRequestPolicy is an autogenerated conversion function.
func Convert_v3alpha1_InsecureRequestPolicy_To_v2_InsecureRequestPolicy(in *v3alpha1.InsecureRequestPolicy, out *InsecureRequestPolicy, s conversion.Scope) error {
	return autoConvert_v3alpha1_InsecureRequestPolicy_To_v2_InsecureRequestPolicy(in, out, s)
}

func autoConvert_v2_KeepAlive_To_v3alpha1_KeepAlive(in *KeepAlive, out *v3alpha1.KeepAlive, s conversion.Scope) error {
	*out = v3alpha1.KeepAlive(*in)
	return nil
}

// Convert_v2_KeepAlive_To_v3alpha1_KeepAlive is an autogenerated conversion function.
func Convert_v2_KeepAlive_To_v3alpha1_KeepAlive(in *KeepAlive, out *v3alpha1.KeepAlive, s conversion.Scope) error {
	return autoConvert_v2_KeepAlive_To_v3alpha1_KeepAlive(in, out, s)
}

func autoConvert_v3alpha1_KeepAlive_To_v2_KeepAlive(in *v3alpha1.KeepAlive, out *KeepAlive, s conversion.Scope) error {
	*out = KeepAlive(*in)
	return nil
}

// Convert_v3alpha1_KeepAlive_To_v2_KeepAlive is an autogenerated conversion function.
func Convert_v3alpha1_KeepAlive_To_v2_KeepAlive(in *v3alpha1.KeepAlive, out *KeepAlive, s conversion.Scope) error {
	return autoConvert_v3alpha1_KeepAlive_To_v2_KeepAlive(in, out, s)
}

func autoConvert_v2_KubernetesEndpointResolver_To_v3alpha1_KubernetesEndpointResolver(in *KubernetesEndpointResolver, out *v3alpha1.KubernetesEndpointResolver, s conversion.Scope) error {
	if true {
		in, out := &in.ObjectMeta, &out.ObjectMeta
		*out = *in
	}
	if true {
		in, out := &in.Spec, &out.Spec
		if err := Convert_v2_KubernetesEndpointResolverSpec_To_v3alpha1_KubernetesEndpointResolverSpec(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v2_KubernetesEndpointResolver_To_v3alpha1_KubernetesEndpointResolver is an autogenerated conversion function.
func Convert_v2_KubernetesEndpointResolver_To_v3alpha1_KubernetesEndpointResolver(in *KubernetesEndpointResolver, out *v3alpha1.KubernetesEndpointResolver, s conversion.Scope) error {
	return autoConvert_v2_KubernetesEndpointResolver_To_v3alpha1_KubernetesEndpointResolver(in, out, s)
}

func autoConvert_v3alpha1_KubernetesEndpointResolver_To_v2_KubernetesEndpointResolver(in *v3alpha1.KubernetesEndpointResolver, out *KubernetesEndpointResolver, s conversion.Scope) error {
	if true {
		in, out := &in.ObjectMeta, &out.ObjectMeta
		*out = *in
	}
	if true {
		in, out := &in.Spec, &out.Spec
		if err := Convert_v3alpha1_KubernetesEndpointResolverSpec_To_v2_KubernetesEndpointResolverSpec(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v3alpha1_KubernetesEndpointResolver_To_v2_KubernetesEndpointResolver is an autogenerated conversion function.
func Convert_v3alpha1_KubernetesEndpointResolver_To_v2_KubernetesEndpointResolver(in *v3alpha1.KubernetesEndpointResolver, out *KubernetesEndpointResolver, s conversion.Scope) error {
	return autoConvert_v3alpha1_KubernetesEndpointResolver_To_v2_KubernetesEndpointResolver(in, out, s)
}

func autoConvert_v2_KubernetesEndpointResolverList_To_v3alpha1_KubernetesEndpointResolverList(in *KubernetesEndpointResolverList, out *v3alpha1.KubernetesEndpointResolverList, s conversion.Scope) error {
	if true {
		in, out := &in.ListMeta, &out.ListMeta
		*out = *in
	}
	if true {
		in, out := &in.Items, &out.Items
		if *in == nil {
			*out = nil
		} else {
			*out = make([]v3alpha1.KubernetesEndpointResolver, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v2_KubernetesEndpointResolver_To_v3alpha1_KubernetesEndpointResolver(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

// Convert_v2_KubernetesEndpointResolverList_To_v3alpha1_KubernetesEndpointResolverList is an autogenerated conversion function.
func Convert_v2_KubernetesEndpointResolverList_To_v3alpha1_KubernetesEndpointResolverList(in *KubernetesEndpointResolverList, out *v3alpha1.KubernetesEndpointResolverList, s conversion.Scope) error {
	return autoConvert_v2_KubernetesEndpointResolverList_To_v3alpha1_KubernetesEndpointResolverList(in, out, s)
}

func autoConvert_v3alpha1_KubernetesEndpointResolverList_To_v2_KubernetesEndpointResolverList(in *v3alpha1.KubernetesEndpointResolverList, out *KubernetesEndpointResolverList, s conversion.Scope) error {
	if true {
		in, out := &in.ListMeta, &out.ListMeta
		*out = *in
	}
	if true {
		in, out := &in.Items, &out.Items
		if *in == nil {
			*out = nil
		} else {
			*out = make([]KubernetesEndpointResolver, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v3alpha1_KubernetesEndpointResolver_To_v2_KubernetesEndpointResolver(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

// Convert_v3alpha1_KubernetesEndpointResolverList_To_v2_KubernetesEndpointResolverList is an autogenerated conversion function.
func Convert_v3alpha1_KubernetesEndpointResolverList_To_v2_KubernetesEndpointResolverList(in *v3alpha1.KubernetesEndpointResolverList, out *KubernetesEndpointResolverList, s conversion.Scope) error {
	return autoConvert_v3alpha1_KubernetesEndpointResolverList_To_v2_KubernetesEndpointResolverList(in, out, s)
}

func autoConvert_v2_KubernetesEndpointResolverSpec_To_v3alpha1_KubernetesEndpointResolverSpec(in *KubernetesEndpointResolverSpec, out *v3alpha1.KubernetesEndpointResolverSpec, s conversion.Scope) error {
	if true {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		if err := Convert_v2_AmbassadorID_To_v3alpha1_AmbassadorID(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v2_KubernetesEndpointResolverSpec_To_v3alpha1_KubernetesEndpointResolverSpec is an autogenerated conversion function.
func Convert_v2_KubernetesEndpointResolverSpec_To_v3alpha1_KubernetesEndpointResolverSpec(in *KubernetesEndpointResolverSpec, out *v3alpha1.KubernetesEndpointResolverSpec, s conversion.Scope) error {
	return autoConvert_v2_KubernetesEndpointResolverSpec_To_v3alpha1_KubernetesEndpointResolverSpec(in, out, s)
}

func autoConvert_v3alpha1_KubernetesEndpointResolverSpec_To_v2_KubernetesEndpointResolverSpec(in *v3alpha1.KubernetesEndpointResolverSpec, out *KubernetesEndpointResolverSpec, s conversion.Scope) error {
	if true {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		if err := Convert_v3alpha1_AmbassadorID_To_v2_AmbassadorID(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v3alpha1_KubernetesEndpointResolverSpec_To_v2_KubernetesEndpointResolverSpec is an autogenerated conversion function.
func Convert_v3alpha1_KubernetesEndpointResolverSpec_To_v2_KubernetesEndpointResolverSpec(in *v3alpha1.KubernetesEndpointResolverSpec, out *KubernetesEndpointResolverSpec, s conversion.Scope) error {
	return autoConvert_v3alpha1_KubernetesEndpointResolverSpec_To_v2_KubernetesEndpointResolverSpec(in, out, s)
}

func autoConvert_v2_KubernetesServiceResolver_To_v3alpha1_KubernetesServiceResolver(in *KubernetesServiceResolver, out *v3alpha1.KubernetesServiceResolver, s conversion.Scope) error {
	if true {
		in, out := &in.ObjectMeta, &out.ObjectMeta
		*out = *in
	}
	if true {
		in, out := &in.Spec, &out.Spec
		if err := Convert_v2_KubernetesServiceResolverSpec_To_v3alpha1_KubernetesServiceResolverSpec(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v2_KubernetesServiceResolver_To_v3alpha1_KubernetesServiceResolver is an autogenerated conversion function.
func Convert_v2_KubernetesServiceResolver_To_v3alpha1_KubernetesServiceResolver(in *KubernetesServiceResolver, out *v3alpha1.KubernetesServiceResolver, s conversion.Scope) error {
	return autoConvert_v2_KubernetesServiceResolver_To_v3alpha1_KubernetesServiceResolver(in, out, s)
}

func autoConvert_v3alpha1_KubernetesServiceResolver_To_v2_KubernetesServiceResolver(in *v3alpha1.KubernetesServiceResolver, out *KubernetesServiceResolver, s conversion.Scope) error {
	if true {
		in, out := &in.ObjectMeta, &out.ObjectMeta
		*out = *in
	}
	if true {
		in, out := &in.Spec, &out.Spec
		if err := Convert_v3alpha1_KubernetesServiceResolverSpec_To_v2_KubernetesServiceResolverSpec(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v3alpha1_KubernetesServiceResolver_To_v2_KubernetesServiceResolver is an autogenerated conversion function.
func Convert_v3alpha1_KubernetesServiceResolver_To_v2_KubernetesServiceResolver(in *v3alpha1.KubernetesServiceResolver, out *KubernetesServiceResolver, s conversion.Scope) error {
	return autoConvert_v3alpha1_KubernetesServiceResolver_To_v2_KubernetesServiceResolver(in, out, s)
}

func autoConvert_v2_KubernetesServiceResolverList_To_v3alpha1_KubernetesServiceResolverList(in *KubernetesServiceResolverList, out *v3alpha1.KubernetesServiceResolverList, s conversion.Scope) error {
	if true {
		in, out := &in.ListMeta, &out.ListMeta
		*out = *in
	}
	if true {
		in, out := &in.Items, &out.Items
		if *in == nil {
			*out = nil
		} else {
			*out = make([]v3alpha1.KubernetesServiceResolver, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v2_KubernetesServiceResolver_To_v3alpha1_KubernetesServiceResolver(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

// Convert_v2_KubernetesServiceResolverList_To_v3alpha1_KubernetesServiceResolverList is an autogenerated conversion function.
func Convert_v2_KubernetesServiceResolverList_To_v3alpha1_KubernetesServiceResolverList(in *KubernetesServiceResolverList, out *v3alpha1.KubernetesServiceResolverList, s conversion.Scope) error {
	return autoConvert_v2_KubernetesServiceResolverList_To_v3alpha1_KubernetesServiceResolverList(in, out, s)
}

func autoConvert_v3alpha1_KubernetesServiceResolverList_To_v2_KubernetesServiceResolverList(in *v3alpha1.KubernetesServiceResolverList, out *KubernetesServiceResolverList, s conversion.Scope) error {
	if true {
		in, out := &in.ListMeta, &out.ListMeta
		*out = *in
	}
	if true {
		in, out := &in.Items, &out.Items
		if *in == nil {
			*out = nil
		} else {
			*out = make([]KubernetesServiceResolver, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v3alpha1_KubernetesServiceResolver_To_v2_KubernetesServiceResolver(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

// Convert_v3alpha1_KubernetesServiceResolverList_To_v2_KubernetesServiceResolverList is an autogenerated conversion function.
func Convert_v3alpha1_KubernetesServiceResolverList_To_v2_KubernetesServiceResolverList(in *v3alpha1.KubernetesServiceResolverList, out *KubernetesServiceResolverList, s conversion.Scope) error {
	return autoConvert_v3alpha1_KubernetesServiceResolverList_To_v2_KubernetesServiceResolverList(in, out, s)
}

func autoConvert_v2_KubernetesServiceResolverSpec_To_v3alpha1_KubernetesServiceResolverSpec(in *KubernetesServiceResolverSpec, out *v3alpha1.KubernetesServiceResolverSpec, s conversion.Scope) error {
	if true {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		if err := Convert_v2_AmbassadorID_To_v3alpha1_AmbassadorID(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v2_KubernetesServiceResolverSpec_To_v3alpha1_KubernetesServiceResolverSpec is an autogenerated conversion function.
func Convert_v2_KubernetesServiceResolverSpec_To_v3alpha1_KubernetesServiceResolverSpec(in *KubernetesServiceResolverSpec, out *v3alpha1.KubernetesServiceResolverSpec, s conversion.Scope) error {
	return autoConvert_v2_KubernetesServiceResolverSpec_To_v3alpha1_KubernetesServiceResolverSpec(in, out, s)
}

func autoConvert_v3alpha1_KubernetesServiceResolverSpec_To_v2_KubernetesServiceResolverSpec(in *v3alpha1.KubernetesServiceResolverSpec, out *KubernetesServiceResolverSpec, s conversion.Scope) error {
	if true {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		if err := Convert_v3alpha1_AmbassadorID_To_v2_AmbassadorID(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v3alpha1_KubernetesServiceResolverSpec_To_v2_KubernetesServiceResolverSpec is an autogenerated conversion function.
func Convert_v3alpha1_KubernetesServiceResolverSpec_To_v2_KubernetesServiceResolverSpec(in *v3alpha1.KubernetesServiceResolverSpec, out *KubernetesServiceResolverSpec, s conversion.Scope) error {
	return autoConvert_v3alpha1_KubernetesServiceResolverSpec_To_v2_KubernetesServiceResolverSpec(in, out, s)
}

func autoConvert_v2_LoadBalancer_To_v3alpha1_LoadBalancer(in *LoadBalancer, out *v3alpha1.LoadBalancer, s conversion.Scope) error {
	if true {
		in, out := &in.Policy, &out.Policy
		*out = *in
	}
	if true {
		in, out := &in.Cookie, &out.Cookie
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.LoadBalancerCookie)
			in, out := *in, *out
			if err := Convert_v2_LoadBalancerCookie_To_v3alpha1_LoadBalancerCookie(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.Header, &out.Header
		*out = *in
	}
	if true {
		in, out := &in.SourceIp, &out.SourceIp
		*out = *in
	}
	return nil
}

// Convert_v2_LoadBalancer_To_v3alpha1_LoadBalancer is an autogenerated conversion function.
func Convert_v2_LoadBalancer_To_v3alpha1_LoadBalancer(in *LoadBalancer, out *v3alpha1.LoadBalancer, s conversion.Scope) error {
	return autoConvert_v2_LoadBalancer_To_v3alpha1_LoadBalancer(in, out, s)
}

func autoConvert_v3alpha1_LoadBalancer_To_v2_LoadBalancer(in *v3alpha1.LoadBalancer, out *LoadBalancer, s conversion.Scope) error {
	if true {
		in, out := &in.Policy, &out.Policy
		*out = *in
	}
	if true {
		in, out := &in.Cookie, &out.Cookie
		if *in == nil {
			*out = nil
		} else {
			*out = new(LoadBalancerCookie)
			in, out := *in, *out
			if err := Convert_v3alpha1_LoadBalancerCookie_To_v2_LoadBalancerCookie(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.Header, &out.Header
		*out = *in
	}
	if true {
		in, out := &in.SourceIp, &out.SourceIp
		*out = *in
	}
	return nil
}

// Convert_v3alpha1_LoadBalancer_To_v2_LoadBalancer is an autogenerated conversion function.
func Convert_v3alpha1_LoadBalancer_To_v2_LoadBalancer(in *v3alpha1.LoadBalancer, out *LoadBalancer, s conversion.Scope) error {
	return autoConvert_v3alpha1_LoadBalancer_To_v2_LoadBalancer(in, out, s)
}

func autoConvert_v2_LoadBalancerCookie_To_v3alpha1_LoadBalancerCookie(in *LoadBalancerCookie, out *v3alpha1.LoadBalancerCookie, s conversion.Scope) error {
	*out = v3alpha1.LoadBalancerCookie(*in)
	return nil
}

// Convert_v2_LoadBalancerCookie_To_v3alpha1_LoadBalancerCookie is an autogenerated conversion function.
func Convert_v2_LoadBalancerCookie_To_v3alpha1_LoadBalancerCookie(in *LoadBalancerCookie, out *v3alpha1.LoadBalancerCookie, s conversion.Scope) error {
	return autoConvert_v2_LoadBalancerCookie_To_v3alpha1_LoadBalancerCookie(in, out, s)
}

func autoConvert_v3alpha1_LoadBalancerCookie_To_v2_LoadBalancerCookie(in *v3alpha1.LoadBalancerCookie, out *LoadBalancerCookie, s conversion.Scope) error {
	*out = LoadBalancerCookie(*in)
	return nil
}

// Convert_v3alpha1_LoadBalancerCookie_To_v2_LoadBalancerCookie is an autogenerated conversion function.
func Convert_v3alpha1_LoadBalancerCookie_To_v2_LoadBalancerCookie(in *v3alpha1.LoadBalancerCookie, out *LoadBalancerCookie, s conversion.Scope) error {
	return autoConvert_v3alpha1_LoadBalancerCookie_To_v2_LoadBalancerCookie(in, out, s)
}

func autoConvert_v2_LogService_To_v3alpha1_LogService(in *LogService, out *v3alpha1.LogService, s conversion.Scope) error {
	if true {
		in, out := &in.ObjectMeta, &out.ObjectMeta
		*out = *in
	}
	if true {
		in, out := &in.Spec, &out.Spec
		if err := Convert_v2_LogServiceSpec_To_v3alpha1_LogServiceSpec(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v2_LogService_To_v3alpha1_LogService is an autogenerated conversion function.
func Convert_v2_LogService_To_v3alpha1_LogService(in *LogService, out *v3alpha1.LogService, s conversion.Scope) error {
	return autoConvert_v2_LogService_To_v3alpha1_LogService(in, out, s)
}

func autoConvert_v3alpha1_LogService_To_v2_LogService(in *v3alpha1.LogService, out *LogService, s conversion.Scope) error {
	if true {
		in, out := &in.ObjectMeta, &out.ObjectMeta
		*out = *in
	}
	if true {
		in, out := &in.Spec, &out.Spec
		if err := Convert_v3alpha1_LogServiceSpec_To_v2_LogServiceSpec(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v3alpha1_LogService_To_v2_LogService is an autogenerated conversion function.
func Convert_v3alpha1_LogService_To_v2_LogService(in *v3alpha1.LogService, out *LogService, s conversion.Scope) error {
	return autoConvert_v3alpha1_LogService_To_v2_LogService(in, out, s)
}

func autoConvert_v2_LogServiceList_To_v3alpha1_LogServiceList(in *LogServiceList, out *v3alpha1.LogServiceList, s conversion.Scope) error {
	if true {
		in, out := &in.ListMeta, &out.ListMeta
		*out = *in
	}
	if true {
		in, out := &in.Items, &out.Items
		if *in == nil {
			*out = nil
		} else {
			*out = make([]v3alpha1.LogService, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v2_LogService_To_v3alpha1_LogService(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

// Convert_v2_LogServiceList_To_v3alpha1_LogServiceList is an autogenerated conversion function.
func Convert_v2_LogServiceList_To_v3alpha1_LogServiceList(in *LogServiceList, out *v3alpha1.LogServiceList, s conversion.Scope) error {
	return autoConvert_v2_LogServiceList_To_v3alpha1_LogServiceList(in, out, s)
}

func autoConvert_v3alpha1_LogServiceList_To_v2_LogServiceList(in *v3alpha1.LogServiceList, out *LogServiceList, s conversion.Scope) error {
	if true {
		in, out := &in.ListMeta, &out.ListMeta
		*out = *in
	}
	if true {
		in, out := &in.Items, &out.Items
		if *in == nil {
			*out = nil
		} else {
			*out = make([]LogService, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v3alpha1_LogService_To_v2_LogService(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

// Convert_v3alpha1_LogServiceList_To_v2_LogServiceList is an autogenerated conversion function.
func Convert_v3alpha1_LogServiceList_To_v2_LogServiceList(in *v3alpha1.LogServiceList, out *LogServiceList, s conversion.Scope) error {
	return autoConvert_v3alpha1_LogServiceList_To_v2_LogServiceList(in, out, s)
}

func autoConvert_v2_LogServiceSpec_To_v3alpha1_LogServiceSpec(in *LogServiceSpec, out *v3alpha1.LogServiceSpec, s conversion.Scope) error {
	if true {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		if err := Convert_v2_AmbassadorID_To_v3alpha1_AmbassadorID(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.Service, &out.Service
		*out = *in
	}
	if true {
		in, out := &in.Driver, &out.Driver
		*out = *in
	}
	if true {
		in, out := &in.DriverConfig, &out.DriverConfig
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.DriverConfig)
			in, out := *in, *out
			if err := Convert_v2_DriverConfig_To_v3alpha1_DriverConfig(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.FlushIntervalTime, &out.FlushIntervalTime
		*out = *in
	}
	if true {
		in, out := &in.FlushIntervalByteSize, &out.FlushIntervalByteSize
		*out = *in
	}
	if true {
		in, out := &in.GRPC, &out.GRPC
		*out = *in
	}
	if true {
		in, out := &in.V3StatsName, &out.StatsName
		*out = *in
	}
	return nil
}

// Convert_v2_LogServiceSpec_To_v3alpha1_LogServiceSpec is an autogenerated conversion function.
func Convert_v2_LogServiceSpec_To_v3alpha1_LogServiceSpec(in *LogServiceSpec, out *v3alpha1.LogServiceSpec, s conversion.Scope) error {
	return autoConvert_v2_LogServiceSpec_To_v3alpha1_LogServiceSpec(in, out, s)
}

func autoConvert_v3alpha1_LogServiceSpec_To_v2_LogServiceSpec(in *v3alpha1.LogServiceSpec, out *LogServiceSpec, s conversion.Scope) error {
	if true {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		if err := Convert_v3alpha1_AmbassadorID_To_v2_AmbassadorID(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.Service, &out.Service
		*out = *in
	}
	if true {
		in, out := &in.Driver, &out.Driver
		*out = *in
	}
	if true {
		in, out := &in.DriverConfig, &out.DriverConfig
		if *in == nil {
			*out = nil
		} else {
			*out = new(DriverConfig)
			in, out := *in, *out
			if err := Convert_v3alpha1_DriverConfig_To_v2_DriverConfig(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.FlushIntervalTime, &out.FlushIntervalTime
		*out = *in
	}
	if true {
		in, out := &in.FlushIntervalByteSize, &out.FlushIntervalByteSize
		*out = *in
	}
	if true {
		in, out := &in.GRPC, &out.GRPC
		*out = *in
	}
	if true {
		in, out := &in.StatsName, &out.V3StatsName
		*out = *in
	}
	return nil
}

// Convert_v3alpha1_LogServiceSpec_To_v2_LogServiceSpec is an autogenerated conversion function.
func Convert_v3alpha1_LogServiceSpec_To_v2_LogServiceSpec(in *v3alpha1.LogServiceSpec, out *LogServiceSpec, s conversion.Scope) error {
	return autoConvert_v3alpha1_LogServiceSpec_To_v2_LogServiceSpec(in, out, s)
}

func autoConvert_v2_Mapping_To_v3alpha1_Mapping(in *Mapping, out *v3alpha1.Mapping, s conversion.Scope) error {
	if true {
		in, out := &in.ObjectMeta, &out.ObjectMeta
		*out = *in
	}
	if true {
		in, out := &in.Spec, &out.Spec
		if err := Convert_v2_MappingSpec_To_v3alpha1_MappingSpec(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.Status, &out.Status
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.MappingStatus)
			in, out := *in, *out
			if err := Convert_v2_MappingStatus_To_v3alpha1_MappingStatus(in, out, s); err != nil {
				return err
			}
		}
	}
	return nil
}

// Convert_v2_Mapping_To_v3alpha1_Mapping is an autogenerated conversion function.
func Convert_v2_Mapping_To_v3alpha1_Mapping(in *Mapping, out *v3alpha1.Mapping, s conversion.Scope) error {
	return autoConvert_v2_Mapping_To_v3alpha1_Mapping(in, out, s)
}

func autoConvert_v3alpha1_Mapping_To_v2_Mapping(in *v3alpha1.Mapping, out *Mapping, s conversion.Scope) error {
	if true {
		in, out := &in.ObjectMeta, &out.ObjectMeta
		*out = *in
	}
	if true {
		in, out := &in.Spec, &out.Spec
		if err := Convert_v3alpha1_MappingSpec_To_v2_MappingSpec(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.Status, &out.Status
		if *in == nil {
			*out = nil
		} else {
			*out = new(MappingStatus)
			in, out := *in, *out
			if err := Convert_v3alpha1_MappingStatus_To_v2_MappingStatus(in, out, s); err != nil {
				return err
			}
		}
	}
	return nil
}

// Convert_v3alpha1_Mapping_To_v2_Mapping is an autogenerated conversion function.
func Convert_v3alpha1_Mapping_To_v2_Mapping(in *v3alpha1.Mapping, out *Mapping, s conversion.Scope) error {
	return autoConvert_v3alpha1_Mapping_To_v2_Mapping(in, out, s)
}

func autoConvert_v2_MappingLabelGroup_To_v3alpha1_MappingLabelGroup(in *MappingLabelGroup, out *v3alpha1.MappingLabelGroup, s conversion.Scope) error {
	if *in == nil {
		*out = nil
	} else {
		*out = make(v3alpha1.MappingLabelGroup, len(*in))
		for inKey, inVal := range *in {
			outKey := new(string)
			if true {
				in, out := &inKey, outKey
				*out = *in
			}
			outVal := new(v3alpha1.MappingLabelsArray)
			if true {
				in, out := &inVal, outVal
				if err := Convert_v2_MappingLabelsArray_To_v3alpha1_MappingLabelsArray(in, out, s); err != nil {
					return err
				}
			}
			(*out)[*outKey] = *outVal
		}
	}
	return nil
}

// Convert_v2_MappingLabelGroup_To_v3alpha1_MappingLabelGroup is an autogenerated conversion function.
func Convert_v2_MappingLabelGroup_To_v3alpha1_MappingLabelGroup(in *MappingLabelGroup, out *v3alpha1.MappingLabelGroup, s conversion.Scope) error {
	return autoConvert_v2_MappingLabelGroup_To_v3alpha1_MappingLabelGroup(in, out, s)
}

func autoConvert_v3alpha1_MappingLabelGroup_To_v2_MappingLabelGroup(in *v3alpha1.MappingLabelGroup, out *MappingLabelGroup, s conversion.Scope) error {
	if *in == nil {
		*out = nil
	} else {
		*out = make(MappingLabelGroup, len(*in))
		for inKey, inVal := range *in {
			outKey := new(string)
			if true {
				in, out := &inKey, outKey
				*out = *in
			}
			outVal := new(MappingLabelsArray)
			if true {
				in, out := &inVal, outVal
				if err := Convert_v3alpha1_MappingLabelsArray_To_v2_MappingLabelsArray(in, out, s); err != nil {
					return err
				}
			}
			(*out)[*outKey] = *outVal
		}
	}
	return nil
}

// Convert_v3alpha1_MappingLabelGroup_To_v2_MappingLabelGroup is an autogenerated conversion function.
func Convert_v3alpha1_MappingLabelGroup_To_v2_MappingLabelGroup(in *v3alpha1.MappingLabelGroup, out *MappingLabelGroup, s conversion.Scope) error {
	return autoConvert_v3alpha1_MappingLabelGroup_To_v2_MappingLabelGroup(in, out, s)
}

func autoConvert_v2_MappingLabelGroupsArray_To_v3alpha1_MappingLabelGroupsArray(in *MappingLabelGroupsArray, out *v3alpha1.MappingLabelGroupsArray, s conversion.Scope) error {
	if *in == nil {
		*out = nil
	} else {
		*out = make(v3alpha1.MappingLabelGroupsArray, len(*in))
		for i := range *in {
			in, out := &(*in)[i], &(*out)[i]
			if err := Convert_v2_MappingLabelGroup_To_v3alpha1_MappingLabelGroup(in, out, s); err != nil {
				return err
			}
		}
	}
	return nil
}

// Convert_v2_MappingLabelGroupsArray_To_v3alpha1_MappingLabelGroupsArray is an autogenerated conversion function.
func Convert_v2_MappingLabelGroupsArray_To_v3alpha1_MappingLabelGroupsArray(in *MappingLabelGroupsArray, out *v3alpha1.MappingLabelGroupsArray, s conversion.Scope) error {
	return autoConvert_v2_MappingLabelGroupsArray_To_v3alpha1_MappingLabelGroupsArray(in, out, s)
}

func autoConvert_v3alpha1_MappingLabelGroupsArray_To_v2_MappingLabelGroupsArray(in *v3alpha1.MappingLabelGroupsArray, out *MappingLabelGroupsArray, s conversion.Scope) error {
	if *in == nil {
		*out = nil
	} else {
		*out = make(MappingLabelGroupsArray, len(*in))
		for i := range *in {
			in, out := &(*in)[i], &(*out)[i]
			if err := Convert_v3alpha1_MappingLabelGroup_To_v2_MappingLabelGroup(in, out, s); err != nil {
				return err
			}
		}
	}
	return nil
}

// Convert_v3alpha1_MappingLabelGroupsArray_To_v2_MappingLabelGroupsArray is an autogenerated conversion function.
func Convert_v3alpha1_MappingLabelGroupsArray_To_v2_MappingLabelGroupsArray(in *v3alpha1.MappingLabelGroupsArray, out *MappingLabelGroupsArray, s conversion.Scope) error {
	return autoConvert_v3alpha1_MappingLabelGroupsArray_To_v2_MappingLabelGroupsArray(in, out, s)
}

func autoConvert_v2_MappingLabelSpecifier_To_v3alpha1_MappingLabelSpecifier(in *MappingLabelSpecifier, out *v3alpha1.MappingLabelSpecifier, s conversion.Scope) error {
	// WARNING: in.String requires manual conversion: does not exist in peer-type
	// WARNING: in.Header requires manual conversion: does not exist in peer-type
	// WARNING: in.Generic requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v3alpha1_MappingLabelSpecifier_To_v2_MappingLabelSpecifier(in *v3alpha1.MappingLabelSpecifier, out *MappingLabelSpecifier, s conversion.Scope) error {
	// WARNING: in.SourceCluster requires manual conversion: does not exist in peer-type
	// WARNING: in.DestinationCluster requires manual conversion: does not exist in peer-type
	// WARNING: in.RequestHeaders requires manual conversion: does not exist in peer-type
	// WARNING: in.RemoteAddress requires manual conversion: does not exist in peer-type
	// WARNING: in.GenericKey requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v2_MappingLabelsArray_To_v3alpha1_MappingLabelsArray(in *MappingLabelsArray, out *v3alpha1.MappingLabelsArray, s conversion.Scope) error {
	if *in == nil {
		*out = nil
	} else {
		*out = make(v3alpha1.MappingLabelsArray, len(*in))
		for i := range *in {
			in, out := &(*in)[i], &(*out)[i]
			if err := Convert_v2_MappingLabelSpecifier_To_v3alpha1_MappingLabelSpecifier(in, out, s); err != nil {
				return err
			}
		}
	}
	return nil
}

// Convert_v2_MappingLabelsArray_To_v3alpha1_MappingLabelsArray is an autogenerated conversion function.
func Convert_v2_MappingLabelsArray_To_v3alpha1_MappingLabelsArray(in *MappingLabelsArray, out *v3alpha1.MappingLabelsArray, s conversion.Scope) error {
	return autoConvert_v2_MappingLabelsArray_To_v3alpha1_MappingLabelsArray(in, out, s)
}

func autoConvert_v3alpha1_MappingLabelsArray_To_v2_MappingLabelsArray(in *v3alpha1.MappingLabelsArray, out *MappingLabelsArray, s conversion.Scope) error {
	if *in == nil {
		*out = nil
	} else {
		*out = make(MappingLabelsArray, len(*in))
		for i := range *in {
			in, out := &(*in)[i], &(*out)[i]
			if err := Convert_v3alpha1_MappingLabelSpecifier_To_v2_MappingLabelSpecifier(in, out, s); err != nil {
				return err
			}
		}
	}
	return nil
}

// Convert_v3alpha1_MappingLabelsArray_To_v2_MappingLabelsArray is an autogenerated conversion function.
func Convert_v3alpha1_MappingLabelsArray_To_v2_MappingLabelsArray(in *v3alpha1.MappingLabelsArray, out *MappingLabelsArray, s conversion.Scope) error {
	return autoConvert_v3alpha1_MappingLabelsArray_To_v2_MappingLabelsArray(in, out, s)
}

func autoConvert_v2_MappingList_To_v3alpha1_MappingList(in *MappingList, out *v3alpha1.MappingList, s conversion.Scope) error {
	if true {
		in, out := &in.ListMeta, &out.ListMeta
		*out = *in
	}
	if true {
		in, out := &in.Items, &out.Items
		if *in == nil {
			*out = nil
		} else {
			*out = make([]v3alpha1.Mapping, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v2_Mapping_To_v3alpha1_Mapping(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

// Convert_v2_MappingList_To_v3alpha1_MappingList is an autogenerated conversion function.
func Convert_v2_MappingList_To_v3alpha1_MappingList(in *MappingList, out *v3alpha1.MappingList, s conversion.Scope) error {
	return autoConvert_v2_MappingList_To_v3alpha1_MappingList(in, out, s)
}

func autoConvert_v3alpha1_MappingList_To_v2_MappingList(in *v3alpha1.MappingList, out *MappingList, s conversion.Scope) error {
	if true {
		in, out := &in.ListMeta, &out.ListMeta
		*out = *in
	}
	if true {
		in, out := &in.Items, &out.Items
		if *in == nil {
			*out = nil
		} else {
			*out = make([]Mapping, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v3alpha1_Mapping_To_v2_Mapping(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

// Convert_v3alpha1_MappingList_To_v2_MappingList is an autogenerated conversion function.
func Convert_v3alpha1_MappingList_To_v2_MappingList(in *v3alpha1.MappingList, out *MappingList, s conversion.Scope) error {
	return autoConvert_v3alpha1_MappingList_To_v2_MappingList(in, out, s)
}

func autoConvert_v2_MappingSpec_To_v3alpha1_MappingSpec(in *MappingSpec, out *v3alpha1.MappingSpec, s conversion.Scope) error {
	if true {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		if err := Convert_v2_AmbassadorID_To_v3alpha1_AmbassadorID(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.Prefix, &out.Prefix
		*out = *in
	}
	if true {
		in, out := &in.PrefixRegex, &out.PrefixRegex
		*out = *in
	}
	if true {
		in, out := &in.PrefixExact, &out.PrefixExact
		*out = *in
	}
	if true {
		in, out := &in.Service, &out.Service
		*out = *in
	}
	if true {
		in, out := &in.AddRequestHeaders, &out.AddRequestHeaders
		if *in == nil {
			*out = nil
		} else {
			*out = new(map[string]v3alpha1.AddedHeader)
			in, out := *in, *out
			if *in == nil {
				*out = nil
			} else {
				*out = make(map[string]v3alpha1.AddedHeader, len(*in))
				for inKey, inVal := range *in {
					outKey := new(string)
					if true {
						in, out := &inKey, outKey
						*out = *in
					}
					outVal := new(v3alpha1.AddedHeader)
					if true {
						in, out := &inVal, outVal
						if err := Convert_v2_AddedHeader_To_v3alpha1_AddedHeader(in, out, s); err != nil {
							return err
						}
					}
					(*out)[*outKey] = *outVal
				}
			}
		}
	}
	if true {
		in, out := &in.AddResponseHeaders, &out.AddResponseHeaders
		if *in == nil {
			*out = nil
		} else {
			*out = new(map[string]v3alpha1.AddedHeader)
			in, out := *in, *out
			if *in == nil {
				*out = nil
			} else {
				*out = make(map[string]v3alpha1.AddedHeader, len(*in))
				for inKey, inVal := range *in {
					outKey := new(string)
					if true {
						in, out := &inKey, outKey
						*out = *in
					}
					outVal := new(v3alpha1.AddedHeader)
					if true {
						in, out := &inVal, outVal
						if err := Convert_v2_AddedHeader_To_v3alpha1_AddedHeader(in, out, s); err != nil {
							return err
						}
					}
					(*out)[*outKey] = *outVal
				}
			}
		}
	}
	if true {
		in, out := &in.AddLinkerdHeaders, &out.AddLinkerdHeaders
		*out = *in
	}
	if true {
		in, out := &in.AutoHostRewrite, &out.AutoHostRewrite
		*out = *in
	}
	if true {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = *in
	}
	if true {
		in, out := &in.Docs, &out.Docs
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.DocsInfo)
			in, out := *in, *out
			if err := Convert_v2_DocsInfo_To_v3alpha1_DocsInfo(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.DNSType, &out.DNSType
		*out = *in
	}
	if true {
		in, out := &in.EnableIPv4, &out.EnableIPv4
		*out = *in
	}
	if true {
		in, out := &in.EnableIPv6, &out.EnableIPv6
		*out = *in
	}
	if true {
		in, out := &in.CircuitBreakers, &out.CircuitBreakers
		if *in == nil {
			*out = nil
		} else {
			*out = make([]*v3alpha1.CircuitBreaker, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if *in == nil {
					*out = nil
				} else {
					*out = new(v3alpha1.CircuitBreaker)
					in, out := *in, *out
					if err := Convert_v2_CircuitBreaker_To_v3alpha1_CircuitBreaker(in, out, s); err != nil {
						return err
					}
				}
			}
		}
	}
	if true {
		in, out := &in.KeepAlive, &out.KeepAlive
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.KeepAlive)
			in, out := *in, *out
			if err := Convert_v2_KeepAlive_To_v3alpha1_KeepAlive(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.CORS, &out.CORS
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.CORS)
			in, out := *in, *out
			if err := Convert_v2_CORS_To_v3alpha1_CORS(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.RetryPolicy)
			in, out := *in, *out
			if err := Convert_v2_RetryPolicy_To_v3alpha1_RetryPolicy(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.RespectDNSTTL, &out.RespectDNSTTL
		*out = *in
	}
	if true {
		in, out := &in.GRPC, &out.GRPC
		*out = *in
	}
	if true {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = *in
	}
	if true {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = *in
	}
	if true {
		in, out := &in.Method, &out.Method
		*out = *in
	}
	if true {
		in, out := &in.MethodRegex, &out.MethodRegex
		*out = *in
	}
	if true {
		in, out := &in.OutlierDetection, &out.OutlierDetection
		*out = *in
	}
	if true {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = *in
	}
	if true {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = *in
	}
	if true {
		in, out := &in.RegexRedirect, &out.RegexRedirect
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.RegexMap)
			in, out := *in, *out
			if err := Convert_v2_RegexMap_To_v3alpha1_RegexMap(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = *in
	}
	if true {
		in, out := &in.Priority, &out.Priority
		*out = *in
	}
	if true {
		in, out := &in.Precedence, &out.Precedence
		*out = *in
	}
	if true {
		in, out := &in.ClusterTag, &out.ClusterTag
		*out = *in
	}
	if true {
		in, out := &in.RemoveRequestHeaders, &out.RemoveRequestHeaders
		if *in == nil {
			*out = nil
		} else {
			*out = new([]string)
			in, out := *in, *out
			*out = []string(*in)
		}
	}
	if true {
		in, out := &in.RemoveResponseHeaders, &out.RemoveResponseHeaders
		if *in == nil {
			*out = nil
		} else {
			*out = new([]string)
			in, out := *in, *out
			*out = []string(*in)
		}
	}
	if true {
		in, out := &in.Resolver, &out.Resolver
		*out = *in
	}
	if true {
		in, out := &in.Rewrite, &out.Rewrite
		*out = *in
	}
	if true {
		in, out := &in.RegexRewrite, &out.RegexRewrite
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.RegexMap)
			in, out := *in, *out
			if err := Convert_v2_RegexMap_To_v3alpha1_RegexMap(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.Shadow, &out.Shadow
		*out = *in
	}
	if true {
		in, out := &in.ConnectTimeout, &out.ConnectTimeout
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.MillisecondDuration)
			in, out := *in, *out
			if err := Convert_v2_MillisecondDuration_To_v3alpha1_MillisecondDuration(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.ClusterIdleTimeout, &out.ClusterIdleTimeout
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.MillisecondDuration)
			in, out := *in, *out
			if err := Convert_v2_MillisecondDuration_To_v3alpha1_MillisecondDuration(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.ClusterMaxConnectionLifetime, &out.ClusterMaxConnectionLifetime
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.MillisecondDuration)
			in, out := *in, *out
			if err := Convert_v2_MillisecondDuration_To_v3alpha1_MillisecondDuration(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.Timeout, &out.Timeout
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.MillisecondDuration)
			in, out := *in, *out
			if err := Convert_v2_MillisecondDuration_To_v3alpha1_MillisecondDuration(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.IdleTimeout, &out.IdleTimeout
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.MillisecondDuration)
			in, out := *in, *out
			if err := Convert_v2_MillisecondDuration_To_v3alpha1_MillisecondDuration(in, out, s); err != nil {
				return err
			}
		}
	}
	// INFO: in.TLS opted out of conversion generation via +k8s:conversion-gen=false
	if true {
		in, out := &in.DeprecatedUseWebsocket, &out.DeprecatedUseWebsocket
		*out = *in
	}
	if true {
		in, out := &in.AllowUpgrade, &out.AllowUpgrade
		*out = *in
	}
	if true {
		in, out := &in.Weight, &out.Weight
		*out = *in
	}
	if true {
		in, out := &in.BypassAuth, &out.BypassAuth
		*out = *in
	}
	if true {
		in, out := &in.AuthContextExtensions, &out.AuthContextExtensions
		*out = *in
	}
	if true {
		in, out := &in.BypassErrorResponseOverrides, &out.BypassErrorResponseOverrides
		*out = *in
	}
	if true {
		in, out := &in.ErrorResponseOverrides, &out.ErrorResponseOverrides
		if *in == nil {
			*out = nil
		} else {
			*out = make([]v3alpha1.ErrorResponseOverride, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v2_ErrorResponseOverride_To_v3alpha1_ErrorResponseOverride(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	if true {
		in, out := &in.Modules, &out.Modules
		if *in == nil {
			*out = nil
		} else {
			*out = make([]v3alpha1.UntypedDict, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v2_UntypedDict_To_v3alpha1_UntypedDict(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	if true {
		in, out := &in.Host, &out.Hostname
		*out = *in
	}
	if true {
		in, out := &in.HostRegex, &out.DeprecatedHostRegex
		*out = *in
	}
	// INFO: in.Headers opted out of conversion generation via +k8s:conversion-gen=false
	if true {
		in, out := &in.RegexHeaders, &out.RegexHeaders
		*out = *in
	}
	if true {
		in, out := &in.Labels, &out.Labels
		if err := Convert_v2_DomainMap_To_v3alpha1_DomainMap(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.EnvoyOverride, &out.EnvoyOverride
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.UntypedDict)
			in, out := *in, *out
			if err := Convert_v2_UntypedDict_To_v3alpha1_UntypedDict(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.LoadBalancer, &out.LoadBalancer
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.LoadBalancer)
			in, out := *in, *out
			if err := Convert_v2_LoadBalancer_To_v3alpha1_LoadBalancer(in, out, s); err != nil {
				return err
			}
		}
	}
	// INFO: in.QueryParameters opted out of conversion generation via +k8s:conversion-gen=false
	if true {
		in, out := &in.RegexQueryParameters, &out.RegexQueryParameters
		*out = *in
	}
	if true {
		in, out := &in.V3StatsName, &out.StatsName
		*out = *in
	}
	return nil
}

func autoConvert_v3alpha1_MappingSpec_To_v2_MappingSpec(in *v3alpha1.MappingSpec, out *MappingSpec, s conversion.Scope) error {
	if true {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		if err := Convert_v3alpha1_AmbassadorID_To_v2_AmbassadorID(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.Prefix, &out.Prefix
		*out = *in
	}
	if true {
		in, out := &in.PrefixRegex, &out.PrefixRegex
		*out = *in
	}
	if true {
		in, out := &in.PrefixExact, &out.PrefixExact
		*out = *in
	}
	if true {
		in, out := &in.Service, &out.Service
		*out = *in
	}
	if true {
		in, out := &in.AddRequestHeaders, &out.AddRequestHeaders
		if *in == nil {
			*out = nil
		} else {
			*out = new(map[string]AddedHeader)
			in, out := *in, *out
			if *in == nil {
				*out = nil
			} else {
				*out = make(map[string]AddedHeader, len(*in))
				for inKey, inVal := range *in {
					outKey := new(string)
					if true {
						in, out := &inKey, outKey
						*out = *in
					}
					outVal := new(AddedHeader)
					if true {
						in, out := &inVal, outVal
						if err := Convert_v3alpha1_AddedHeader_To_v2_AddedHeader(in, out, s); err != nil {
							return err
						}
					}
					(*out)[*outKey] = *outVal
				}
			}
		}
	}
	if true {
		in, out := &in.AddResponseHeaders, &out.AddResponseHeaders
		if *in == nil {
			*out = nil
		} else {
			*out = new(map[string]AddedHeader)
			in, out := *in, *out
			if *in == nil {
				*out = nil
			} else {
				*out = make(map[string]AddedHeader, len(*in))
				for inKey, inVal := range *in {
					outKey := new(string)
					if true {
						in, out := &inKey, outKey
						*out = *in
					}
					outVal := new(AddedHeader)
					if true {
						in, out := &inVal, outVal
						if err := Convert_v3alpha1_AddedHeader_To_v2_AddedHeader(in, out, s); err != nil {
							return err
						}
					}
					(*out)[*outKey] = *outVal
				}
			}
		}
	}
	if true {
		in, out := &in.AddLinkerdHeaders, &out.AddLinkerdHeaders
		*out = *in
	}
	if true {
		in, out := &in.AutoHostRewrite, &out.AutoHostRewrite
		*out = *in
	}
	if true {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = *in
	}
	if true {
		in, out := &in.DNSType, &out.DNSType
		*out = *in
	}
	if true {
		in, out := &in.Docs, &out.Docs
		if *in == nil {
			*out = nil
		} else {
			*out = new(DocsInfo)
			in, out := *in, *out
			if err := Convert_v3alpha1_DocsInfo_To_v2_DocsInfo(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.EnableIPv4, &out.EnableIPv4
		*out = *in
	}
	if true {
		in, out := &in.EnableIPv6, &out.EnableIPv6
		*out = *in
	}
	if true {
		in, out := &in.CircuitBreakers, &out.CircuitBreakers
		if *in == nil {
			*out = nil
		} else {
			*out = make([]*CircuitBreaker, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if *in == nil {
					*out = nil
				} else {
					*out = new(CircuitBreaker)
					in, out := *in, *out
					if err := Convert_v3alpha1_CircuitBreaker_To_v2_CircuitBreaker(in, out, s); err != nil {
						return err
					}
				}
			}
		}
	}
	if true {
		in, out := &in.KeepAlive, &out.KeepAlive
		if *in == nil {
			*out = nil
		} else {
			*out = new(KeepAlive)
			in, out := *in, *out
			if err := Convert_v3alpha1_KeepAlive_To_v2_KeepAlive(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.CORS, &out.CORS
		if *in == nil {
			*out = nil
		} else {
			*out = new(CORS)
			in, out := *in, *out
			if err := Convert_v3alpha1_CORS_To_v2_CORS(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		if *in == nil {
			*out = nil
		} else {
			*out = new(RetryPolicy)
			in, out := *in, *out
			if err := Convert_v3alpha1_RetryPolicy_To_v2_RetryPolicy(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.RespectDNSTTL, &out.RespectDNSTTL
		*out = *in
	}
	if true {
		in, out := &in.GRPC, &out.GRPC
		*out = *in
	}
	if true {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = *in
	}
	if true {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = *in
	}
	if true {
		in, out := &in.Method, &out.Method
		*out = *in
	}
	if true {
		in, out := &in.MethodRegex, &out.MethodRegex
		*out = *in
	}
	if true {
		in, out := &in.OutlierDetection, &out.OutlierDetection
		*out = *in
	}
	if true {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = *in
	}
	if true {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = *in
	}
	if true {
		in, out := &in.RegexRedirect, &out.RegexRedirect
		if *in == nil {
			*out = nil
		} else {
			*out = new(RegexMap)
			in, out := *in, *out
			if err := Convert_v3alpha1_RegexMap_To_v2_RegexMap(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = *in
	}
	if true {
		in, out := &in.Priority, &out.Priority
		*out = *in
	}
	if true {
		in, out := &in.Precedence, &out.Precedence
		*out = *in
	}
	if true {
		in, out := &in.ClusterTag, &out.ClusterTag
		*out = *in
	}
	if true {
		in, out := &in.RemoveRequestHeaders, &out.RemoveRequestHeaders
		if *in == nil {
			*out = nil
		} else {
			*out = new(StringOrStringList)
			in, out := *in, *out
			*out = StringOrStringList(*in)
		}
	}
	if true {
		in, out := &in.RemoveResponseHeaders, &out.RemoveResponseHeaders
		if *in == nil {
			*out = nil
		} else {
			*out = new(StringOrStringList)
			in, out := *in, *out
			*out = StringOrStringList(*in)
		}
	}
	if true {
		in, out := &in.Resolver, &out.Resolver
		*out = *in
	}
	if true {
		in, out := &in.Rewrite, &out.Rewrite
		*out = *in
	}
	if true {
		in, out := &in.RegexRewrite, &out.RegexRewrite
		if *in == nil {
			*out = nil
		} else {
			*out = new(RegexMap)
			in, out := *in, *out
			if err := Convert_v3alpha1_RegexMap_To_v2_RegexMap(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.Shadow, &out.Shadow
		*out = *in
	}
	if true {
		in, out := &in.ConnectTimeout, &out.ConnectTimeout
		if *in == nil {
			*out = nil
		} else {
			*out = new(MillisecondDuration)
			in, out := *in, *out
			if err := Convert_v3alpha1_MillisecondDuration_To_v2_MillisecondDuration(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.ClusterIdleTimeout, &out.ClusterIdleTimeout
		if *in == nil {
			*out = nil
		} else {
			*out = new(MillisecondDuration)
			in, out := *in, *out
			if err := Convert_v3alpha1_MillisecondDuration_To_v2_MillisecondDuration(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.ClusterMaxConnectionLifetime, &out.ClusterMaxConnectionLifetime
		if *in == nil {
			*out = nil
		} else {
			*out = new(MillisecondDuration)
			in, out := *in, *out
			if err := Convert_v3alpha1_MillisecondDuration_To_v2_MillisecondDuration(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.Timeout, &out.Timeout
		if *in == nil {
			*out = nil
		} else {
			*out = new(MillisecondDuration)
			in, out := *in, *out
			if err := Convert_v3alpha1_MillisecondDuration_To_v2_MillisecondDuration(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.IdleTimeout, &out.IdleTimeout
		if *in == nil {
			*out = nil
		} else {
			*out = new(MillisecondDuration)
			in, out := *in, *out
			if err := Convert_v3alpha1_MillisecondDuration_To_v2_MillisecondDuration(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.TLS, &out.TLS
		if err := Convert_string_To_Pointer_v2_BoolOrString(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.DeprecatedUseWebsocket, &out.DeprecatedUseWebsocket
		*out = *in
	}
	if true {
		in, out := &in.AllowUpgrade, &out.AllowUpgrade
		*out = *in
	}
	if true {
		in, out := &in.Weight, &out.Weight
		*out = *in
	}
	if true {
		in, out := &in.BypassAuth, &out.BypassAuth
		*out = *in
	}
	if true {
		in, out := &in.AuthContextExtensions, &out.AuthContextExtensions
		*out = *in
	}
	if true {
		in, out := &in.BypassErrorResponseOverrides, &out.BypassErrorResponseOverrides
		*out = *in
	}
	if true {
		in, out := &in.ErrorResponseOverrides, &out.ErrorResponseOverrides
		if *in == nil {
			*out = nil
		} else {
			*out = make([]ErrorResponseOverride, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v3alpha1_ErrorResponseOverride_To_v2_ErrorResponseOverride(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	if true {
		in, out := &in.Modules, &out.Modules
		if *in == nil {
			*out = nil
		} else {
			*out = make([]UntypedDict, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v3alpha1_UntypedDict_To_v2_UntypedDict(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	// WARNING: in.DeprecatedHost requires manual conversion: does not exist in peer-type
	if true {
		in, out := &in.DeprecatedHostRegex, &out.HostRegex
		*out = *in
	}
	if true {
		in, out := &in.Hostname, &out.Host
		*out = *in
	}
	if true {
		in, out := &in.Headers, &out.Headers
		if *in == nil {
			*out = nil
		} else {
			*out = make(map[string]BoolOrString, len(*in))
			for inKey, inVal := range *in {
				outKey := new(string)
				if true {
					in, out := &inKey, outKey
					*out = *in
				}
				outVal := new(BoolOrString)
				if true {
					in, out := &inVal, outVal
					if err := Convert_string_To_v2_BoolOrString(in, out, s); err != nil {
						return err
					}
				}
				(*out)[*outKey] = *outVal
			}
		}
	}
	if true {
		in, out := &in.RegexHeaders, &out.RegexHeaders
		*out = *in
	}
	if true {
		in, out := &in.Labels, &out.Labels
		if err := Convert_v3alpha1_DomainMap_To_v2_DomainMap(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.EnvoyOverride, &out.EnvoyOverride
		if *in == nil {
			*out = nil
		} else {
			*out = new(UntypedDict)
			in, out := *in, *out
			if err := Convert_v3alpha1_UntypedDict_To_v2_UntypedDict(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.LoadBalancer, &out.LoadBalancer
		if *in == nil {
			*out = nil
		} else {
			*out = new(LoadBalancer)
			in, out := *in, *out
			if err := Convert_v3alpha1_LoadBalancer_To_v2_LoadBalancer(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.QueryParameters, &out.QueryParameters
		if *in == nil {
			*out = nil
		} else {
			*out = make(map[string]BoolOrString, len(*in))
			for inKey, inVal := range *in {
				outKey := new(string)
				if true {
					in, out := &inKey, outKey
					*out = *in
				}
				outVal := new(BoolOrString)
				if true {
					in, out := &inVal, outVal
					if err := Convert_string_To_v2_BoolOrString(in, out, s); err != nil {
						return err
					}
				}
				(*out)[*outKey] = *outVal
			}
		}
	}
	if true {
		in, out := &in.RegexQueryParameters, &out.RegexQueryParameters
		*out = *in
	}
	if true {
		in, out := &in.StatsName, &out.V3StatsName
		*out = *in
	}
	// WARNING: in.V2ExplicitTLS requires manual conversion: does not exist in peer-type
	// WARNING: in.V2BoolHeaders requires manual conversion: does not exist in peer-type
	// WARNING: in.V2BoolQueryParameters requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v2_MappingStatus_To_v3alpha1_MappingStatus(in *MappingStatus, out *v3alpha1.MappingStatus, s conversion.Scope) error {
	*out = v3alpha1.MappingStatus(*in)
	return nil
}

// Convert_v2_MappingStatus_To_v3alpha1_MappingStatus is an autogenerated conversion function.
func Convert_v2_MappingStatus_To_v3alpha1_MappingStatus(in *MappingStatus, out *v3alpha1.MappingStatus, s conversion.Scope) error {
	return autoConvert_v2_MappingStatus_To_v3alpha1_MappingStatus(in, out, s)
}

func autoConvert_v3alpha1_MappingStatus_To_v2_MappingStatus(in *v3alpha1.MappingStatus, out *MappingStatus, s conversion.Scope) error {
	*out = MappingStatus(*in)
	return nil
}

// Convert_v3alpha1_MappingStatus_To_v2_MappingStatus is an autogenerated conversion function.
func Convert_v3alpha1_MappingStatus_To_v2_MappingStatus(in *v3alpha1.MappingStatus, out *MappingStatus, s conversion.Scope) error {
	return autoConvert_v3alpha1_MappingStatus_To_v2_MappingStatus(in, out, s)
}

func autoConvert_v2_MillisecondDuration_To_v3alpha1_MillisecondDuration(in *MillisecondDuration, out *v3alpha1.MillisecondDuration, s conversion.Scope) error {
	*out = v3alpha1.MillisecondDuration(*in)
	return nil
}

// Convert_v2_MillisecondDuration_To_v3alpha1_MillisecondDuration is an autogenerated conversion function.
func Convert_v2_MillisecondDuration_To_v3alpha1_MillisecondDuration(in *MillisecondDuration, out *v3alpha1.MillisecondDuration, s conversion.Scope) error {
	return autoConvert_v2_MillisecondDuration_To_v3alpha1_MillisecondDuration(in, out, s)
}

func autoConvert_v3alpha1_MillisecondDuration_To_v2_MillisecondDuration(in *v3alpha1.MillisecondDuration, out *MillisecondDuration, s conversion.Scope) error {
	*out = MillisecondDuration(*in)
	return nil
}

// Convert_v3alpha1_MillisecondDuration_To_v2_MillisecondDuration is an autogenerated conversion function.
func Convert_v3alpha1_MillisecondDuration_To_v2_MillisecondDuration(in *v3alpha1.MillisecondDuration, out *MillisecondDuration, s conversion.Scope) error {
	return autoConvert_v3alpha1_MillisecondDuration_To_v2_MillisecondDuration(in, out, s)
}

func autoConvert_v2_Module_To_v3alpha1_Module(in *Module, out *v3alpha1.Module, s conversion.Scope) error {
	if true {
		in, out := &in.ObjectMeta, &out.ObjectMeta
		*out = *in
	}
	if true {
		in, out := &in.Spec, &out.Spec
		if err := Convert_v2_ModuleSpec_To_v3alpha1_ModuleSpec(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v2_Module_To_v3alpha1_Module is an autogenerated conversion function.
func Convert_v2_Module_To_v3alpha1_Module(in *Module, out *v3alpha1.Module, s conversion.Scope) error {
	return autoConvert_v2_Module_To_v3alpha1_Module(in, out, s)
}

func autoConvert_v3alpha1_Module_To_v2_Module(in *v3alpha1.Module, out *Module, s conversion.Scope) error {
	if true {
		in, out := &in.ObjectMeta, &out.ObjectMeta
		*out = *in
	}
	if true {
		in, out := &in.Spec, &out.Spec
		if err := Convert_v3alpha1_ModuleSpec_To_v2_ModuleSpec(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v3alpha1_Module_To_v2_Module is an autogenerated conversion function.
func Convert_v3alpha1_Module_To_v2_Module(in *v3alpha1.Module, out *Module, s conversion.Scope) error {
	return autoConvert_v3alpha1_Module_To_v2_Module(in, out, s)
}

func autoConvert_v2_ModuleList_To_v3alpha1_ModuleList(in *ModuleList, out *v3alpha1.ModuleList, s conversion.Scope) error {
	if true {
		in, out := &in.ListMeta, &out.ListMeta
		*out = *in
	}
	if true {
		in, out := &in.Items, &out.Items
		if *in == nil {
			*out = nil
		} else {
			*out = make([]v3alpha1.Module, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v2_Module_To_v3alpha1_Module(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

// Convert_v2_ModuleList_To_v3alpha1_ModuleList is an autogenerated conversion function.
func Convert_v2_ModuleList_To_v3alpha1_ModuleList(in *ModuleList, out *v3alpha1.ModuleList, s conversion.Scope) error {
	return autoConvert_v2_ModuleList_To_v3alpha1_ModuleList(in, out, s)
}

func autoConvert_v3alpha1_ModuleList_To_v2_ModuleList(in *v3alpha1.ModuleList, out *ModuleList, s conversion.Scope) error {
	if true {
		in, out := &in.ListMeta, &out.ListMeta
		*out = *in
	}
	if true {
		in, out := &in.Items, &out.Items
		if *in == nil {
			*out = nil
		} else {
			*out = make([]Module, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v3alpha1_Module_To_v2_Module(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

// Convert_v3alpha1_ModuleList_To_v2_ModuleList is an autogenerated conversion function.
func Convert_v3alpha1_ModuleList_To_v2_ModuleList(in *v3alpha1.ModuleList, out *ModuleList, s conversion.Scope) error {
	return autoConvert_v3alpha1_ModuleList_To_v2_ModuleList(in, out, s)
}

func autoConvert_v2_ModuleSpec_To_v3alpha1_ModuleSpec(in *ModuleSpec, out *v3alpha1.ModuleSpec, s conversion.Scope) error {
	if true {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		if err := Convert_v2_AmbassadorID_To_v3alpha1_AmbassadorID(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.Config, &out.Config
		if err := Convert_v2_UntypedDict_To_v3alpha1_UntypedDict(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v2_ModuleSpec_To_v3alpha1_ModuleSpec is an autogenerated conversion function.
func Convert_v2_ModuleSpec_To_v3alpha1_ModuleSpec(in *ModuleSpec, out *v3alpha1.ModuleSpec, s conversion.Scope) error {
	return autoConvert_v2_ModuleSpec_To_v3alpha1_ModuleSpec(in, out, s)
}

func autoConvert_v3alpha1_ModuleSpec_To_v2_ModuleSpec(in *v3alpha1.ModuleSpec, out *ModuleSpec, s conversion.Scope) error {
	if true {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		if err := Convert_v3alpha1_AmbassadorID_To_v2_AmbassadorID(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.Config, &out.Config
		if err := Convert_v3alpha1_UntypedDict_To_v2_UntypedDict(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v3alpha1_ModuleSpec_To_v2_ModuleSpec is an autogenerated conversion function.
func Convert_v3alpha1_ModuleSpec_To_v2_ModuleSpec(in *v3alpha1.ModuleSpec, out *ModuleSpec, s conversion.Scope) error {
	return autoConvert_v3alpha1_ModuleSpec_To_v2_ModuleSpec(in, out, s)
}

func autoConvert_v2_PreviewURLSpec_To_v3alpha1_PreviewURLSpec(in *PreviewURLSpec, out *v3alpha1.PreviewURLSpec, s conversion.Scope) error {
	if true {
		in, out := &in.Enabled, &out.Enabled
		*out = *in
	}
	if true {
		in, out := &in.Type, &out.Type
		if err := Convert_v2_PreviewURLType_To_v3alpha1_PreviewURLType(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v2_PreviewURLSpec_To_v3alpha1_PreviewURLSpec is an autogenerated conversion function.
func Convert_v2_PreviewURLSpec_To_v3alpha1_PreviewURLSpec(in *PreviewURLSpec, out *v3alpha1.PreviewURLSpec, s conversion.Scope) error {
	return autoConvert_v2_PreviewURLSpec_To_v3alpha1_PreviewURLSpec(in, out, s)
}

func autoConvert_v3alpha1_PreviewURLSpec_To_v2_PreviewURLSpec(in *v3alpha1.PreviewURLSpec, out *PreviewURLSpec, s conversion.Scope) error {
	if true {
		in, out := &in.Enabled, &out.Enabled
		*out = *in
	}
	if true {
		in, out := &in.Type, &out.Type
		if err := Convert_v3alpha1_PreviewURLType_To_v2_PreviewURLType(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v3alpha1_PreviewURLSpec_To_v2_PreviewURLSpec is an autogenerated conversion function.
func Convert_v3alpha1_PreviewURLSpec_To_v2_PreviewURLSpec(in *v3alpha1.PreviewURLSpec, out *PreviewURLSpec, s conversion.Scope) error {
	return autoConvert_v3alpha1_PreviewURLSpec_To_v2_PreviewURLSpec(in, out, s)
}

func autoConvert_v2_PreviewURLType_To_v3alpha1_PreviewURLType(in *PreviewURLType, out *v3alpha1.PreviewURLType, s conversion.Scope) error {
	*out = v3alpha1.PreviewURLType(*in)
	return nil
}

// Convert_v2_PreviewURLType_To_v3alpha1_PreviewURLType is an autogenerated conversion function.
func Convert_v2_PreviewURLType_To_v3alpha1_PreviewURLType(in *PreviewURLType, out *v3alpha1.PreviewURLType, s conversion.Scope) error {
	return autoConvert_v2_PreviewURLType_To_v3alpha1_PreviewURLType(in, out, s)
}

func autoConvert_v3alpha1_PreviewURLType_To_v2_PreviewURLType(in *v3alpha1.PreviewURLType, out *PreviewURLType, s conversion.Scope) error {
	*out = PreviewURLType(*in)
	return nil
}

// Convert_v3alpha1_PreviewURLType_To_v2_PreviewURLType is an autogenerated conversion function.
func Convert_v3alpha1_PreviewURLType_To_v2_PreviewURLType(in *v3alpha1.PreviewURLType, out *PreviewURLType, s conversion.Scope) error {
	return autoConvert_v3alpha1_PreviewURLType_To_v2_PreviewURLType(in, out, s)
}

func autoConvert_v2_RateLimitService_To_v3alpha1_RateLimitService(in *RateLimitService, out *v3alpha1.RateLimitService, s conversion.Scope) error {
	if true {
		in, out := &in.ObjectMeta, &out.ObjectMeta
		*out = *in
	}
	if true {
		in, out := &in.Spec, &out.Spec
		if err := Convert_v2_RateLimitServiceSpec_To_v3alpha1_RateLimitServiceSpec(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v2_RateLimitService_To_v3alpha1_RateLimitService is an autogenerated conversion function.
func Convert_v2_RateLimitService_To_v3alpha1_RateLimitService(in *RateLimitService, out *v3alpha1.RateLimitService, s conversion.Scope) error {
	return autoConvert_v2_RateLimitService_To_v3alpha1_RateLimitService(in, out, s)
}

func autoConvert_v3alpha1_RateLimitService_To_v2_RateLimitService(in *v3alpha1.RateLimitService, out *RateLimitService, s conversion.Scope) error {
	if true {
		in, out := &in.ObjectMeta, &out.ObjectMeta
		*out = *in
	}
	if true {
		in, out := &in.Spec, &out.Spec
		if err := Convert_v3alpha1_RateLimitServiceSpec_To_v2_RateLimitServiceSpec(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v3alpha1_RateLimitService_To_v2_RateLimitService is an autogenerated conversion function.
func Convert_v3alpha1_RateLimitService_To_v2_RateLimitService(in *v3alpha1.RateLimitService, out *RateLimitService, s conversion.Scope) error {
	return autoConvert_v3alpha1_RateLimitService_To_v2_RateLimitService(in, out, s)
}

func autoConvert_v2_RateLimitServiceList_To_v3alpha1_RateLimitServiceList(in *RateLimitServiceList, out *v3alpha1.RateLimitServiceList, s conversion.Scope) error {
	if true {
		in, out := &in.ListMeta, &out.ListMeta
		*out = *in
	}
	if true {
		in, out := &in.Items, &out.Items
		if *in == nil {
			*out = nil
		} else {
			*out = make([]v3alpha1.RateLimitService, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v2_RateLimitService_To_v3alpha1_RateLimitService(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

// Convert_v2_RateLimitServiceList_To_v3alpha1_RateLimitServiceList is an autogenerated conversion function.
func Convert_v2_RateLimitServiceList_To_v3alpha1_RateLimitServiceList(in *RateLimitServiceList, out *v3alpha1.RateLimitServiceList, s conversion.Scope) error {
	return autoConvert_v2_RateLimitServiceList_To_v3alpha1_RateLimitServiceList(in, out, s)
}

func autoConvert_v3alpha1_RateLimitServiceList_To_v2_RateLimitServiceList(in *v3alpha1.RateLimitServiceList, out *RateLimitServiceList, s conversion.Scope) error {
	if true {
		in, out := &in.ListMeta, &out.ListMeta
		*out = *in
	}
	if true {
		in, out := &in.Items, &out.Items
		if *in == nil {
			*out = nil
		} else {
			*out = make([]RateLimitService, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v3alpha1_RateLimitService_To_v2_RateLimitService(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

// Convert_v3alpha1_RateLimitServiceList_To_v2_RateLimitServiceList is an autogenerated conversion function.
func Convert_v3alpha1_RateLimitServiceList_To_v2_RateLimitServiceList(in *v3alpha1.RateLimitServiceList, out *RateLimitServiceList, s conversion.Scope) error {
	return autoConvert_v3alpha1_RateLimitServiceList_To_v2_RateLimitServiceList(in, out, s)
}

func autoConvert_v2_RateLimitServiceSpec_To_v3alpha1_RateLimitServiceSpec(in *RateLimitServiceSpec, out *v3alpha1.RateLimitServiceSpec, s conversion.Scope) error {
	if true {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		if err := Convert_v2_AmbassadorID_To_v3alpha1_AmbassadorID(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.Service, &out.Service
		*out = *in
	}
	if true {
		in, out := &in.Timeout, &out.Timeout
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.MillisecondDuration)
			in, out := *in, *out
			if err := Convert_v2_MillisecondDuration_To_v3alpha1_MillisecondDuration(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.Domain, &out.Domain
		*out = *in
	}
	// INFO: in.TLS opted out of conversion generation via +k8s:conversion-gen=false
	if true {
		in, out := &in.ProtocolVersion, &out.ProtocolVersion
		*out = *in
	}
	if true {
		in, out := &in.V3StatsName, &out.StatsName
		*out = *in
	}
	return nil
}

func autoConvert_v3alpha1_RateLimitServiceSpec_To_v2_RateLimitServiceSpec(in *v3alpha1.RateLimitServiceSpec, out *RateLimitServiceSpec, s conversion.Scope) error {
	if true {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		if err := Convert_v3alpha1_AmbassadorID_To_v2_AmbassadorID(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.Service, &out.Service
		*out = *in
	}
	if true {
		in, out := &in.Timeout, &out.Timeout
		if *in == nil {
			*out = nil
		} else {
			*out = new(MillisecondDuration)
			in, out := *in, *out
			if err := Convert_v3alpha1_MillisecondDuration_To_v2_MillisecondDuration(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.Domain, &out.Domain
		*out = *in
	}
	if true {
		in, out := &in.TLS, &out.TLS
		if err := Convert_string_To_Pointer_v2_BoolOrString(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.ProtocolVersion, &out.ProtocolVersion
		*out = *in
	}
	if true {
		in, out := &in.StatsName, &out.V3StatsName
		*out = *in
	}
	// WARNING: in.V2ExplicitTLS requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v2_RegexMap_To_v3alpha1_RegexMap(in *RegexMap, out *v3alpha1.RegexMap, s conversion.Scope) error {
	*out = v3alpha1.RegexMap(*in)
	return nil
}

// Convert_v2_RegexMap_To_v3alpha1_RegexMap is an autogenerated conversion function.
func Convert_v2_RegexMap_To_v3alpha1_RegexMap(in *RegexMap, out *v3alpha1.RegexMap, s conversion.Scope) error {
	return autoConvert_v2_RegexMap_To_v3alpha1_RegexMap(in, out, s)
}

func autoConvert_v3alpha1_RegexMap_To_v2_RegexMap(in *v3alpha1.RegexMap, out *RegexMap, s conversion.Scope) error {
	*out = RegexMap(*in)
	return nil
}

// Convert_v3alpha1_RegexMap_To_v2_RegexMap is an autogenerated conversion function.
func Convert_v3alpha1_RegexMap_To_v2_RegexMap(in *v3alpha1.RegexMap, out *RegexMap, s conversion.Scope) error {
	return autoConvert_v3alpha1_RegexMap_To_v2_RegexMap(in, out, s)
}

func autoConvert_v2_RequestPolicy_To_v3alpha1_RequestPolicy(in *RequestPolicy, out *v3alpha1.RequestPolicy, s conversion.Scope) error {
	if true {
		in, out := &in.Insecure, &out.Insecure
		if err := Convert_v2_InsecureRequestPolicy_To_v3alpha1_InsecureRequestPolicy(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v2_RequestPolicy_To_v3alpha1_RequestPolicy is an autogenerated conversion function.
func Convert_v2_RequestPolicy_To_v3alpha1_RequestPolicy(in *RequestPolicy, out *v3alpha1.RequestPolicy, s conversion.Scope) error {
	return autoConvert_v2_RequestPolicy_To_v3alpha1_RequestPolicy(in, out, s)
}

func autoConvert_v3alpha1_RequestPolicy_To_v2_RequestPolicy(in *v3alpha1.RequestPolicy, out *RequestPolicy, s conversion.Scope) error {
	if true {
		in, out := &in.Insecure, &out.Insecure
		if err := Convert_v3alpha1_InsecureRequestPolicy_To_v2_InsecureRequestPolicy(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v3alpha1_RequestPolicy_To_v2_RequestPolicy is an autogenerated conversion function.
func Convert_v3alpha1_RequestPolicy_To_v2_RequestPolicy(in *v3alpha1.RequestPolicy, out *RequestPolicy, s conversion.Scope) error {
	return autoConvert_v3alpha1_RequestPolicy_To_v2_RequestPolicy(in, out, s)
}

func autoConvert_v2_RetryPolicy_To_v3alpha1_RetryPolicy(in *RetryPolicy, out *v3alpha1.RetryPolicy, s conversion.Scope) error {
	*out = v3alpha1.RetryPolicy(*in)
	return nil
}

// Convert_v2_RetryPolicy_To_v3alpha1_RetryPolicy is an autogenerated conversion function.
func Convert_v2_RetryPolicy_To_v3alpha1_RetryPolicy(in *RetryPolicy, out *v3alpha1.RetryPolicy, s conversion.Scope) error {
	return autoConvert_v2_RetryPolicy_To_v3alpha1_RetryPolicy(in, out, s)
}

func autoConvert_v3alpha1_RetryPolicy_To_v2_RetryPolicy(in *v3alpha1.RetryPolicy, out *RetryPolicy, s conversion.Scope) error {
	*out = RetryPolicy(*in)
	return nil
}

// Convert_v3alpha1_RetryPolicy_To_v2_RetryPolicy is an autogenerated conversion function.
func Convert_v3alpha1_RetryPolicy_To_v2_RetryPolicy(in *v3alpha1.RetryPolicy, out *RetryPolicy, s conversion.Scope) error {
	return autoConvert_v3alpha1_RetryPolicy_To_v2_RetryPolicy(in, out, s)
}

func autoConvert_v2_TCPMapping_To_v3alpha1_TCPMapping(in *TCPMapping, out *v3alpha1.TCPMapping, s conversion.Scope) error {
	if true {
		in, out := &in.ObjectMeta, &out.ObjectMeta
		*out = *in
	}
	if true {
		in, out := &in.Spec, &out.Spec
		if err := Convert_v2_TCPMappingSpec_To_v3alpha1_TCPMappingSpec(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v2_TCPMapping_To_v3alpha1_TCPMapping is an autogenerated conversion function.
func Convert_v2_TCPMapping_To_v3alpha1_TCPMapping(in *TCPMapping, out *v3alpha1.TCPMapping, s conversion.Scope) error {
	return autoConvert_v2_TCPMapping_To_v3alpha1_TCPMapping(in, out, s)
}

func autoConvert_v3alpha1_TCPMapping_To_v2_TCPMapping(in *v3alpha1.TCPMapping, out *TCPMapping, s conversion.Scope) error {
	if true {
		in, out := &in.ObjectMeta, &out.ObjectMeta
		*out = *in
	}
	if true {
		in, out := &in.Spec, &out.Spec
		if err := Convert_v3alpha1_TCPMappingSpec_To_v2_TCPMappingSpec(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v3alpha1_TCPMapping_To_v2_TCPMapping is an autogenerated conversion function.
func Convert_v3alpha1_TCPMapping_To_v2_TCPMapping(in *v3alpha1.TCPMapping, out *TCPMapping, s conversion.Scope) error {
	return autoConvert_v3alpha1_TCPMapping_To_v2_TCPMapping(in, out, s)
}

func autoConvert_v2_TCPMappingList_To_v3alpha1_TCPMappingList(in *TCPMappingList, out *v3alpha1.TCPMappingList, s conversion.Scope) error {
	if true {
		in, out := &in.ListMeta, &out.ListMeta
		*out = *in
	}
	if true {
		in, out := &in.Items, &out.Items
		if *in == nil {
			*out = nil
		} else {
			*out = make([]v3alpha1.TCPMapping, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v2_TCPMapping_To_v3alpha1_TCPMapping(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

// Convert_v2_TCPMappingList_To_v3alpha1_TCPMappingList is an autogenerated conversion function.
func Convert_v2_TCPMappingList_To_v3alpha1_TCPMappingList(in *TCPMappingList, out *v3alpha1.TCPMappingList, s conversion.Scope) error {
	return autoConvert_v2_TCPMappingList_To_v3alpha1_TCPMappingList(in, out, s)
}

func autoConvert_v3alpha1_TCPMappingList_To_v2_TCPMappingList(in *v3alpha1.TCPMappingList, out *TCPMappingList, s conversion.Scope) error {
	if true {
		in, out := &in.ListMeta, &out.ListMeta
		*out = *in
	}
	if true {
		in, out := &in.Items, &out.Items
		if *in == nil {
			*out = nil
		} else {
			*out = make([]TCPMapping, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v3alpha1_TCPMapping_To_v2_TCPMapping(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

// Convert_v3alpha1_TCPMappingList_To_v2_TCPMappingList is an autogenerated conversion function.
func Convert_v3alpha1_TCPMappingList_To_v2_TCPMappingList(in *v3alpha1.TCPMappingList, out *TCPMappingList, s conversion.Scope) error {
	return autoConvert_v3alpha1_TCPMappingList_To_v2_TCPMappingList(in, out, s)
}

func autoConvert_v2_TCPMappingSpec_To_v3alpha1_TCPMappingSpec(in *TCPMappingSpec, out *v3alpha1.TCPMappingSpec, s conversion.Scope) error {
	if true {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		if err := Convert_v2_AmbassadorID_To_v3alpha1_AmbassadorID(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.Port, &out.Port
		*out = *in
	}
	if true {
		in, out := &in.Host, &out.Host
		*out = *in
	}
	if true {
		in, out := &in.Address, &out.Address
		*out = *in
	}
	if true {
		in, out := &in.Service, &out.Service
		*out = *in
	}
	if true {
		in, out := &in.EnableIPv4, &out.EnableIPv4
		*out = *in
	}
	if true {
		in, out := &in.EnableIPv6, &out.EnableIPv6
		*out = *in
	}
	if true {
		in, out := &in.CircuitBreakers, &out.CircuitBreakers
		if *in == nil {
			*out = nil
		} else {
			*out = make([]v3alpha1.CircuitBreaker, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v2_CircuitBreaker_To_v3alpha1_CircuitBreaker(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	if true {
		in, out := &in.IdleTimeoutMs, &out.IdleTimeoutMs
		*out = *in
	}
	if true {
		in, out := &in.Resolver, &out.Resolver
		*out = *in
	}
	// INFO: in.TLS opted out of conversion generation via +k8s:conversion-gen=false
	if true {
		in, out := &in.Weight, &out.Weight
		*out = *in
	}
	if true {
		in, out := &in.ClusterTag, &out.ClusterTag
		*out = *in
	}
	if true {
		in, out := &in.V3StatsName, &out.StatsName
		*out = *in
	}
	return nil
}

func autoConvert_v3alpha1_TCPMappingSpec_To_v2_TCPMappingSpec(in *v3alpha1.TCPMappingSpec, out *TCPMappingSpec, s conversion.Scope) error {
	if true {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		if err := Convert_v3alpha1_AmbassadorID_To_v2_AmbassadorID(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.Port, &out.Port
		*out = *in
	}
	if true {
		in, out := &in.Host, &out.Host
		*out = *in
	}
	if true {
		in, out := &in.Address, &out.Address
		*out = *in
	}
	if true {
		in, out := &in.Service, &out.Service
		*out = *in
	}
	if true {
		in, out := &in.EnableIPv4, &out.EnableIPv4
		*out = *in
	}
	if true {
		in, out := &in.EnableIPv6, &out.EnableIPv6
		*out = *in
	}
	if true {
		in, out := &in.CircuitBreakers, &out.CircuitBreakers
		if *in == nil {
			*out = nil
		} else {
			*out = make([]CircuitBreaker, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v3alpha1_CircuitBreaker_To_v2_CircuitBreaker(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	if true {
		in, out := &in.IdleTimeoutMs, &out.IdleTimeoutMs
		*out = *in
	}
	if true {
		in, out := &in.Resolver, &out.Resolver
		*out = *in
	}
	if true {
		in, out := &in.TLS, &out.TLS
		if err := Convert_string_To_Pointer_v2_BoolOrString(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.Weight, &out.Weight
		*out = *in
	}
	if true {
		in, out := &in.ClusterTag, &out.ClusterTag
		*out = *in
	}
	if true {
		in, out := &in.StatsName, &out.V3StatsName
		*out = *in
	}
	// WARNING: in.V2ExplicitTLS requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v2_TLSConfig_To_v3alpha1_TLSConfig(in *TLSConfig, out *v3alpha1.TLSConfig, s conversion.Scope) error {
	*out = v3alpha1.TLSConfig(*in)
	return nil
}

// Convert_v2_TLSConfig_To_v3alpha1_TLSConfig is an autogenerated conversion function.
func Convert_v2_TLSConfig_To_v3alpha1_TLSConfig(in *TLSConfig, out *v3alpha1.TLSConfig, s conversion.Scope) error {
	return autoConvert_v2_TLSConfig_To_v3alpha1_TLSConfig(in, out, s)
}

func autoConvert_v3alpha1_TLSConfig_To_v2_TLSConfig(in *v3alpha1.TLSConfig, out *TLSConfig, s conversion.Scope) error {
	*out = TLSConfig(*in)
	return nil
}

// Convert_v3alpha1_TLSConfig_To_v2_TLSConfig is an autogenerated conversion function.
func Convert_v3alpha1_TLSConfig_To_v2_TLSConfig(in *v3alpha1.TLSConfig, out *TLSConfig, s conversion.Scope) error {
	return autoConvert_v3alpha1_TLSConfig_To_v2_TLSConfig(in, out, s)
}

func autoConvert_v2_TLSContext_To_v3alpha1_TLSContext(in *TLSContext, out *v3alpha1.TLSContext, s conversion.Scope) error {
	if true {
		in, out := &in.ObjectMeta, &out.ObjectMeta
		*out = *in
	}
	if true {
		in, out := &in.Spec, &out.Spec
		if err := Convert_v2_TLSContextSpec_To_v3alpha1_TLSContextSpec(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v2_TLSContext_To_v3alpha1_TLSContext is an autogenerated conversion function.
func Convert_v2_TLSContext_To_v3alpha1_TLSContext(in *TLSContext, out *v3alpha1.TLSContext, s conversion.Scope) error {
	return autoConvert_v2_TLSContext_To_v3alpha1_TLSContext(in, out, s)
}

func autoConvert_v3alpha1_TLSContext_To_v2_TLSContext(in *v3alpha1.TLSContext, out *TLSContext, s conversion.Scope) error {
	if true {
		in, out := &in.ObjectMeta, &out.ObjectMeta
		*out = *in
	}
	if true {
		in, out := &in.Spec, &out.Spec
		if err := Convert_v3alpha1_TLSContextSpec_To_v2_TLSContextSpec(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v3alpha1_TLSContext_To_v2_TLSContext is an autogenerated conversion function.
func Convert_v3alpha1_TLSContext_To_v2_TLSContext(in *v3alpha1.TLSContext, out *TLSContext, s conversion.Scope) error {
	return autoConvert_v3alpha1_TLSContext_To_v2_TLSContext(in, out, s)
}

func autoConvert_v2_TLSContextList_To_v3alpha1_TLSContextList(in *TLSContextList, out *v3alpha1.TLSContextList, s conversion.Scope) error {
	if true {
		in, out := &in.ListMeta, &out.ListMeta
		*out = *in
	}
	if true {
		in, out := &in.Items, &out.Items
		if *in == nil {
			*out = nil
		} else {
			*out = make([]v3alpha1.TLSContext, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v2_TLSContext_To_v3alpha1_TLSContext(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

// Convert_v2_TLSContextList_To_v3alpha1_TLSContextList is an autogenerated conversion function.
func Convert_v2_TLSContextList_To_v3alpha1_TLSContextList(in *TLSContextList, out *v3alpha1.TLSContextList, s conversion.Scope) error {
	return autoConvert_v2_TLSContextList_To_v3alpha1_TLSContextList(in, out, s)
}

func autoConvert_v3alpha1_TLSContextList_To_v2_TLSContextList(in *v3alpha1.TLSContextList, out *TLSContextList, s conversion.Scope) error {
	if true {
		in, out := &in.ListMeta, &out.ListMeta
		*out = *in
	}
	if true {
		in, out := &in.Items, &out.Items
		if *in == nil {
			*out = nil
		} else {
			*out = make([]TLSContext, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v3alpha1_TLSContext_To_v2_TLSContext(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

// Convert_v3alpha1_TLSContextList_To_v2_TLSContextList is an autogenerated conversion function.
func Convert_v3alpha1_TLSContextList_To_v2_TLSContextList(in *v3alpha1.TLSContextList, out *TLSContextList, s conversion.Scope) error {
	return autoConvert_v3alpha1_TLSContextList_To_v2_TLSContextList(in, out, s)
}

func autoConvert_v2_TLSContextSpec_To_v3alpha1_TLSContextSpec(in *TLSContextSpec, out *v3alpha1.TLSContextSpec, s conversion.Scope) error {
	if true {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		if err := Convert_v2_AmbassadorID_To_v3alpha1_AmbassadorID(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.Hosts, &out.Hosts
		*out = *in
	}
	if true {
		in, out := &in.Secret, &out.Secret
		*out = *in
	}
	if true {
		in, out := &in.CertChainFile, &out.CertChainFile
		*out = *in
	}
	if true {
		in, out := &in.PrivateKeyFile, &out.PrivateKeyFile
		*out = *in
	}
	if true {
		in, out := &in.CASecret, &out.CASecret
		*out = *in
	}
	if true {
		in, out := &in.CACertChainFile, &out.CACertChainFile
		*out = *in
	}
	if true {
		in, out := &in.ALPNProtocols, &out.ALPNProtocols
		*out = *in
	}
	if true {
		in, out := &in.CertRequired, &out.CertRequired
		*out = *in
	}
	if true {
		in, out := &in.MinTLSVersion, &out.MinTLSVersion
		*out = *in
	}
	if true {
		in, out := &in.MaxTLSVersion, &out.MaxTLSVersion
		*out = *in
	}
	if true {
		in, out := &in.CipherSuites, &out.CipherSuites
		*out = *in
	}
	if true {
		in, out := &in.ECDHCurves, &out.ECDHCurves
		*out = *in
	}
	if true {
		in, out := &in.SecretNamespacing, &out.SecretNamespacing
		*out = *in
	}
	if true {
		in, out := &in.RedirectCleartextFrom, &out.RedirectCleartextFrom
		*out = *in
	}
	if true {
		in, out := &in.SNI, &out.SNI
		*out = *in
	}
	return nil
}

// Convert_v2_TLSContextSpec_To_v3alpha1_TLSContextSpec is an autogenerated conversion function.
func Convert_v2_TLSContextSpec_To_v3alpha1_TLSContextSpec(in *TLSContextSpec, out *v3alpha1.TLSContextSpec, s conversion.Scope) error {
	return autoConvert_v2_TLSContextSpec_To_v3alpha1_TLSContextSpec(in, out, s)
}

func autoConvert_v3alpha1_TLSContextSpec_To_v2_TLSContextSpec(in *v3alpha1.TLSContextSpec, out *TLSContextSpec, s conversion.Scope) error {
	if true {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		if err := Convert_v3alpha1_AmbassadorID_To_v2_AmbassadorID(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.Hosts, &out.Hosts
		*out = *in
	}
	if true {
		in, out := &in.Secret, &out.Secret
		*out = *in
	}
	if true {
		in, out := &in.CertChainFile, &out.CertChainFile
		*out = *in
	}
	if true {
		in, out := &in.PrivateKeyFile, &out.PrivateKeyFile
		*out = *in
	}
	if true {
		in, out := &in.CASecret, &out.CASecret
		*out = *in
	}
	if true {
		in, out := &in.CACertChainFile, &out.CACertChainFile
		*out = *in
	}
	if true {
		in, out := &in.ALPNProtocols, &out.ALPNProtocols
		*out = *in
	}
	if true {
		in, out := &in.CertRequired, &out.CertRequired
		*out = *in
	}
	if true {
		in, out := &in.MinTLSVersion, &out.MinTLSVersion
		*out = *in
	}
	if true {
		in, out := &in.MaxTLSVersion, &out.MaxTLSVersion
		*out = *in
	}
	if true {
		in, out := &in.CipherSuites, &out.CipherSuites
		*out = *in
	}
	if true {
		in, out := &in.ECDHCurves, &out.ECDHCurves
		*out = *in
	}
	if true {
		in, out := &in.SecretNamespacing, &out.SecretNamespacing
		*out = *in
	}
	if true {
		in, out := &in.RedirectCleartextFrom, &out.RedirectCleartextFrom
		*out = *in
	}
	if true {
		in, out := &in.SNI, &out.SNI
		*out = *in
	}
	return nil
}

// Convert_v3alpha1_TLSContextSpec_To_v2_TLSContextSpec is an autogenerated conversion function.
func Convert_v3alpha1_TLSContextSpec_To_v2_TLSContextSpec(in *v3alpha1.TLSContextSpec, out *TLSContextSpec, s conversion.Scope) error {
	return autoConvert_v3alpha1_TLSContextSpec_To_v2_TLSContextSpec(in, out, s)
}

func autoConvert_v2_TraceConfig_To_v3alpha1_TraceConfig(in *TraceConfig, out *v3alpha1.TraceConfig, s conversion.Scope) error {
	if true {
		in, out := &in.AccessTokenFile, &out.AccessTokenFile
		*out = *in
	}
	if true {
		in, out := &in.CollectorCluster, &out.CollectorCluster
		*out = *in
	}
	if true {
		in, out := &in.CollectorEndpoint, &out.CollectorEndpoint
		*out = *in
	}
	if true {
		in, out := &in.CollectorEndpointVersion, &out.CollectorEndpointVersion
		*out = *in
	}
	if true {
		in, out := &in.CollectorHostname, &out.CollectorHostname
		*out = *in
	}
	if true {
		in, out := &in.TraceID128Bit, &out.TraceID128Bit
		*out = *in
	}
	if true {
		in, out := &in.SharedSpanContext, &out.SharedSpanContext
		*out = *in
	}
	if true {
		in, out := &in.ServiceName, &out.ServiceName
		*out = *in
	}
	if true {
		in, out := &in.V3PropagationModes, &out.PropagationModes
		*out = *in
	}
	return nil
}

// Convert_v2_TraceConfig_To_v3alpha1_TraceConfig is an autogenerated conversion function.
func Convert_v2_TraceConfig_To_v3alpha1_TraceConfig(in *TraceConfig, out *v3alpha1.TraceConfig, s conversion.Scope) error {
	return autoConvert_v2_TraceConfig_To_v3alpha1_TraceConfig(in, out, s)
}

func autoConvert_v3alpha1_TraceConfig_To_v2_TraceConfig(in *v3alpha1.TraceConfig, out *TraceConfig, s conversion.Scope) error {
	if true {
		in, out := &in.AccessTokenFile, &out.AccessTokenFile
		*out = *in
	}
	if true {
		in, out := &in.CollectorCluster, &out.CollectorCluster
		*out = *in
	}
	if true {
		in, out := &in.CollectorEndpoint, &out.CollectorEndpoint
		*out = *in
	}
	if true {
		in, out := &in.CollectorEndpointVersion, &out.CollectorEndpointVersion
		*out = *in
	}
	if true {
		in, out := &in.CollectorHostname, &out.CollectorHostname
		*out = *in
	}
	if true {
		in, out := &in.PropagationModes, &out.V3PropagationModes
		*out = *in
	}
	if true {
		in, out := &in.TraceID128Bit, &out.TraceID128Bit
		*out = *in
	}
	if true {
		in, out := &in.SharedSpanContext, &out.SharedSpanContext
		*out = *in
	}
	if true {
		in, out := &in.ServiceName, &out.ServiceName
		*out = *in
	}
	return nil
}

// Convert_v3alpha1_TraceConfig_To_v2_TraceConfig is an autogenerated conversion function.
func Convert_v3alpha1_TraceConfig_To_v2_TraceConfig(in *v3alpha1.TraceConfig, out *TraceConfig, s conversion.Scope) error {
	return autoConvert_v3alpha1_TraceConfig_To_v2_TraceConfig(in, out, s)
}

func autoConvert_v2_TraceSampling_To_v3alpha1_TraceSampling(in *TraceSampling, out *v3alpha1.TraceSampling, s conversion.Scope) error {
	*out = v3alpha1.TraceSampling(*in)
	return nil
}

// Convert_v2_TraceSampling_To_v3alpha1_TraceSampling is an autogenerated conversion function.
func Convert_v2_TraceSampling_To_v3alpha1_TraceSampling(in *TraceSampling, out *v3alpha1.TraceSampling, s conversion.Scope) error {
	return autoConvert_v2_TraceSampling_To_v3alpha1_TraceSampling(in, out, s)
}

func autoConvert_v3alpha1_TraceSampling_To_v2_TraceSampling(in *v3alpha1.TraceSampling, out *TraceSampling, s conversion.Scope) error {
	*out = TraceSampling(*in)
	return nil
}

// Convert_v3alpha1_TraceSampling_To_v2_TraceSampling is an autogenerated conversion function.
func Convert_v3alpha1_TraceSampling_To_v2_TraceSampling(in *v3alpha1.TraceSampling, out *TraceSampling, s conversion.Scope) error {
	return autoConvert_v3alpha1_TraceSampling_To_v2_TraceSampling(in, out, s)
}

func autoConvert_v2_TracingService_To_v3alpha1_TracingService(in *TracingService, out *v3alpha1.TracingService, s conversion.Scope) error {
	if true {
		in, out := &in.ObjectMeta, &out.ObjectMeta
		*out = *in
	}
	if true {
		in, out := &in.Spec, &out.Spec
		if err := Convert_v2_TracingServiceSpec_To_v3alpha1_TracingServiceSpec(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v2_TracingService_To_v3alpha1_TracingService is an autogenerated conversion function.
func Convert_v2_TracingService_To_v3alpha1_TracingService(in *TracingService, out *v3alpha1.TracingService, s conversion.Scope) error {
	return autoConvert_v2_TracingService_To_v3alpha1_TracingService(in, out, s)
}

func autoConvert_v3alpha1_TracingService_To_v2_TracingService(in *v3alpha1.TracingService, out *TracingService, s conversion.Scope) error {
	if true {
		in, out := &in.ObjectMeta, &out.ObjectMeta
		*out = *in
	}
	if true {
		in, out := &in.Spec, &out.Spec
		if err := Convert_v3alpha1_TracingServiceSpec_To_v2_TracingServiceSpec(in, out, s); err != nil {
			return err
		}
	}
	return nil
}

// Convert_v3alpha1_TracingService_To_v2_TracingService is an autogenerated conversion function.
func Convert_v3alpha1_TracingService_To_v2_TracingService(in *v3alpha1.TracingService, out *TracingService, s conversion.Scope) error {
	return autoConvert_v3alpha1_TracingService_To_v2_TracingService(in, out, s)
}

func autoConvert_v2_TracingServiceList_To_v3alpha1_TracingServiceList(in *TracingServiceList, out *v3alpha1.TracingServiceList, s conversion.Scope) error {
	if true {
		in, out := &in.ListMeta, &out.ListMeta
		*out = *in
	}
	if true {
		in, out := &in.Items, &out.Items
		if *in == nil {
			*out = nil
		} else {
			*out = make([]v3alpha1.TracingService, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v2_TracingService_To_v3alpha1_TracingService(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

// Convert_v2_TracingServiceList_To_v3alpha1_TracingServiceList is an autogenerated conversion function.
func Convert_v2_TracingServiceList_To_v3alpha1_TracingServiceList(in *TracingServiceList, out *v3alpha1.TracingServiceList, s conversion.Scope) error {
	return autoConvert_v2_TracingServiceList_To_v3alpha1_TracingServiceList(in, out, s)
}

func autoConvert_v3alpha1_TracingServiceList_To_v2_TracingServiceList(in *v3alpha1.TracingServiceList, out *TracingServiceList, s conversion.Scope) error {
	if true {
		in, out := &in.ListMeta, &out.ListMeta
		*out = *in
	}
	if true {
		in, out := &in.Items, &out.Items
		if *in == nil {
			*out = nil
		} else {
			*out = make([]TracingService, len(*in))
			for i := range *in {
				in, out := &(*in)[i], &(*out)[i]
				if err := Convert_v3alpha1_TracingService_To_v2_TracingService(in, out, s); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

// Convert_v3alpha1_TracingServiceList_To_v2_TracingServiceList is an autogenerated conversion function.
func Convert_v3alpha1_TracingServiceList_To_v2_TracingServiceList(in *v3alpha1.TracingServiceList, out *TracingServiceList, s conversion.Scope) error {
	return autoConvert_v3alpha1_TracingServiceList_To_v2_TracingServiceList(in, out, s)
}

func autoConvert_v2_TracingServiceSpec_To_v3alpha1_TracingServiceSpec(in *TracingServiceSpec, out *v3alpha1.TracingServiceSpec, s conversion.Scope) error {
	if true {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		if err := Convert_v2_AmbassadorID_To_v3alpha1_AmbassadorID(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.Driver, &out.Driver
		*out = *in
	}
	if true {
		in, out := &in.Service, &out.Service
		*out = *in
	}
	if true {
		in, out := &in.Sampling, &out.Sampling
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.TraceSampling)
			in, out := *in, *out
			if err := Convert_v2_TraceSampling_To_v3alpha1_TraceSampling(in, out, s); err != nil {
				return err
			}
		}
	}
	// WARNING: in.TagHeaders requires manual conversion: does not exist in peer-type
	if true {
		in, out := &in.Config, &out.Config
		if *in == nil {
			*out = nil
		} else {
			*out = new(v3alpha1.TraceConfig)
			in, out := *in, *out
			if err := Convert_v2_TraceConfig_To_v3alpha1_TraceConfig(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.V3StatsName, &out.StatsName
		*out = *in
	}
	if true {
		in, out := &in.V3CustomTags, &out.CustomTags
		*out = *in
	}
	return nil
}

func autoConvert_v3alpha1_TracingServiceSpec_To_v2_TracingServiceSpec(in *v3alpha1.TracingServiceSpec, out *TracingServiceSpec, s conversion.Scope) error {
	if true {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		if err := Convert_v3alpha1_AmbassadorID_To_v2_AmbassadorID(in, out, s); err != nil {
			return err
		}
	}
	if true {
		in, out := &in.Driver, &out.Driver
		*out = *in
	}
	if true {
		in, out := &in.Service, &out.Service
		*out = *in
	}
	if true {
		in, out := &in.Sampling, &out.Sampling
		if *in == nil {
			*out = nil
		} else {
			*out = new(TraceSampling)
			in, out := *in, *out
			if err := Convert_v3alpha1_TraceSampling_To_v2_TraceSampling(in, out, s); err != nil {
				return err
			}
		}
	}
	// WARNING: in.DeprecatedTagHeaders requires manual conversion: does not exist in peer-type
	if true {
		in, out := &in.CustomTags, &out.V3CustomTags
		*out = *in
	}
	if true {
		in, out := &in.Config, &out.Config
		if *in == nil {
			*out = nil
		} else {
			*out = new(TraceConfig)
			in, out := *in, *out
			if err := Convert_v3alpha1_TraceConfig_To_v2_TraceConfig(in, out, s); err != nil {
				return err
			}
		}
	}
	if true {
		in, out := &in.StatsName, &out.V3StatsName
		*out = *in
	}
	return nil
}

func autoConvert_v2_UntypedDict_To_v3alpha1_UntypedDict(in *UntypedDict, out *v3alpha1.UntypedDict, s conversion.Scope) error {
	*out = v3alpha1.UntypedDict(*in)
	return nil
}

// Convert_v2_UntypedDict_To_v3alpha1_UntypedDict is an autogenerated conversion function.
func Convert_v2_UntypedDict_To_v3alpha1_UntypedDict(in *UntypedDict, out *v3alpha1.UntypedDict, s conversion.Scope) error {
	return autoConvert_v2_UntypedDict_To_v3alpha1_UntypedDict(in, out, s)
}

func autoConvert_v3alpha1_UntypedDict_To_v2_UntypedDict(in *v3alpha1.UntypedDict, out *UntypedDict, s conversion.Scope) error {
	*out = UntypedDict(*in)
	return nil
}

// Convert_v3alpha1_UntypedDict_To_v2_UntypedDict is an autogenerated conversion function.
func Convert_v3alpha1_UntypedDict_To_v2_UntypedDict(in *v3alpha1.UntypedDict, out *UntypedDict, s conversion.Scope) error {
	return autoConvert_v3alpha1_UntypedDict_To_v2_UntypedDict(in, out, s)
}
