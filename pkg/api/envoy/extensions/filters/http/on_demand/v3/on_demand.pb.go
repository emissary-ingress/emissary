// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: envoy/extensions/filters/http/on_demand/v3/on_demand.proto

package envoy_extensions_filters_http_on_demand_v3

import (
	fmt "fmt"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type OnDemand struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OnDemand) Reset()         { *m = OnDemand{} }
func (m *OnDemand) String() string { return proto.CompactTextString(m) }
func (*OnDemand) ProtoMessage()    {}
func (*OnDemand) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea492b8a9902099a, []int{0}
}
func (m *OnDemand) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OnDemand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OnDemand.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OnDemand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnDemand.Merge(m, src)
}
func (m *OnDemand) XXX_Size() int {
	return m.Size()
}
func (m *OnDemand) XXX_DiscardUnknown() {
	xxx_messageInfo_OnDemand.DiscardUnknown(m)
}

var xxx_messageInfo_OnDemand proto.InternalMessageInfo

func init() {
	proto.RegisterType((*OnDemand)(nil), "envoy.extensions.filters.http.on_demand.v3.OnDemand")
}

func init() {
	proto.RegisterFile("envoy/extensions/filters/http/on_demand/v3/on_demand.proto", fileDescriptor_ea492b8a9902099a)
}

var fileDescriptor_ea492b8a9902099a = []byte{
	// 214 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xb2, 0x4a, 0xcd, 0x2b, 0xcb,
	0xaf, 0xd4, 0x4f, 0xad, 0x28, 0x49, 0xcd, 0x2b, 0xce, 0xcc, 0xcf, 0x2b, 0xd6, 0x4f, 0xcb, 0xcc,
	0x29, 0x49, 0x2d, 0x2a, 0xd6, 0xcf, 0x28, 0x29, 0x29, 0xd0, 0xcf, 0xcf, 0x8b, 0x4f, 0x49, 0xcd,
	0x4d, 0xcc, 0x4b, 0xd1, 0x2f, 0x33, 0x46, 0x70, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0xb4,
	0xc0, 0x7a, 0xf5, 0x10, 0x7a, 0xf5, 0xa0, 0x7a, 0xf5, 0x40, 0x7a, 0xf5, 0x10, 0xca, 0xcb, 0x8c,
	0xa5, 0x14, 0x4b, 0x53, 0x0a, 0x12, 0xf5, 0x13, 0xf3, 0xf2, 0xf2, 0x4b, 0x12, 0x4b, 0xc0, 0xf6,
	0x94, 0xa5, 0x16, 0x81, 0x34, 0x65, 0xe6, 0xa5, 0x43, 0x8c, 0x93, 0x12, 0x2f, 0x4b, 0xcc, 0xc9,
	0x4c, 0x49, 0x2c, 0x49, 0xd5, 0x87, 0x31, 0x20, 0x12, 0x4a, 0x8e, 0x5c, 0x1c, 0xfe, 0x79, 0x2e,
	0x60, 0xa3, 0xac, 0x4c, 0x67, 0x1d, 0xed, 0x90, 0x33, 0xe0, 0xd2, 0x83, 0x58, 0x9d, 0x9c, 0x9f,
	0x97, 0x96, 0x99, 0x0e, 0xb5, 0x16, 0xc3, 0x56, 0x23, 0x3d, 0x98, 0x36, 0xa7, 0xf0, 0x13, 0x8f,
	0xe4, 0x18, 0x2f, 0x3c, 0x92, 0x63, 0x7c, 0xf0, 0x48, 0x8e, 0x91, 0xcb, 0x22, 0x33, 0x1f, 0x62,
	0x40, 0x41, 0x51, 0x7e, 0x45, 0xa5, 0x1e, 0xf1, 0xde, 0x70, 0xe2, 0x85, 0x99, 0x18, 0x00, 0x72,
	0x59, 0x00, 0x63, 0x12, 0x1b, 0xd8, 0x89, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9f, 0x9c,
	0x14, 0x9f, 0x48, 0x01, 0x00, 0x00,
}

func (m *OnDemand) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OnDemand) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OnDemand) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func encodeVarintOnDemand(dAtA []byte, offset int, v uint64) int {
	offset -= sovOnDemand(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *OnDemand) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovOnDemand(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozOnDemand(x uint64) (n int) {
	return sovOnDemand(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *OnDemand) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOnDemand
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OnDemand: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OnDemand: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipOnDemand(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOnDemand
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthOnDemand
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipOnDemand(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowOnDemand
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOnDemand
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOnDemand
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthOnDemand
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupOnDemand
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthOnDemand
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthOnDemand        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowOnDemand          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupOnDemand = fmt.Errorf("proto: unexpected end of group")
)
