// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: envoy/config/core/v3/event_service_config.proto

package envoy_config_core_v3

import (
	fmt "fmt"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// [#not-implemented-hide:]
// Configuration of the event reporting service endpoint.
type EventServiceConfig struct {
	// Types that are valid to be assigned to ConfigSourceSpecifier:
	//	*EventServiceConfig_GrpcService
	ConfigSourceSpecifier isEventServiceConfig_ConfigSourceSpecifier `protobuf_oneof:"config_source_specifier"`
	XXX_NoUnkeyedLiteral  struct{}                                   `json:"-"`
	XXX_unrecognized      []byte                                     `json:"-"`
	XXX_sizecache         int32                                      `json:"-"`
}

func (m *EventServiceConfig) Reset()         { *m = EventServiceConfig{} }
func (m *EventServiceConfig) String() string { return proto.CompactTextString(m) }
func (*EventServiceConfig) ProtoMessage()    {}
func (*EventServiceConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ac21a54a741b487, []int{0}
}
func (m *EventServiceConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventServiceConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EventServiceConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EventServiceConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventServiceConfig.Merge(m, src)
}
func (m *EventServiceConfig) XXX_Size() int {
	return m.Size()
}
func (m *EventServiceConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_EventServiceConfig.DiscardUnknown(m)
}

var xxx_messageInfo_EventServiceConfig proto.InternalMessageInfo

type isEventServiceConfig_ConfigSourceSpecifier interface {
	isEventServiceConfig_ConfigSourceSpecifier()
	MarshalTo([]byte) (int, error)
	Size() int
}

type EventServiceConfig_GrpcService struct {
	GrpcService *GrpcService `protobuf:"bytes,1,opt,name=grpc_service,json=grpcService,proto3,oneof" json:"grpc_service,omitempty"`
}

func (*EventServiceConfig_GrpcService) isEventServiceConfig_ConfigSourceSpecifier() {}

func (m *EventServiceConfig) GetConfigSourceSpecifier() isEventServiceConfig_ConfigSourceSpecifier {
	if m != nil {
		return m.ConfigSourceSpecifier
	}
	return nil
}

func (m *EventServiceConfig) GetGrpcService() *GrpcService {
	if x, ok := m.GetConfigSourceSpecifier().(*EventServiceConfig_GrpcService); ok {
		return x.GrpcService
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*EventServiceConfig) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*EventServiceConfig_GrpcService)(nil),
	}
}

func init() {
	proto.RegisterType((*EventServiceConfig)(nil), "envoy.config.core.v3.EventServiceConfig")
}

func init() {
	proto.RegisterFile("envoy/config/core/v3/event_service_config.proto", fileDescriptor_8ac21a54a741b487)
}

var fileDescriptor_8ac21a54a741b487 = []byte{
	// 296 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x4f, 0x4a, 0xf4, 0x30,
	0x18, 0xc6, 0xbf, 0x7c, 0xc2, 0x2c, 0x32, 0x2e, 0xa4, 0x08, 0x95, 0x82, 0xc5, 0x19, 0x44, 0x05,
	0x21, 0x81, 0xe9, 0xce, 0x65, 0xc5, 0x3f, 0xcb, 0xc1, 0x39, 0x40, 0x89, 0x99, 0x4c, 0x09, 0x48,
	0xde, 0x90, 0xa4, 0xc1, 0xd9, 0xb9, 0xf4, 0x0c, 0xde, 0xc0, 0x2b, 0xb8, 0x17, 0x66, 0xa9, 0x37,
	0x90, 0x9e, 0xc2, 0xa5, 0xb4, 0xe9, 0xa0, 0xd0, 0xee, 0x92, 0x3c, 0xfc, 0xde, 0xe7, 0xf7, 0x06,
	0x53, 0xa1, 0x3c, 0xac, 0x29, 0x07, 0xb5, 0x92, 0x25, 0xe5, 0x60, 0x04, 0xf5, 0x19, 0x15, 0x5e,
	0x28, 0x57, 0x58, 0x61, 0xbc, 0xe4, 0xa2, 0x08, 0x21, 0xd1, 0x06, 0x1c, 0x44, 0xfb, 0x2d, 0x40,
	0xba, 0xb7, 0x06, 0x20, 0x3e, 0x4b, 0x4e, 0x07, 0xc7, 0x94, 0x46, 0xf3, 0xed, 0x94, 0x80, 0x27,
	0x87, 0xd5, 0x52, 0x33, 0xca, 0x94, 0x02, 0xc7, 0x9c, 0x04, 0x65, 0xa9, 0x75, 0xcc, 0x55, 0xb6,
	0x8b, 0x27, 0xbd, 0xd8, 0x0b, 0x63, 0x25, 0x28, 0xa9, 0x3a, 0x81, 0x24, 0xf6, 0xec, 0x41, 0x2e,
	0x99, 0x13, 0x74, 0x7b, 0x08, 0xc1, 0xf4, 0x15, 0xe1, 0xe8, 0xaa, 0x11, 0x5f, 0x84, 0xc6, 0xcb,
	0x56, 0x26, 0xba, 0xc6, 0xbb, 0x7f, 0x3d, 0x0e, 0xd0, 0x11, 0x3a, 0x1b, 0xcf, 0x26, 0x64, 0x68,
	0x0f, 0x72, 0x63, 0x34, 0xef, 0xf0, 0xdb, 0x7f, 0x77, 0xe3, 0xf2, 0xf7, 0x7a, 0x71, 0xfe, 0xf2,
	0xfe, 0x9c, 0x9e, 0xe0, 0xe3, 0xc0, 0x31, 0x2d, 0x89, 0x9f, 0x05, 0xae, 0x5f, 0x9a, 0xa7, 0x38,
	0x0e, 0x93, 0x0b, 0x0b, 0x95, 0xe1, 0xa2, 0xb0, 0x5a, 0x70, 0xb9, 0x92, 0xc2, 0x44, 0x3b, 0xdf,
	0x39, 0xca, 0x17, 0x9b, 0x3a, 0x45, 0x1f, 0x75, 0x8a, 0xbe, 0xea, 0x14, 0xbd, 0x3d, 0x6d, 0x3e,
	0x47, 0xff, 0xf7, 0x10, 0x9e, 0x4a, 0x08, 0x5a, 0xda, 0xc0, 0xe3, 0x7a, 0xd0, 0x30, 0x8f, 0xfb,
	0x6d, 0xf3, 0x66, 0xfd, 0x39, 0xba, 0x1f, 0xb5, 0xff, 0x90, 0xfd, 0x04, 0x00, 0x00, 0xff, 0xff,
	0x67, 0x00, 0xf7, 0x91, 0xd4, 0x01, 0x00, 0x00,
}

func (m *EventServiceConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventServiceConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventServiceConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ConfigSourceSpecifier != nil {
		{
			size := m.ConfigSourceSpecifier.Size()
			i -= size
			if _, err := m.ConfigSourceSpecifier.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *EventServiceConfig_GrpcService) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventServiceConfig_GrpcService) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.GrpcService != nil {
		{
			size, err := m.GrpcService.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintEventServiceConfig(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func encodeVarintEventServiceConfig(dAtA []byte, offset int, v uint64) int {
	offset -= sovEventServiceConfig(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *EventServiceConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ConfigSourceSpecifier != nil {
		n += m.ConfigSourceSpecifier.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EventServiceConfig_GrpcService) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GrpcService != nil {
		l = m.GrpcService.Size()
		n += 1 + l + sovEventServiceConfig(uint64(l))
	}
	return n
}

func sovEventServiceConfig(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozEventServiceConfig(x uint64) (n int) {
	return sovEventServiceConfig(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *EventServiceConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEventServiceConfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventServiceConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventServiceConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GrpcService", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEventServiceConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthEventServiceConfig
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthEventServiceConfig
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &GrpcService{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ConfigSourceSpecifier = &EventServiceConfig_GrpcService{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEventServiceConfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthEventServiceConfig
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthEventServiceConfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipEventServiceConfig(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowEventServiceConfig
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEventServiceConfig
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEventServiceConfig
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthEventServiceConfig
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupEventServiceConfig
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthEventServiceConfig
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthEventServiceConfig        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowEventServiceConfig          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupEventServiceConfig = fmt.Errorf("proto: unexpected end of group")
)
