// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: envoy/config/core/v3/grpc_method_list.proto

package envoy_config_core_v3

import (
	fmt "fmt"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// A list of gRPC methods which can be used as an allowlist, for example.
type GrpcMethodList struct {
	Services             []*GrpcMethodList_Service `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GrpcMethodList) Reset()         { *m = GrpcMethodList{} }
func (m *GrpcMethodList) String() string { return proto.CompactTextString(m) }
func (*GrpcMethodList) ProtoMessage()    {}
func (*GrpcMethodList) Descriptor() ([]byte, []int) {
	return fileDescriptor_d981ee1c8b523d47, []int{0}
}
func (m *GrpcMethodList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GrpcMethodList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GrpcMethodList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GrpcMethodList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcMethodList.Merge(m, src)
}
func (m *GrpcMethodList) XXX_Size() int {
	return m.Size()
}
func (m *GrpcMethodList) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcMethodList.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcMethodList proto.InternalMessageInfo

func (m *GrpcMethodList) GetServices() []*GrpcMethodList_Service {
	if m != nil {
		return m.Services
	}
	return nil
}

type GrpcMethodList_Service struct {
	// The name of the gRPC service.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The names of the gRPC methods in this service.
	MethodNames          []string `protobuf:"bytes,2,rep,name=method_names,json=methodNames,proto3" json:"method_names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpcMethodList_Service) Reset()         { *m = GrpcMethodList_Service{} }
func (m *GrpcMethodList_Service) String() string { return proto.CompactTextString(m) }
func (*GrpcMethodList_Service) ProtoMessage()    {}
func (*GrpcMethodList_Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_d981ee1c8b523d47, []int{0, 0}
}
func (m *GrpcMethodList_Service) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GrpcMethodList_Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GrpcMethodList_Service.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GrpcMethodList_Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcMethodList_Service.Merge(m, src)
}
func (m *GrpcMethodList_Service) XXX_Size() int {
	return m.Size()
}
func (m *GrpcMethodList_Service) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcMethodList_Service.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcMethodList_Service proto.InternalMessageInfo

func (m *GrpcMethodList_Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GrpcMethodList_Service) GetMethodNames() []string {
	if m != nil {
		return m.MethodNames
	}
	return nil
}

func init() {
	proto.RegisterType((*GrpcMethodList)(nil), "envoy.config.core.v3.GrpcMethodList")
	proto.RegisterType((*GrpcMethodList_Service)(nil), "envoy.config.core.v3.GrpcMethodList.Service")
}

func init() {
	proto.RegisterFile("envoy/config/core/v3/grpc_method_list.proto", fileDescriptor_d981ee1c8b523d47)
}

var fileDescriptor_d981ee1c8b523d47 = []byte{
	// 333 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0x3f, 0x4b, 0x03, 0x31,
	0x00, 0xc5, 0xc9, 0xb5, 0xf6, 0x4f, 0x2a, 0x22, 0xa7, 0x60, 0xa9, 0x78, 0x9c, 0x5d, 0x3c, 0xac,
	0x24, 0xd0, 0x6e, 0x1d, 0x6f, 0xd1, 0xc1, 0x3f, 0xa5, 0x7e, 0x80, 0x12, 0xaf, 0xb1, 0x06, 0xda,
	0x24, 0x24, 0x69, 0xb0, 0x9b, 0x83, 0x83, 0x38, 0x3a, 0xfa, 0x51, 0xdc, 0x85, 0x8e, 0xfa, 0x0d,
	0xa4, 0x1f, 0xa3, 0x93, 0xdc, 0xa5, 0x0a, 0xc5, 0x03, 0xb7, 0xe4, 0xbd, 0xf7, 0x0b, 0x2f, 0x0f,
	0xb6, 0x28, 0xb7, 0x62, 0x86, 0x13, 0xc1, 0x6f, 0xd9, 0x08, 0x27, 0x42, 0x51, 0x6c, 0x3b, 0x78,
	0xa4, 0x64, 0x32, 0x98, 0x50, 0x73, 0x27, 0x86, 0x83, 0x31, 0xd3, 0x06, 0x49, 0x25, 0x8c, 0xf0,
	0x77, 0xb3, 0x30, 0x72, 0x61, 0x94, 0x86, 0x91, 0xed, 0x34, 0x0e, 0xa6, 0x43, 0x49, 0x30, 0xe1,
	0x5c, 0x18, 0x62, 0x98, 0xe0, 0x1a, 0x6b, 0x43, 0xcc, 0x54, 0x3b, 0xa8, 0x71, 0xf8, 0xc7, 0xb6,
	0x54, 0x69, 0x26, 0x38, 0xe3, 0xa3, 0x55, 0x64, 0xcf, 0x92, 0x31, 0x1b, 0x12, 0x43, 0xf1, 0xcf,
	0xc1, 0x19, 0xcd, 0x67, 0x0f, 0x6e, 0x9d, 0x2a, 0x99, 0x5c, 0x64, 0x55, 0xce, 0x99, 0x36, 0xfe,
	0x19, 0xac, 0x68, 0xaa, 0x2c, 0x4b, 0xa8, 0xae, 0x83, 0xb0, 0x10, 0xd5, 0xda, 0x27, 0x28, 0xaf,
	0x16, 0x5a, 0xe7, 0xd0, 0xb5, 0x83, 0xfa, 0xbf, 0x74, 0xe3, 0x11, 0xc0, 0xf2, 0x4a, 0xf5, 0xf7,
	0x61, 0x91, 0x93, 0x09, 0xad, 0x83, 0x10, 0x44, 0xd5, 0xb8, 0xbc, 0x8c, 0x8b, 0xca, 0x0b, 0x41,
	0x3f, 0x13, 0xfd, 0x16, 0xdc, 0x5c, 0x6d, 0x91, 0x5e, 0x75, 0xdd, 0x0b, 0x0b, 0x51, 0x35, 0xae,
	0x2c, 0xe3, 0x8d, 0x17, 0xe0, 0x55, 0x40, 0xbf, 0xe6, 0xdc, 0xcb, 0xd4, 0xec, 0xe2, 0xd7, 0xf7,
	0xa7, 0xe0, 0x18, 0x46, 0xae, 0x13, 0x91, 0x0c, 0xd9, 0xb6, 0xeb, 0x94, 0x5f, 0xa8, 0x7b, 0x94,
	0x02, 0x4d, 0x18, 0xfe, 0x07, 0xc4, 0x57, 0xf3, 0x45, 0x00, 0x3e, 0x16, 0x01, 0xf8, 0x5a, 0x04,
	0xe0, 0xed, 0x61, 0xfe, 0x59, 0xf2, 0xb6, 0x01, 0x6c, 0x32, 0xe1, 0xfe, 0x2f, 0x95, 0xb8, 0x9f,
	0xe5, 0x4e, 0x11, 0xef, 0xac, 0xbf, 0xd4, 0x4b, 0xb7, 0xed, 0x81, 0x9b, 0x52, 0x36, 0x72, 0xe7,
	0x3b, 0x00, 0x00, 0xff, 0xff, 0x76, 0x42, 0x34, 0x7d, 0x04, 0x02, 0x00, 0x00,
}

func (m *GrpcMethodList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GrpcMethodList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GrpcMethodList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Services) > 0 {
		for iNdEx := len(m.Services) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Services[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGrpcMethodList(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *GrpcMethodList_Service) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GrpcMethodList_Service) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GrpcMethodList_Service) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MethodNames) > 0 {
		for iNdEx := len(m.MethodNames) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.MethodNames[iNdEx])
			copy(dAtA[i:], m.MethodNames[iNdEx])
			i = encodeVarintGrpcMethodList(dAtA, i, uint64(len(m.MethodNames[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintGrpcMethodList(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintGrpcMethodList(dAtA []byte, offset int, v uint64) int {
	offset -= sovGrpcMethodList(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GrpcMethodList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Services) > 0 {
		for _, e := range m.Services {
			l = e.Size()
			n += 1 + l + sovGrpcMethodList(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GrpcMethodList_Service) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovGrpcMethodList(uint64(l))
	}
	if len(m.MethodNames) > 0 {
		for _, s := range m.MethodNames {
			l = len(s)
			n += 1 + l + sovGrpcMethodList(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovGrpcMethodList(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGrpcMethodList(x uint64) (n int) {
	return sovGrpcMethodList(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GrpcMethodList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGrpcMethodList
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GrpcMethodList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GrpcMethodList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Services", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcMethodList
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGrpcMethodList
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcMethodList
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Services = append(m.Services, &GrpcMethodList_Service{})
			if err := m.Services[len(m.Services)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGrpcMethodList(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGrpcMethodList
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthGrpcMethodList
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GrpcMethodList_Service) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGrpcMethodList
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Service: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Service: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcMethodList
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcMethodList
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcMethodList
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MethodNames", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcMethodList
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcMethodList
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcMethodList
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MethodNames = append(m.MethodNames, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGrpcMethodList(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGrpcMethodList
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthGrpcMethodList
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGrpcMethodList(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGrpcMethodList
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGrpcMethodList
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGrpcMethodList
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGrpcMethodList
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGrpcMethodList
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGrpcMethodList
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGrpcMethodList        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGrpcMethodList          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGrpcMethodList = fmt.Errorf("proto: unexpected end of group")
)
