// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: envoy/config/filter/http/grpc_stats/v2alpha/config.proto

package envoy_config_filter_http_grpc_stats_v2alpha

import (
	fmt "fmt"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	core "github.com/datawire/ambassador/pkg/api/envoy/api/v2/core"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// gRPC statistics filter configuration
type FilterConfig struct {
	// If true, the filter maintains a filter state object with the request and response message
	// counts.
	EmitFilterState bool `protobuf:"varint,1,opt,name=emit_filter_state,json=emitFilterState,proto3" json:"emit_filter_state,omitempty"`
	// Types that are valid to be assigned to PerMethodStatSpecifier:
	//	*FilterConfig_IndividualMethodStatsAllowlist
	//	*FilterConfig_StatsForAllMethods
	PerMethodStatSpecifier isFilterConfig_PerMethodStatSpecifier `protobuf_oneof:"per_method_stat_specifier"`
	XXX_NoUnkeyedLiteral   struct{}                              `json:"-"`
	XXX_unrecognized       []byte                                `json:"-"`
	XXX_sizecache          int32                                 `json:"-"`
}

func (m *FilterConfig) Reset()         { *m = FilterConfig{} }
func (m *FilterConfig) String() string { return proto.CompactTextString(m) }
func (*FilterConfig) ProtoMessage()    {}
func (*FilterConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_1419fab6b23f453d, []int{0}
}
func (m *FilterConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FilterConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FilterConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FilterConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterConfig.Merge(m, src)
}
func (m *FilterConfig) XXX_Size() int {
	return m.Size()
}
func (m *FilterConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterConfig.DiscardUnknown(m)
}

var xxx_messageInfo_FilterConfig proto.InternalMessageInfo

type isFilterConfig_PerMethodStatSpecifier interface {
	isFilterConfig_PerMethodStatSpecifier()
	MarshalTo([]byte) (int, error)
	Size() int
}

type FilterConfig_IndividualMethodStatsAllowlist struct {
	IndividualMethodStatsAllowlist *core.GrpcMethodList `protobuf:"bytes,2,opt,name=individual_method_stats_allowlist,json=individualMethodStatsAllowlist,proto3,oneof" json:"individual_method_stats_allowlist,omitempty"`
}
type FilterConfig_StatsForAllMethods struct {
	StatsForAllMethods *types.BoolValue `protobuf:"bytes,3,opt,name=stats_for_all_methods,json=statsForAllMethods,proto3,oneof" json:"stats_for_all_methods,omitempty"`
}

func (*FilterConfig_IndividualMethodStatsAllowlist) isFilterConfig_PerMethodStatSpecifier() {}
func (*FilterConfig_StatsForAllMethods) isFilterConfig_PerMethodStatSpecifier()             {}

func (m *FilterConfig) GetPerMethodStatSpecifier() isFilterConfig_PerMethodStatSpecifier {
	if m != nil {
		return m.PerMethodStatSpecifier
	}
	return nil
}

func (m *FilterConfig) GetEmitFilterState() bool {
	if m != nil {
		return m.EmitFilterState
	}
	return false
}

func (m *FilterConfig) GetIndividualMethodStatsAllowlist() *core.GrpcMethodList {
	if x, ok := m.GetPerMethodStatSpecifier().(*FilterConfig_IndividualMethodStatsAllowlist); ok {
		return x.IndividualMethodStatsAllowlist
	}
	return nil
}

func (m *FilterConfig) GetStatsForAllMethods() *types.BoolValue {
	if x, ok := m.GetPerMethodStatSpecifier().(*FilterConfig_StatsForAllMethods); ok {
		return x.StatsForAllMethods
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FilterConfig) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FilterConfig_IndividualMethodStatsAllowlist)(nil),
		(*FilterConfig_StatsForAllMethods)(nil),
	}
}

// gRPC statistics filter state object in protobuf form.
type FilterObject struct {
	// Count of request messages in the request stream.
	RequestMessageCount uint64 `protobuf:"varint,1,opt,name=request_message_count,json=requestMessageCount,proto3" json:"request_message_count,omitempty"`
	// Count of response messages in the response stream.
	ResponseMessageCount uint64   `protobuf:"varint,2,opt,name=response_message_count,json=responseMessageCount,proto3" json:"response_message_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FilterObject) Reset()         { *m = FilterObject{} }
func (m *FilterObject) String() string { return proto.CompactTextString(m) }
func (*FilterObject) ProtoMessage()    {}
func (*FilterObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_1419fab6b23f453d, []int{1}
}
func (m *FilterObject) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FilterObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FilterObject.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FilterObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterObject.Merge(m, src)
}
func (m *FilterObject) XXX_Size() int {
	return m.Size()
}
func (m *FilterObject) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterObject.DiscardUnknown(m)
}

var xxx_messageInfo_FilterObject proto.InternalMessageInfo

func (m *FilterObject) GetRequestMessageCount() uint64 {
	if m != nil {
		return m.RequestMessageCount
	}
	return 0
}

func (m *FilterObject) GetResponseMessageCount() uint64 {
	if m != nil {
		return m.ResponseMessageCount
	}
	return 0
}

func init() {
	proto.RegisterType((*FilterConfig)(nil), "envoy.config.filter.http.grpc_stats.v2alpha.FilterConfig")
	proto.RegisterType((*FilterObject)(nil), "envoy.config.filter.http.grpc_stats.v2alpha.FilterObject")
}

func init() {
	proto.RegisterFile("envoy/config/filter/http/grpc_stats/v2alpha/config.proto", fileDescriptor_1419fab6b23f453d)
}

var fileDescriptor_1419fab6b23f453d = []byte{
	// 491 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xc1, 0x6e, 0xd4, 0x3c,
	0x14, 0x85, 0x27, 0xf3, 0xff, 0x54, 0x28, 0x45, 0x02, 0x02, 0x85, 0x61, 0x10, 0x51, 0xdb, 0xd5,
	0x08, 0x84, 0x2d, 0xa5, 0x2c, 0x60, 0xd9, 0xa9, 0x54, 0xba, 0xa0, 0x6a, 0x35, 0x48, 0x6c, 0x23,
	0x4f, 0x72, 0x93, 0x31, 0xf2, 0xf8, 0x1a, 0xdb, 0x49, 0xa7, 0x3b, 0xde, 0x00, 0xb1, 0xeb, 0xb3,
	0xf0, 0x04, 0x5d, 0xc2, 0x1b, 0xa0, 0x79, 0x04, 0x1e, 0x00, 0x21, 0xdb, 0x89, 0x5a, 0xd1, 0x15,
	0xbb, 0x19, 0x1f, 0x7f, 0xe7, 0xfa, 0x9c, 0xdc, 0xf8, 0x35, 0xc8, 0x16, 0xcf, 0x69, 0x81, 0xb2,
	0xe2, 0x35, 0xad, 0xb8, 0xb0, 0xa0, 0xe9, 0xc2, 0x5a, 0x45, 0x6b, 0xad, 0x8a, 0xdc, 0x58, 0x66,
	0x0d, 0x6d, 0x33, 0x26, 0xd4, 0x82, 0x75, 0xb7, 0x88, 0xd2, 0x68, 0x31, 0x79, 0xe1, 0x49, 0xd2,
	0x9d, 0x05, 0x92, 0x38, 0x92, 0x5c, 0x91, 0xa4, 0x23, 0xc7, 0x93, 0x30, 0x86, 0x29, 0x4e, 0xdb,
	0x8c, 0x16, 0xa8, 0x21, 0xf8, 0x2f, 0xc1, 0x2e, 0xb0, 0xcc, 0x05, 0x37, 0x36, 0xd8, 0x8e, 0xd3,
	0x1a, 0xb1, 0x16, 0x40, 0xfd, 0xbf, 0x79, 0x53, 0xd1, 0x33, 0xcd, 0x94, 0x02, 0x6d, 0x7a, 0xbd,
	0x29, 0x15, 0xa3, 0x4c, 0x4a, 0xb4, 0xcc, 0x72, 0x94, 0x86, 0x2e, 0x79, 0xad, 0x99, 0x85, 0x4e,
	0x7f, 0x76, 0x43, 0x77, 0x2f, 0x69, 0x7a, 0xfc, 0x71, 0xcb, 0x04, 0x2f, 0x99, 0x05, 0xda, 0xff,
	0x08, 0xc2, 0xee, 0xc5, 0x30, 0xbe, 0x73, 0xe8, 0x43, 0x1c, 0xf8, 0x44, 0xc9, 0xf3, 0xf8, 0x3e,
	0x2c, 0xb9, 0xcd, 0x43, 0x32, 0x9f, 0x07, 0x46, 0xd1, 0x76, 0x34, 0xb9, 0x3d, 0xbb, 0xeb, 0x84,
	0x70, 0xf9, 0xbd, 0x3b, 0x4e, 0x64, 0xbc, 0xc3, 0x65, 0xc9, 0x5b, 0x5e, 0x36, 0x4c, 0xf4, 0xa1,
	0x7c, 0x03, 0x39, 0x13, 0x02, 0xcf, 0x5c, 0xbe, 0xd1, 0x70, 0x3b, 0x9a, 0x6c, 0x66, 0x3b, 0x24,
	0xf4, 0xc6, 0x14, 0x27, 0x6d, 0x46, 0x5c, 0x15, 0xe4, 0xad, 0x56, 0xc5, 0xb1, 0x87, 0xde, 0x71,
	0x63, 0x8f, 0x06, 0xb3, 0xf4, 0xca, 0x2d, 0x9c, 0xbb, 0x31, 0x66, 0xbf, 0xb7, 0x4a, 0x4e, 0xe2,
	0xad, 0xe0, 0x5e, 0xa1, 0x76, 0x13, 0xba, 0x91, 0x66, 0xf4, 0x9f, 0x9f, 0x31, 0x26, 0xa1, 0x44,
	0xd2, 0x97, 0x48, 0xa6, 0x88, 0xe2, 0x03, 0x13, 0x0d, 0x1c, 0x0d, 0x66, 0x89, 0x47, 0x0f, 0x51,
	0xef, 0x8b, 0xce, 0xdd, 0x4c, 0x9f, 0xc6, 0x4f, 0x14, 0xe8, 0xeb, 0x2f, 0xcf, 0x8d, 0x82, 0x82,
	0x57, 0x1c, 0xf4, 0xee, 0xaa, 0x6f, 0xe6, 0x64, 0xfe, 0x11, 0x0a, 0x9b, 0x64, 0xf1, 0x96, 0x86,
	0x4f, 0x0d, 0x18, 0x9b, 0x2f, 0xc1, 0x18, 0x56, 0x43, 0x5e, 0x60, 0x23, 0xad, 0x6f, 0xe7, 0xff,
	0xd9, 0x83, 0x4e, 0x3c, 0x0e, 0xda, 0x81, 0x93, 0x92, 0x57, 0xf1, 0x23, 0x0d, 0x46, 0xa1, 0x34,
	0xf0, 0x17, 0x34, 0xf4, 0xd0, 0xc3, 0x5e, 0xbd, 0x4e, 0x4d, 0xbf, 0x46, 0x97, 0xeb, 0x34, 0xfa,
	0xbe, 0x4e, 0xa3, 0x9f, 0xeb, 0x34, 0xfa, 0x75, 0xf1, 0xfb, 0xcb, 0xad, 0x97, 0xfd, 0xe2, 0xc1,
	0xca, 0x82, 0x34, 0xee, 0x0b, 0x77, 0xcb, 0x67, 0x6e, 0x6e, 0xdf, 0xde, 0xb7, 0xcf, 0x97, 0x3f,
	0x36, 0x86, 0xf7, 0x06, 0xf1, 0x1b, 0x8e, 0xa1, 0x78, 0xa5, 0x71, 0x75, 0x4e, 0xfe, 0x61, 0x77,
	0xa7, 0x9b, 0x61, 0x21, 0x4e, 0x5d, 0x97, 0xa7, 0xd1, 0x7c, 0xc3, 0x97, 0xba, 0xf7, 0x27, 0x00,
	0x00, 0xff, 0xff, 0xee, 0x9f, 0x6d, 0xa0, 0x3a, 0x03, 0x00, 0x00,
}

func (m *FilterConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FilterConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FilterConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PerMethodStatSpecifier != nil {
		{
			size := m.PerMethodStatSpecifier.Size()
			i -= size
			if _, err := m.PerMethodStatSpecifier.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.EmitFilterState {
		i--
		if m.EmitFilterState {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *FilterConfig_IndividualMethodStatsAllowlist) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FilterConfig_IndividualMethodStatsAllowlist) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.IndividualMethodStatsAllowlist != nil {
		{
			size, err := m.IndividualMethodStatsAllowlist.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfig(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *FilterConfig_StatsForAllMethods) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FilterConfig_StatsForAllMethods) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.StatsForAllMethods != nil {
		{
			size, err := m.StatsForAllMethods.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConfig(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *FilterObject) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FilterObject) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FilterObject) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ResponseMessageCount != 0 {
		i = encodeVarintConfig(dAtA, i, uint64(m.ResponseMessageCount))
		i--
		dAtA[i] = 0x10
	}
	if m.RequestMessageCount != 0 {
		i = encodeVarintConfig(dAtA, i, uint64(m.RequestMessageCount))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintConfig(dAtA []byte, offset int, v uint64) int {
	offset -= sovConfig(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *FilterConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.EmitFilterState {
		n += 2
	}
	if m.PerMethodStatSpecifier != nil {
		n += m.PerMethodStatSpecifier.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FilterConfig_IndividualMethodStatsAllowlist) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.IndividualMethodStatsAllowlist != nil {
		l = m.IndividualMethodStatsAllowlist.Size()
		n += 1 + l + sovConfig(uint64(l))
	}
	return n
}
func (m *FilterConfig_StatsForAllMethods) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.StatsForAllMethods != nil {
		l = m.StatsForAllMethods.Size()
		n += 1 + l + sovConfig(uint64(l))
	}
	return n
}
func (m *FilterObject) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RequestMessageCount != 0 {
		n += 1 + sovConfig(uint64(m.RequestMessageCount))
	}
	if m.ResponseMessageCount != 0 {
		n += 1 + sovConfig(uint64(m.ResponseMessageCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovConfig(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozConfig(x uint64) (n int) {
	return sovConfig(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *FilterConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FilterConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FilterConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EmitFilterState", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EmitFilterState = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IndividualMethodStatsAllowlist", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfig
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &core.GrpcMethodList{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.PerMethodStatSpecifier = &FilterConfig_IndividualMethodStatsAllowlist{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatsForAllMethods", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConfig
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &types.BoolValue{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.PerMethodStatSpecifier = &FilterConfig_StatsForAllMethods{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipConfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfig
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthConfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FilterObject) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FilterObject: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FilterObject: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestMessageCount", wireType)
			}
			m.RequestMessageCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RequestMessageCount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResponseMessageCount", wireType)
			}
			m.ResponseMessageCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ResponseMessageCount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipConfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfig
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthConfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipConfig(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowConfig
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthConfig
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupConfig
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthConfig
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthConfig        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowConfig          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupConfig = fmt.Errorf("proto: unexpected end of group")
)
