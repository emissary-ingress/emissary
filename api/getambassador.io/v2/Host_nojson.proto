/**
 * === HACK HACK HACK ===
 *
 * The existence of Host_nojson.proto is because if we bring in all the
 * k8s.io types that we would want to, the generated *.pb.json.go files try
 * to import github.com/gogo/protobuf/jsonpb, and that turns out to crash on
 * some of the k8s.io types. Sigh.
 *
 * So, instead, we split out the minimal high-level stuff we need in most of
 * of the Go code into this file, which doesn't have any of the breaking types,
 * and makes life easier. For more information on this brutal hackery, see
 * https://github.com/datawire/ambassador/pull/1999#issuecomment-548939518.
 *
 * === end hack ===
 *
 * Host defines a way that an Ambassador will be visible to the
 * outside world. A minimal Host defines a hostname (of course) by
 * which the Ambassador will be reachable, but a Host can also
 * tell an Ambassador how to manage TLS, and which resources to 
 * examine for further configuration.
 */
syntax = "proto3";

package getambassador.io.v2;

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "getambassador.io/v2/Host.proto";

message Host {
  k8s.io.apimachinery.pkg.apis.meta.v1.TypeMeta type_meta = 1 [(gogoproto.embed) = true, (gogoproto.jsontag) = ",omitempty"];

  // Standard object's metadata.
  // More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
  k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 2 [(gogoproto.embed) = true];

  // Specification of the desired behavior of the Host.
  // More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
  getambassador.io.v2.HostSpec spec = 3;

  // Most recently observed status of the Host.
  // This data may not be up to date.
  // Populated by AES.
  // More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
  getambassador.io.v2.HostStatus status = 4;
}
