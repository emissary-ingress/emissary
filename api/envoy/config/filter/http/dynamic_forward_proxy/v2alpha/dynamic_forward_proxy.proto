syntax = "proto3";

package envoy.config.filter.http.dynamic_forward_proxy.v2alpha;

option java_outer_classname = "DynamicForwardProxyProto";
option java_multiple_files = true;
option java_package = "io.envoyproxy.envoy.config.filter.http.dynamic_forward_proxy.v2alpha";

import "envoy/config/common/dynamic_forward_proxy/v2alpha/dns_cache.proto";

import "validate/validate.proto";

// [#protodoc-title: Dynamic forward proxy]

// Configuration for the dynamic forward proxy HTTP filter. See the :ref:`architecture overview
// <arch_overview_http_dynamic_forward_proxy>` for more information.
message FilterConfig {
  // The DNS cache configuration that the filter will attach to. Note this configuration must
  // match that of associated :ref:`dynamic forward proxy cluster configuration
  // <envoy_api_field_config.cluster.dynamic_forward_proxy.v2alpha.ClusterConfig.dns_cache_config>`.
  common.dynamic_forward_proxy.v2alpha.DnsCacheConfig dns_cache_config = 1
      [(validate.rules).message = {required: true}];
}

// Per route Configuration for the dynamic forward proxy HTTP filter.
message PerRouteConfig {
  // Indicates that before DNS lookup, the host header will be swapped with
  // this value. If not set or empty, the original host header value
  // will be used and no rewrite will happen.
  string host_rewrite = 1;
}
