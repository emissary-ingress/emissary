---
# SPDX-FileCopyrightText:
# SPDX-License-Identifier: Apache-2.0
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json

version: 2

# Allow overriding the registry and image name with environment variables.
env:
  - ENVOY_IMAGE=envoyproxy/envoy:distroless-v1.30.3
  - REGISTRY={{ if index .Env "REGISTRY"  }}{{ .Env.REGISTRY }}{{ else }}ghcr.io/emissary-ingress{{ end }}
  - EMISSARY_IMAGE={{ if index .Env "EMISSARY_IMAGE"  }}{{ .Env.EMISSARY_IMAGE }}{{ else }}emissary{{ end }}
  - APIEXT_IMAGE={{ if index .Env "APIEXT_IMAGE"  }}{{ .Env.APIEXT_IMAGE }}{{ else }}apiext{{ end }}
  - TEST_AUTH_IMAGE={{ if index .Env "TEST_AUTH_IMAGE"  }}{{ .Env.TEST_AUTH_IMAGE }}{{ else }}test-auth{{ end }}
  - TEST_SHADOW_IMAGE={{ if index .Env "TEST_SHADOW_IMAGE"  }}{{ .Env.TEST_SHADOW_IMAGE }}{{ else }}test-shadow{{ end }}
  - TEST_STATS_IMAGE={{ if index .Env "TEST_STATS_IMAGE"  }}{{ .Env.TEST_STATS_IMAGE }}{{ else }}test-stats{{ end }}
  - KAT_CLIENT_IMAGE={{ if index .Env "KAT_CLIENT_IMAGE"  }}{{ .Env.KAT_CLIENT_IMAGE }}{{ else }}kat-client{{ end }}
  - KAT_SERVER_IMAGE={{ if index .Env "KAT_SERVER_IMAGE"  }}{{ .Env.KAT_SERVER_IMAGE }}{{ else }}kat-server{{ end }}

before:
  hooks:
    - go mod tidy
    - rm -rf python/ambassador.version
    - make VERSION=v{{ .Version }} python/ambassador.version
    # Make the chart as part of the build process.
    - make VERSION=v{{ .Version }} chart

builds:
  - id: busyambassador
    main: ./cmd/busyambassador
    binary: busyambassador
    env:
      - CGO_ENABLED=0
    goos:
      - linux
    goarch:
      - arm64
      - amd64

  - id: kat-client
    main: ./cmd/kat-client
    binary: kat-client
    env:
      - CGO_ENABLED=0
    goos:
      - linux
    goarch:
      - arm64
      - amd64

  - id: kat-server
    main: ./cmd/kat-server
    binary: kat-server
    env:
      - CGO_ENABLED=0
    goos:
      - linux
    goarch:
      - arm64
      - amd64

  - id: apiext
    main: ./cmd/apiext
    binary: apiext
    env:
      - CGO_ENABLED=0
    goos:
      - linux
    goarch:
      - arm64
      - amd64

# We build a lot of images for both arm64 and amd64, then build a multi-arch
# manifest from them.
dockers:
  ## Emissary
  - use: buildx
    goos: linux
    goarch: arm64
    dockerfile: docker/emissary/Dockerfile
    ids:
      - busyambassador
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.EMISSARY_IMAGE }}:{{ .Version }}-arm64"
      - "{{ .Env.REGISTRY }}/{{ .Env.EMISSARY_IMAGE }}:latest-arm64"
    build_flag_templates:
      - --platform=linux/arm64
      - --build-arg=LIBARCH=aarch64
      - --build-arg=ENVOY_IMAGE={{ .Env.ENVOY_IMAGE }}
    extra_files:
      - python
      - pyproject.toml

  - use: buildx
    goos: linux
    goarch: amd64
    dockerfile: docker/emissary/Dockerfile
    ids:
      - busyambassador
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.EMISSARY_IMAGE }}:{{ .Version }}-amd64"
      - "{{ .Env.REGISTRY }}/{{ .Env.EMISSARY_IMAGE }}:latest-amd64"
    build_flag_templates:
      - --platform=linux/amd64
      - --build-arg=LIBARCH=x86_64
      - --build-arg=ENVOY_IMAGE={{ .Env.ENVOY_IMAGE }}
    extra_files:
      - python
      - pyproject.toml

  ## apiext
  - use: buildx
    goos: linux
    goarch: arm64
    dockerfile: docker/apiext/Dockerfile
    ids:
      - apiext
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.APIEXT_IMAGE }}:{{ .Version }}-arm64"
      - "{{ .Env.REGISTRY }}/{{ .Env.APIEXT_IMAGE }}:latest-arm64"
    build_flag_templates:
      - --platform=linux/arm64
      - --build-arg=LIBARCH=aarch64

  - use: buildx
    goos: linux
    goarch: amd64
    dockerfile: docker/apiext/Dockerfile
    ids:
      - apiext
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.APIEXT_IMAGE }}:{{ .Version }}-amd64"
      - "{{ .Env.REGISTRY }}/{{ .Env.APIEXT_IMAGE }}:latest-amd64"
    build_flag_templates:
      - --platform=linux/amd64
      - --build-arg=LIBARCH=x86_64

  ## test-auth
  - use: buildx
    goos: linux
    goarch: arm64
    dockerfile: docker/test-auth/Dockerfile
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.TEST_AUTH_IMAGE }}:{{ .Version }}-arm64"
      - "{{ .Env.REGISTRY }}/{{ .Env.TEST_AUTH_IMAGE }}:latest-arm64"
    build_flag_templates:
      - --platform=linux/arm64
      - --build-arg=LIBARCH=aarch64
    extra_files:
      - docker/test-auth

  - use: buildx
    goos: linux
    goarch: amd64
    dockerfile: docker/test-auth/Dockerfile
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.TEST_AUTH_IMAGE }}:{{ .Version }}-amd64"
      - "{{ .Env.REGISTRY }}/{{ .Env.TEST_AUTH_IMAGE }}:latest-amd64"
    build_flag_templates:
      - --platform=linux/amd64
      - --build-arg=LIBARCH=x86_64
    extra_files:
      - docker/test-auth

  ## test-shadow
  - use: buildx
    goos: linux
    goarch: arm64
    dockerfile: docker/test-shadow/Dockerfile
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.TEST_SHADOW_IMAGE }}:{{ .Version }}-arm64"
      - "{{ .Env.REGISTRY }}/{{ .Env.TEST_SHADOW_IMAGE }}:latest-arm64"
    build_flag_templates:
      - --platform=linux/arm64
      - --build-arg=LIBARCH=aarch64
    extra_files:
      - docker/test-shadow

  - use: buildx
    goos: linux
    goarch: amd64
    dockerfile: docker/test-shadow/Dockerfile
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.TEST_SHADOW_IMAGE }}:{{ .Version }}-amd64"
      - "{{ .Env.REGISTRY }}/{{ .Env.TEST_SHADOW_IMAGE }}:latest-amd64"
    build_flag_templates:
      - --platform=linux/amd64
      - --build-arg=LIBARCH=x86_64
    extra_files:
      - docker/test-shadow

  ## test-stats
  - use: buildx
    goos: linux
    goarch: arm64
    dockerfile: docker/test-stats/Dockerfile
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.TEST_STATS_IMAGE }}:{{ .Version }}-arm64"
      - "{{ .Env.REGISTRY }}/{{ .Env.TEST_STATS_IMAGE }}:latest-arm64"
    build_flag_templates:
      - --platform=linux/arm64
      - --build-arg=LIBARCH=aarch64
    extra_files:
      - docker/test-stats

  - use: buildx
    goos: linux
    goarch: amd64
    dockerfile: docker/test-stats/Dockerfile
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.TEST_STATS_IMAGE }}:{{ .Version }}-amd64"
      - "{{ .Env.REGISTRY }}/{{ .Env.TEST_STATS_IMAGE }}:latest-amd64"
    build_flag_templates:
      - --platform=linux/amd64
      - --build-arg=LIBARCH=x86_64
    extra_files:
      - docker/test-stats

  ## kat-client
  - use: buildx
    goos: linux
    goarch: arm64
    dockerfile: docker/kat-client/Dockerfile
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.KAT_CLIENT_IMAGE }}:{{ .Version }}-arm64"
      - "{{ .Env.REGISTRY }}/{{ .Env.KAT_CLIENT_IMAGE }}:latest-arm64"
    build_flag_templates:
      - --platform=linux/arm64
      - --build-arg=LIBARCH=aarch64
    extra_files:
      - docker/kat-client

  - use: buildx
    goos: linux
    goarch: amd64
    dockerfile: docker/kat-client/Dockerfile
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.KAT_CLIENT_IMAGE }}:{{ .Version }}-amd64"
      - "{{ .Env.REGISTRY }}/{{ .Env.KAT_CLIENT_IMAGE }}:latest-amd64"
    build_flag_templates:
      - --platform=linux/amd64
      - --build-arg=LIBARCH=x86_64
    extra_files:
      - docker/kat-client

  ## kat-server
  - use: buildx
    goos: linux
    goarch: arm64
    dockerfile: docker/kat-server/Dockerfile
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.KAT_SERVER_IMAGE }}:{{ .Version }}-arm64"
      - "{{ .Env.REGISTRY }}/{{ .Env.KAT_SERVER_IMAGE }}:latest-arm64"
    build_flag_templates:
      - --platform=linux/arm64
      - --build-arg=LIBARCH=aarch64
    extra_files:
      - docker/kat-server

  - use: buildx
    goos: linux
    goarch: amd64
    dockerfile: docker/kat-server/Dockerfile
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.KAT_SERVER_IMAGE }}:{{ .Version }}-amd64"
      - "{{ .Env.REGISTRY }}/{{ .Env.KAT_SERVER_IMAGE }}:latest-amd64"
    build_flag_templates:
      - --platform=linux/amd64
      - --build-arg=LIBARCH=x86_64
    extra_files:
      - docker/kat-server

docker_manifests:
  - name_template: "{{ .Env.REGISTRY }}/{{ .Env.EMISSARY_IMAGE }}:{{ .Version }}"
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.EMISSARY_IMAGE }}:{{ .Version }}-arm64"
      - "{{ .Env.REGISTRY }}/{{ .Env.EMISSARY_IMAGE }}:{{ .Version }}-amd64"
    create_flags:
      - --insecure
    push_flags:
      - --insecure

  - name_template: "{{ .Env.REGISTRY }}/{{ .Env.EMISSARY_IMAGE }}:latest"
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.EMISSARY_IMAGE }}:latest-arm64"
      - "{{ .Env.REGISTRY }}/{{ .Env.EMISSARY_IMAGE }}:latest-amd64"
    create_flags:
      - --insecure
    push_flags:
      - --insecure

  - name_template: "{{ .Env.REGISTRY }}/{{ .Env.APIEXT_IMAGE }}:{{ .Version }}"
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.APIEXT_IMAGE }}:{{ .Version }}-arm64"
      - "{{ .Env.REGISTRY }}/{{ .Env.APIEXT_IMAGE }}:{{ .Version }}-amd64"
    create_flags:
      - --insecure
    push_flags:
      - --insecure

  - name_template: "{{ .Env.REGISTRY }}/{{ .Env.APIEXT_IMAGE }}:latest"
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.APIEXT_IMAGE }}:latest-arm64"
      - "{{ .Env.REGISTRY }}/{{ .Env.APIEXT_IMAGE }}:latest-amd64"
    create_flags:
      - --insecure
    push_flags:
      - --insecure

  - name_template: "{{ .Env.REGISTRY }}/{{ .Env.TEST_AUTH_IMAGE }}:{{ .Version }}"
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.TEST_AUTH_IMAGE }}:{{ .Version }}-arm64"
      - "{{ .Env.REGISTRY }}/{{ .Env.TEST_AUTH_IMAGE }}:{{ .Version }}-amd64"
    create_flags:
      - --insecure
    push_flags:
      - --insecure

  - name_template: "{{ .Env.REGISTRY }}/{{ .Env.TEST_AUTH_IMAGE }}:latest"
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.TEST_AUTH_IMAGE }}:latest-arm64"
      - "{{ .Env.REGISTRY }}/{{ .Env.TEST_AUTH_IMAGE }}:latest-amd64"
    create_flags:
      - --insecure
    push_flags:
      - --insecure

  - name_template: "{{ .Env.REGISTRY }}/{{ .Env.TEST_SHADOW_IMAGE }}:{{ .Version }}"
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.TEST_SHADOW_IMAGE }}:{{ .Version }}-arm64"
      - "{{ .Env.REGISTRY }}/{{ .Env.TEST_SHADOW_IMAGE }}:{{ .Version }}-amd64"
    create_flags:
      - --insecure
    push_flags:
      - --insecure

  - name_template: "{{ .Env.REGISTRY }}/{{ .Env.TEST_SHADOW_IMAGE }}:latest"
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.TEST_SHADOW_IMAGE }}:latest-arm64"
      - "{{ .Env.REGISTRY }}/{{ .Env.TEST_SHADOW_IMAGE }}:latest-amd64"
    create_flags:
      - --insecure
    push_flags:
      - --insecure

  - name_template: "{{ .Env.REGISTRY }}/{{ .Env.TEST_STATS_IMAGE }}:{{ .Version }}"
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.TEST_STATS_IMAGE }}:{{ .Version }}-arm64"
      - "{{ .Env.REGISTRY }}/{{ .Env.TEST_STATS_IMAGE }}:{{ .Version }}-amd64"
    create_flags:
      - --insecure
    push_flags:
      - --insecure

  - name_template: "{{ .Env.REGISTRY }}/{{ .Env.TEST_STATS_IMAGE }}:latest"
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.TEST_STATS_IMAGE }}:latest-arm64"
      - "{{ .Env.REGISTRY }}/{{ .Env.TEST_STATS_IMAGE }}:latest-amd64"
    create_flags:
      - --insecure
    push_flags:
      - --insecure

  - name_template: "{{ .Env.REGISTRY }}/{{ .Env.KAT_CLIENT_IMAGE }}:{{ .Version }}"
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.KAT_CLIENT_IMAGE }}:{{ .Version }}-arm64"
      - "{{ .Env.REGISTRY }}/{{ .Env.KAT_CLIENT_IMAGE }}:{{ .Version }}-amd64"
    create_flags:
      - --insecure
    push_flags:
      - --insecure

  - name_template: "{{ .Env.REGISTRY }}/{{ .Env.KAT_CLIENT_IMAGE }}:latest"
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.KAT_CLIENT_IMAGE }}:latest-arm64"
      - "{{ .Env.REGISTRY }}/{{ .Env.KAT_CLIENT_IMAGE }}:latest-amd64"
    create_flags:
      - --insecure
    push_flags:
      - --insecure

  - name_template: "{{ .Env.REGISTRY }}/{{ .Env.KAT_SERVER_IMAGE }}:{{ .Version }}"
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.KAT_SERVER_IMAGE }}:{{ .Version }}-arm64"
      - "{{ .Env.REGISTRY }}/{{ .Env.KAT_SERVER_IMAGE }}:{{ .Version }}-amd64"
    create_flags:
      - --insecure
    push_flags:
      - --insecure

  - name_template: "{{ .Env.REGISTRY }}/{{ .Env.KAT_SERVER_IMAGE }}:latest"
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .Env.KAT_SERVER_IMAGE }}:latest-arm64"
      - "{{ .Env.REGISTRY }}/{{ .Env.KAT_SERVER_IMAGE }}:latest-amd64"
    create_flags:
      - --insecure
    push_flags:
      - --insecure

# archives:
#   - id: generic
#     name_template: '{{ .ProjectName }}_generic_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}'
#     builds:
#       - generic
#   - id: pi
#     name_template: '{{ .ProjectName }}_pi_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}'
#     builds:
#       - pi

# changelog:
#   sort: asc
#   filters:
#     exclude:
#       - "^docs:"
#       - "^test:"

release:
  draft: true
  prerelease: "true"
  make_latest: false
  replace_existing_draft: true
