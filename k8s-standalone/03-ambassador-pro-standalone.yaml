# @TEMPLATE@

######################################################################
# Create a ClusterRole+ClusterRoleBinding+ServiceAccount for
# ambassador-pro-oauth that has access to the CRDs that we will
# create for it below
#
# NB: ClusterRoles and ClusterRoleBindings are not namespaced
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: ambassador-pro-standalone
rules:
- apiGroups: ["stable.datawire.io"]
  resources:
  - policies
  - tenants
  verbs: ["get", "list", "watch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ambassador-pro-oauth
  namespace: standalone
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: ambassador-pro-standalone
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ambassador-pro-standalone
subjects:
- kind: ServiceAccount
  name: ambassador-pro-oauth
  namespace: standalone


######################################################################
# Create a CRDs used to configure ambassador-pro-oauth
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  # XXX: what is group name supposed to mean???
  name: policies.stable.datawire.io
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: stable.datawire.io
  # list of versions supported by this CustomResourceDefinition
  version: v1beta1
  versions:
    - name: v1beta1
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: true
  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: policies
    # singular name to be used as an alias on the CLI and for display
    singular: policy
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: Policy
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
    - pol
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  # XXX: what is group name supposed to mean???
  name: tenants.stable.datawire.io
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: stable.datawire.io
  # list of versions supported by this CustomResourceDefinition
  version: v1beta1
  versions:
    - name: v1beta1
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: true
  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: tenants
    # singular name to be used as an alias on the CLI and for display
    singular: tenant
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: Tenant
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
    - ten


######################################################################
# Create the ambassador-pro-oauth Service+Deployment
---
apiVersion: v1
kind: Service
metadata:
  name: ambassador-pro-oauth
  namespace: standalone
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v0
      kind:  AuthService
      name:  authentication
      auth_service: ambassador-pro-oauth
      allowed_headers:
       - "Authorization"
       - "Client-Id"
       - "Client-Secret"
       - "X-Forwarded-Proto"
      ---
      apiVersion: ambassador/v0
      kind:  Mapping
      name:  callback_mapping
      prefix: /callback
      service: ambassador-pro-oauth
      timeout_ms: 5000
spec:
  type: ClusterIP
  selector:
    name: ambassador-pro-oauth
  ports:
  - protocol: TCP 
    port: 80
    targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ambassador-pro-oauth
  namespace: standalone
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      name: ambassador-pro-oauth
  template:
    metadata:
      labels:
        name: ambassador-pro-oauth
    spec:
      serviceAccountName: ambassador-pro-oauth
      containers:
      - name: ambassador-pro-oauth
        image: {{env "IMAGE"}}
        ports:
        - containerPort: 8080
        env:
          - name: AUTH_PROVIDER_URL
            value: {{env "AUTH_PROVIDER_URL"}}
          - name: AMBASSADOR_LICENSE_KEY
            value: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImRldiIsImV4cCI6NDcwMDgyNjEzM30.wCxi5ICR6C5iEz6WkKpurNItK3zER12VNhM8F1zGkA8
