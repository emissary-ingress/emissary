# @TEMPLATE@
#
# This file is roughly:
# https://getambassador.io/yaml/ambassador/pro/ambassador-pro.yaml
# but:
#  - split in to sections, for readability
#  - modified to work with Kubernaut
#  - in the "standalone" namespace
#  - with the "telepresence-proxy" Service+Deployment added

### RBAC and CRDs moved to 02-ambassador-pro-rbac-and-crds.yaml

######################################################################
# Redis for Ambassador Pro
---
apiVersion: v1
kind: Service
metadata:
  name: ambassador-pro-redis
  namespace: standalone
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    service: ambassador-pro-redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ambassador-pro-redis
  namespace: standalone
spec:
  replicas: 1
  selector:
    matchLabels:
      service: ambassador-pro-redis
  template:
    metadata:
      labels:
        service: ambassador-pro-redis
    spec:
      containers:
      - name: redis
        image: redis:5.0.1
      restartPolicy: Always


######################################################################
# Create the ambassador-pro Service+Deployment
---
apiVersion: v1
kind: Service
metadata:
  name: ambassador-pro
  namespace: standalone
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v1
      kind: RateLimitService
      name: ambassador-pro
      service: "ambassador-pro:80"
      ---
      apiVersion: ambassador/v1
      kind: AuthService
      name: authentication
      proto: grpc
      status_on_error:
        code: 504
      auth_service: "ambassador-pro:80"
      allow_request_body: false # setting this to 'true' allows Plugin and External filters to access the body, but has performance overhead
      ---
      # Dev Portal
      apiVersion: ambassador/v1
      kind: Mapping
      name: ambassador-pro-devportal
      prefix: /docs/
      rewrite: ""
      add_response_headers:
        x-test-proto: "%PROTOCOL%"
        x-test-ip: "%DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT%"
        x-test-static: This is apro standalone mapping
      service: "ambassador-pro:80"
      ---
      apiVersion: ambassador/v1
      kind: Mapping
      name: ambassador-pro-devportal-api
      prefix: /openapi/
      rewrite: ""
      add_response_headers:
        x-test-proto: "%PROTOCOL%"
        x-test-ip: "%DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT%"
        x-test-static: This is apro standalone api mapping
      service: "ambassador-pro:80"
      ---
      # This mapping needs to exist, but is never actually followed.
      apiVersion: ambassador/v1
      kind: Mapping
      name: callback_mapping
      prefix: /callback
      service: NoTaReAlSeRvIcE
spec:
  type: ClusterIP
  selector:
    service: ambassador-pro
  ports:
  - name: http
    port: 80
    targetPort: http
---
apiVersion: getambassador.io/v1beta2
kind: FilterPolicy
metadata:
  name: apro-internal-access-control
  namespace: standalone
spec:
  rules:
    - host: "*"
      path: "*/.ambassador-internal/*"
      filters:
        - name: apro-internal-access-control
---
apiVersion: getambassador.io/v1beta2
kind: Filter
metadata:
  name: apro-internal-access-control
  namespace: standalone
spec:
  Internal: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ambassador-pro
  namespace: standalone
spec:
  replicas: 1
  selector:
    matchLabels:
      service: ambassador-pro
  template:
    metadata:
      labels:
        service: ambassador-pro
    spec:
      serviceAccountName: ambassador-pro
      terminationGracePeriodSeconds: 0
      containers:
      - name: ambassador-pro
        image: {{env "AMB_SIDECAR_IMAGE"}}
        livenessProbe:
          httpGet:
            path: /_/sys/healthz
            port: 8500
          initialDelaySeconds: 30
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /_/sys/readyz
            port: 8500
          initialDelaySeconds: 30
          periodSeconds: 5
        ports:
        - name: http
          containerPort: 8500
        env:
        - name: APP_LOG_LEVEL
          value: DEBUG
        - name: REDIS_SOCKET_TYPE
          value: tcp
        - name: REDIS_URL
          value: ambassador-pro-redis:6379
        - name: AMBASSADOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AMBASSADOR_SINGLE_NAMESPACE
          value: "true"
        - name: AMBASSADOR_LICENSE_KEY
          value: {{env "AMBASSADOR_LICENSE_KEY"}}
        # DevPortal settings
        - name: AMBASSADOR_URL
          value: "https://ambassador.standalone.svc.cluster.local"
        # Change this if you want different poll rate for getting OpenAPI docs:
        - name: POLL_EVERY_SECS
          value: "60"
        - name: AMBASSADOR_INTERNAL_URL
          value: "https://ambassador.standalone.svc.cluster.local:443"
        - name: AMBASSADOR_ADMIN_URL
          value: "http://ambassador-admin.standalone:8877"


######################################################################
# Create the traffic-proxy Service+Deployment
#
# Does this *need* to be a standalone service, or can it be part of
# the main ambassador-pro deployment?  IDK.  --lukeshu
---
apiVersion: v1
kind: Service
metadata:
  name: telepresence-proxy
  namespace: standalone
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: telepresence-proxy
  ports:
  - name: sshd
    protocol: TCP
    port: 8022
  - name: api
    protocol: TCP
    port: 8081
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: telepresence-proxy
  namespace: standalone
  labels:
    app: telepresence-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: telepresence-proxy
  template:
    metadata:
      labels:
        app: telepresence-proxy
    spec:
      containers:
      - name: telepresence-proxy
        image: {{env "PROXY_IMAGE"}}
        ports:
        - name: sshd
          containerPort: 8022
        env:
        - name: AMBASSADOR_LICENSE_KEY
          value: {{env "AMBASSADOR_LICENSE_KEY"}}
