---
apiVersion: v1
kind: Service
metadata:
  name: ambassador-pro-auth
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v1
      kind: Mapping
      name: callback_mapping
      prefix: /callback
      service: ambassador-pro-auth
      ---
      apiVersion: ambassador/v1
      kind: AuthService
      name: ambassador-pro-auth
      proto: http
      auth_service: ambassador-pro-auth
      allowed_request_headers:
      - "Client-Id"
      - "Client-Secret"
      allowed_authorization_headers:
      - "Authorization"
      - "Client-Id"
      - "Client-Secret"
spec:
  type: ClusterIP
  selector:
    service: ambassador
  ports:
  - name: auth-http
    port: 80
    targetPort: 8082
---
apiVersion: v1
kind: Service
metadata:
  name: ambassador-pro-ratelimit
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v1
      kind: RateLimitService
      name: ambassador-pro-ratelimit
      service: "ambassador-pro-ratelimit:8081"
spec:
  type: ClusterIP
  selector:
    service: ambassador
  ports:
  - name: http
    port: 8081
    targetPort: ratelimit-grpc
  - name: debug
    port: 6070
    targetPort: ratelimit-debug
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: ambassador
rules:
- apiGroups: [""]
  resources:
  - services
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["create", "update", "patch", "get", "list", "watch"]
- apiGroups: [""]
  resources:
  - secrets
  verbs: ["get", "list", "watch"]
- apiGroups: ["getambassador.io"]
  resources:
  - filters
  - ratelimits
  - filterpolicies
  verbs: ["get", "list", "watch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ambassador
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: ambassador
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ambassador
subjects:
- kind: ServiceAccount
  name: ambassador
  namespace: default


######################################################################
# Create a CRDs used to configure ambassador-pro
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: filterpolicies.getambassador.io
spec:
  group: getambassador.io
  version: v1beta2
  versions:
  - name: v1beta2
    served: true
    storage: true
  scope: Namespaced
  names:
    plural: filterpolicies
    singular: filterpolicy
    kind: FilterPolicy
    shortNames:
    - fp
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: filters.getambassador.io
spec:
  group: getambassador.io
  version: v1beta2
  versions:
  - name: v1beta2
    served: true
    storage: true
  scope: Namespaced
  names:
    plural: filters
    singular: filter
    kind: Filter
    shortNames:
    - fil
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: ratelimits.getambassador.io
spec:
  group: getambassador.io
  version: v1beta1
  versions:
    - name: v1beta1
      served: true
      storage: true
  scope: Namespaced
  names:
    plural: ratelimits
    singular: ratelimit
    kind: RateLimit
    shortNames:
    - rl


######################################################################
# Redis for Ambassador Pro ratelimit
---
apiVersion: v1
kind: Service
metadata:
  name: ambassador-pro-redis
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    service: ambassador-pro-redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ambassador-pro-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      service: ambassador-pro-redis
  template:
    metadata:
      labels:
        service: ambassador-pro-redis
    spec:
      containers:
      - name: redis
        image: redis:5.0.1
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: ambassador-admin
  name: ambassador-admin
spec:
  type: NodePort
  ports:
  - name: ambassador-admin
    port: 8877
    targetPort: 8877
  selector:
    service: ambassador
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ambassador
spec:
  replicas: 1
  selector:
    matchLabels:
      service: ambassador
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
        "consul.hashicorp.com/connect-inject": "false"
      labels:
        service: ambassador
    spec:
      serviceAccountName: ambassador
      containers:
      - name: ambassador
        image: quay.io/datawire/ambassador:0.52.0
        resources:
          limits:
            cpu: 1
            memory: 400Mi
          requests:
            cpu: 200m
            memory: 100Mi
        env:
        - name: AMBASSADOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: STATSD_ENABLED
          value: "true"
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        - name: admin
          containerPort: 8877
        livenessProbe:
          httpGet:
            path: /ambassador/v0/check_alive
            port: 8877
          initialDelaySeconds: 30
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /ambassador/v0/check_ready
            port: 8877
          initialDelaySeconds: 30
          periodSeconds: 3
      - name: ambassador-pro
        image: quay.io/datawire/ambassador_pro:amb-sidecar-0.2.3
        ports:
        - name: ratelimit-grpc
          containerPort: 8081
        - name: ratelimit-debug
          containerPort: 6070
        - name: auth-http
          containerPort: 8082
        env:
        - name: REDIS_SOCKET_TYPE 
          value: tcp
        - name: APP_LOG_LEVEL
          value: "debug"
        - name: REDIS_URL 
          value: ambassador-pro-redis:6379
        - name: AMBASSADOR_LICENSE_KEY 
          value: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Im5rcmF1c2UiLCJleHAiOjE1Nzg0MTg4ODZ9.S_6-zdPyy4z1N4Jmo5e4A7WME4CbQVLqnIn_13i5ikw
      restartPolicy: Always
