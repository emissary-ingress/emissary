---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: ambassador-pro-consul-connect
rules:
  - apiGroups: [""]
    resources:
      - secrets
    verbs: ["get", "list", "create", "delete", "patch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ambassador-pro-consul-connect
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ambassador-pro-consul-connect
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ambassador-pro-consul-connect
subjects:
  - kind: ServiceAccount
    name: ambassador-pro-consul-connect
    namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ambassador-pro-consul-connect-integration
  labels:
    app: ambassador-pro
    component: consul-connect
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ambassador-pro
      component: consul-connect
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ambassador-pro
        component: consul-connect
      annotations:
        "consul.hashicorp.com/connect-inject": "false"
    spec:
      serviceAccountName: ambassador-pro-consul-connect
      imagePullSecrets:
        - name: ambassador-pro-registry-credentials
      terminationGracePeriodSeconds: 0
      containers:
        - name: consul-connect-integration
          image: quay.io/datawire/ambassador_pro:consul_connect_integration-%aproVersion%
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 50Mi
          env:
            # Consul runs as a DaemonSet on each Node therefore we need to talk to the Host machine.
            # See: https://www.consul.io/docs/platform/k8s/run.html#architecture
            - name: _CONSUL_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
