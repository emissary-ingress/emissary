---
apiVersion: getambassador.io/v1beta2
kind: FilterPolicy
metadata:
  name: internal-access-control
  namespace: default
spec:
  rules:
    - host: "*"
      path: "*/.ambassador-internal/*"
      filters:
        - name: internal-access-control
---
apiVersion: getambassador.io/v1beta2
kind: Filter
metadata:
  name: internal-access-control
  namespace: default
spec:
  External:
    auth_service: "internal-access-control:5000"
    path_prefix: "/extauth"
    proto: http
    allowed_request_headers:
    - "x-ambassador-internal-auth"
    allow_request_body: false
---
apiVersion: v1
kind: Service
metadata:
  name: internal-access-control
spec:
  type: ClusterIP
  selector:
    app: internal-access-control
  ports:
  - port: 5000
    name: http-auth
    targetPort: http-api
---
apiVersion: v1
kind: Secret
metadata:
  name: internal-access-control
  annotations:
    kubernetes.io/service-account.name: ambassador-pro
type: kubernetes.io/service-account-token
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: internal-access-control
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: internal-access-control
    spec:
      containers:
      - name: internal-access-control
        image: quay.io/ambassador/ambassador_pro:apro-internal-access-0.4.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: http-api
          containerPort: 5000
        volumeMounts:
          - name: ambassador-auth-secret
            mountPath: /etc/apro-internal-access
            readOnly: true
        resources:
          limits:
            memory: 100Mi
      volumes:
        - name: ambassador-auth-secret
          secret:
            secretName: internal-access-control
            items:
              - key: token
                path: shared-secret
